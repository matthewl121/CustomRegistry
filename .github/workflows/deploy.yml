name: Deploy to EC2

on:
  push:
    branches:
      - aws_cd_dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fix file permissions
        run: |
          chmod -R 755 .
          git config --global --add safe.directory '*'

      - name: Set executable permissions for ./run
        run: chmod +x run

      - name: Create .env file
        run: |
          echo "GITHUB_TOKEN=${{ secrets.TOKEN }}" >> .env
          echo "LOG_FILE=/LOGS/log_file.txt" >> .env
          echo "LOG_LEVEL=2" >> .env # Add other environment variables as needed

      - name: Setup Source .env file
        run: set -a; source .env; set +a

      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "."
          target: "~/backend"
          strip_components: 1
          rm: true
          overwrite: true
          timeout: 120s

      - name: Install NVM, Node.js and Express
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
            source ~/.bashrc
            nvm install 18
            npm install express --no-fund --no-audit --loglevel=error

      - name: Install Dependencies and Configure
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            source ~/.bashrc
            cd ~/backend
            
            # Clean install to ensure consistent state
            rm -rf node_modules
            rm -f package-lock.json
            
            # Install dependencies with reduced noise
            npm install --no-fund --no-audit --loglevel=error typescript@latest @types/node@latest --save-dev
            npm install --no-fund --no-audit --loglevel=error @types/express@latest
            npm install --no-fund --no-audit --loglevel=error rimraf@latest
            npm install --no-fund --no-audit --loglevel=error
            
            # Initialize TypeScript configuration if not exists
            npx tsc --init || true
            
            set -a
            source .env
            set +a
            ./run install

      - name: Verify Deployment
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            echo "Verifying deployment..."
            source ~/.bashrc
            cd ~/backend
            echo "Node version:"
            node --version
            echo "NPM version:"
            npm --version
            echo "TypeScript version:"
            npx tsc --version
            echo "Express version:"
            npm list express
            echo "TypeScript installation:"
            npm list typescript
            echo "Directory contents:"
            ls -la node_modules/.bin/
