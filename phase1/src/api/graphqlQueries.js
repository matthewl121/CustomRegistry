"use strict";
exports.__esModule = true;
exports.getRepoDataQuery = void 0;
/**
* graphqlQueries.ts
* GraphQL query to fetch repository data via GitHub's GraphQL API
*/
var getRepoDataQuery = function (owner, repo) { return "\n{\n  repository(owner: \"".concat(owner, "\", name: \"").concat(repo, "\") {\n    # Fetch open issues\n    openIssues: issues(first: 100, states: [OPEN], orderBy: {field: CREATED_AT, direction: DESC}) {\n      totalCount\n      nodes {\n        createdAt\n        updatedAt\n        closedAt\n      }\n    }\n\n    # Fetch closed issues\n    closedIssues: issues(first: 100, states: [CLOSED], orderBy: {field: CREATED_AT, direction: DESC}) {\n      totalCount\n      nodes {\n        createdAt\n        updatedAt\n        closedAt\n      }\n    }\n\n    # Fetch pull requests\n    pullRequests(first: 100, orderBy: {field: CREATED_AT, direction: DESC}) {\n      totalCount\n      nodes {\n        createdAt\n        updatedAt\n        closedAt\n      }\n    }\n    \n    # Check if repo is archived\n    isArchived\n\n    # Fetch readme with lowercase filename\n    readmemd: object(expression: \"HEAD:readme.md\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    # Rest of readme variants with lowercase ...\n    readmenoext: object(expression: \"HEAD:readme\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    readmetxt: object(expression: \"HEAD:readme.txt\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    readmerdoc: object(expression: \"HEAD:readme.rdoc\") { \n      ... on Blob {\n        text\n      }\n    }\n\n    readmehtml: object(expression: \"HEAD:readme.html\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readmeadoc: object(expression: \"HEAD:readme.adoc\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readmemarkdown: object(expression: \"HEAD:readme.markdown\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readmeyaml: object(expression: \"HEAD:readme.yaml\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readmerst: object(expression: \"HEAD:readme.rst\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readmetextile: object(expression: \"HEAD:readme.textile\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    # Fetch readme with uppercase filename ...\n    READMEMD: object(expression: \"HEAD:README.md\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMENOEXT: object(expression: \"HEAD:README\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    READMETXT: object(expression: \"HEAD:README.txt\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMERDOC: object(expression: \"HEAD:README.rdoc\") { \n      ... on Blob {\n        text\n      }\n    }\n\n    READMEHTML: object(expression: \"HEAD:README.html\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMEADOC: object(expression: \"HEAD:README.adoc\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMEMARKDOWN: object(expression: \"HEAD:README.markdown\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMEYAML: object(expression: \"HEAD:README.yaml\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMERST: object(expression: \"HEAD:README.rst\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    READMETEXTILE: object(expression: \"HEAD:README.textile\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    # Rest of readme variants with mixed case ...\n    readMemd: object(expression: \"HEAD:readMe.md\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMenoext: object(expression: \"HEAD:readMe\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    readMetxt: object(expression: \"HEAD:readMe.txt\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMerdoc: object(expression: \"HEAD:readMe.rdoc\") { \n      ... on Blob {\n        text\n      }\n    }\n\n    readMehtml: object(expression: \"HEAD:readMe.html\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMeadoc: object(expression: \"HEAD:readMe.adoc\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMemarkdown: object(expression: \"HEAD:readMe.markdown\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMeyaml: object(expression: \"HEAD:readMe.yaml\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMerst: object(expression: \"HEAD:readMe.rst\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    readMetextile: object(expression: \"HEAD:readMe.textile\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMemd: object(expression: \"HEAD:ReadMe.md\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMenoext: object(expression: \"HEAD:ReadMe\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    ReadMetxt: object(expression: \"HEAD:ReadMe.txt\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMerdoc: object(expression: \"HEAD:ReadMe.rdoc\") { \n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMehtml: object(expression: \"HEAD:ReadMe.html\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMeadoc: object(expression: \"HEAD:ReadMe.adoc\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMemarkdown: object(expression: \"HEAD:ReadMe.markdown\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMeyaml: object(expression: \"HEAD:ReadMe.yaml\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMerst: object(expression: \"HEAD:ReadMe.rst\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    ReadMetextile: object(expression: \"HEAD:ReadMe.textile\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmemd: object(expression: \"HEAD:Readme.md\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmenoext: object(expression: \"HEAD:Readme\") {\n      ... on Blob {\n        text\n      }\n    }\n    \n    Readmetxt: object(expression: \"HEAD:Readme.txt\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmerdoc: object(expression: \"HEAD:Readme.rdoc\") { \n      ... on Blob {\n        text\n      }\n    }\n\n    Readmehtml: object(expression: \"HEAD:Readme.html\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmeadoc: object(expression: \"HEAD:Readme.adoc\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmemarkdown: object(expression: \"HEAD:Readme.markdown\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmeyaml: object(expression: \"HEAD:Readme.yaml\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmerst: object(expression: \"HEAD:Readme.rst\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    Readmetextile: object(expression: \"HEAD:Readme.textile\") {\n      ... on Blob {\n        text\n      }\n    }\n\n    examplesFolder: object(expression: \"HEAD:examples/\") {\n      ... on Tree {\n        entries {\n          name\n          type\n        }\n      }\n    }\n\n    exampleFolder: object(expression: \"HEAD:example/\") {\n      ... on Tree {\n        entries {\n          name\n          type\n        }\n      }\n    }\n\n    ExampleFolder: object(expression: \"HEAD:Example/\") {\n      ... on Tree {\n        entries {\n          name\n          type\n        }\n      }\n    }\n\n    ExamplesFolder: object(expression: \"HEAD:Examples/\") {\n      ... on Tree {\n        entries {\n          name\n          type\n        }\n      }\n    }\n  }\n}\n"); };
exports.getRepoDataQuery = getRepoDataQuery;
