{
  "data": {
    "total_count": 653,
    "incomplete_results": false,
    "items": [
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30994",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30994/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30994/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30994/events",
        "html_url": "https://github.com/facebook/react/issues/30994",
        "id": 2533815344,
        "node_id": "I_kwDOAJy2Ks6XBvQw",
        "number": 30994,
        "title": "[React 19] SVG with dangerouslySetInnerHTML content does not trigger first click",
        "user": {
          "login": "zdravkov",
          "id": 9494406,
          "node_id": "MDQ6VXNlcjk0OTQ0MDY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9494406?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/zdravkov",
          "html_url": "https://github.com/zdravkov",
          "followers_url": "https://api.github.com/users/zdravkov/followers",
          "following_url": "https://api.github.com/users/zdravkov/following{/other_user}",
          "gists_url": "https://api.github.com/users/zdravkov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/zdravkov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/zdravkov/subscriptions",
          "organizations_url": "https://api.github.com/users/zdravkov/orgs",
          "repos_url": "https://api.github.com/users/zdravkov/repos",
          "events_url": "https://api.github.com/users/zdravkov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/zdravkov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-18T13:52:05Z",
        "updated_at": "2024-09-18T19:20:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nHi all,\r\n\r\nHere is the scenario that we found out while testing with both the latest rc and the beta that works correctly with React 18.\r\nWe have an SVG element that does not trigger its first click if it is focusable (or positioned inside a focusable element) that changes some state on focus.\r\n\r\n**Steps to reproduce:** \r\nOpen the Stackblitz example and open its console\r\nClick 1 time on the triangle svg element\r\n**Expected**:\r\n'svg click' message is logged\r\n**Current**: \r\nno message is logged\r\n\r\n(On the second and all next clicks the message is shown as expected - only the first click is not triggered)\r\n**Here are the stackblitz examples where the issue can be observed:**\r\nrc: https://stackblitz.com/edit/react-vsxt51-w3ktmp?file=app%2Fapp.tsx - not working\r\nbeta: https://stackblitz.com/edit/react-vsxt51-ssqptj?file=app%2Fapp.tsx - not working\r\n**And here is how it is working in React 18:**\r\nReact 18: https://stackblitz.com/edit/react-vsxt51-xsg1yu?file=app%2Fapp.tsx - working\r\n\r\n\r\n**Code**:\r\n\r\n```\r\nconst App = () => {\r\n  const [focused, setFocused] = React.useState(false);\r\n  const handleFocus = () => {\r\n    setFocused(true);\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      onFocus={handleFocus}\r\n      tabIndex={1}\r\n      onClick={() => {\r\n        console.log('svg click');\r\n      }}\r\n      viewBox=\"0 0 512 512\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: '<path d=\"M256 352 128 160h256z\" />',\r\n      }}\r\n    ></svg>\r\n  );\r\n};\r\n```\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30994/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30994/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30993",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30993/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30993/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30993/events",
        "html_url": "https://github.com/facebook/react/issues/30993",
        "id": 2533096372,
        "node_id": "I_kwDOAJy2Ks6W-_u0",
        "number": 30993,
        "title": "[React 19] Export SuspenseException ",
        "user": {
          "login": "cevek",
          "id": 3171573,
          "node_id": "MDQ6VXNlcjMxNzE1NzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3171573?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cevek",
          "html_url": "https://github.com/cevek",
          "followers_url": "https://api.github.com/users/cevek/followers",
          "following_url": "https://api.github.com/users/cevek/following{/other_user}",
          "gists_url": "https://api.github.com/users/cevek/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cevek/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cevek/subscriptions",
          "organizations_url": "https://api.github.com/users/cevek/orgs",
          "repos_url": "https://api.github.com/users/cevek/repos",
          "events_url": "https://api.github.com/users/cevek/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cevek/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-18T08:41:52Z",
        "updated_at": "2024-09-18T09:58:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Problem Statement\r\nCurrently, in React's `use(promise)` mechanism, there is no straightforward way to determine whether an exception originates from a promise suspended within the `use` hook. This makes it challenging for developers to:\r\n- Accurately catch and handle errors related to suspended promises.\r\n- Differentiate between errors caused by `use(promise)` and other unrelated errors, complicating error handling logic.\r\n\r\n## Proposal\r\nReact should export either:\r\n1. A `SuspenseException` class that can be used to identify errors originating from a promise suspension, or\r\n2. A utility function to check whether a given error is caused by a suspended promise in `use(promise)`.\r\n\r\n### Example Usage\r\n\r\n1. **SuspenseException Class:**\r\n    ```jsx\r\n    import { SuspenseException } from 'react';\r\n\r\n    try {\r\n      use(fetchData());\r\n    } catch (error) {\r\n      if (error === SuspenseException) {\r\n        // Handle Suspense-related logic\r\n      } else {\r\n        // Handle other types of errors\r\n      }\r\n    }\r\n    ```\r\n\r\n2. **Utility Function:**\r\n    ```jsx\r\n    import { isSuspenseException } from 'react';\r\n\r\n    try {\r\n      use(fetchData());\r\n    } catch (error) {\r\n      if (isSuspenseException(error)) {\r\n        // Handle Suspense-related logic\r\n      } else {\r\n        // Handle other types of errors\r\n      }\r\n    }\r\n    ```\r\n\r\n## Benefits\r\n- **Error differentiation:** Clear distinction between promise suspensions and other errors.\r\n- **Enhanced debugging:** Easier diagnosis of Suspense-related issues in both development and production.\r\n- **Safer error handling:** Prevents unintended catches of non-Suspense errors during Suspense management.\r\n\r\n\r\n## Conclusion\r\nBy exporting either a `SuspenseException` or a utility function, React would offer developers more control over managing Suspense-related errors, improving both error handling and debugging in applications.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30993/reactions",
          "total_count": 15,
          "+1": 15,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30993/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30953",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30953/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30953/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30953/events",
        "html_url": "https://github.com/facebook/react/issues/30953",
        "id": 2523474055,
        "node_id": "I_kwDOAJy2Ks6WaSiH",
        "number": 30953,
        "title": "[React 19] Cannot find name 'dialog'",
        "user": {
          "login": "jsoneaday",
          "id": 1474935,
          "node_id": "MDQ6VXNlcjE0NzQ5MzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1474935?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jsoneaday",
          "html_url": "https://github.com/jsoneaday",
          "followers_url": "https://api.github.com/users/jsoneaday/followers",
          "following_url": "https://api.github.com/users/jsoneaday/following{/other_user}",
          "gists_url": "https://api.github.com/users/jsoneaday/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jsoneaday/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jsoneaday/subscriptions",
          "organizations_url": "https://api.github.com/users/jsoneaday/orgs",
          "repos_url": "https://api.github.com/users/jsoneaday/repos",
          "events_url": "https://api.github.com/users/jsoneaday/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jsoneaday/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-12T22:34:18Z",
        "updated_at": "2024-09-14T11:26:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using Typescript together with React 19rc. It appears that the new dialog element has not been added to the @types/react. I did try and add a types.d.ts file with the Intrinsics def but that does nothing.\r\n\r\nThis is the entire source code but on the affected file itself, https://github.com/PacktPublishing/Full-Stack-React-TypeScript-and-Node-2nd-Edition/blob/chap5/Final/blog/client/src/common/components/modals/Modal.ts\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30953/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30953/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30932",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30932/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30932/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30932/events",
        "html_url": "https://github.com/facebook/react/issues/30932",
        "id": 2516863876,
        "node_id": "I_kwDOAJy2Ks6WBEuE",
        "number": 30932,
        "title": "cannot upgrade `eslint` to v9 due to `eslint-plugin-react-hooks` peer dependancies",
        "user": {
          "login": "DeadEnglish",
          "id": 5758372,
          "node_id": "MDQ6VXNlcjU3NTgzNzI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5758372?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/DeadEnglish",
          "html_url": "https://github.com/DeadEnglish",
          "followers_url": "https://api.github.com/users/DeadEnglish/followers",
          "following_url": "https://api.github.com/users/DeadEnglish/following{/other_user}",
          "gists_url": "https://api.github.com/users/DeadEnglish/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/DeadEnglish/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/DeadEnglish/subscriptions",
          "organizations_url": "https://api.github.com/users/DeadEnglish/orgs",
          "repos_url": "https://api.github.com/users/DeadEnglish/repos",
          "events_url": "https://api.github.com/users/DeadEnglish/events{/privacy}",
          "received_events_url": "https://api.github.com/users/DeadEnglish/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-09-10T16:01:05Z",
        "updated_at": "2024-09-17T10:04:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`eslint-plugin-react-hooks` does not currently support the latest version on `eslint`, `eslint@9.10.0`\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. create a new react application\r\n2. install `eslint` @ [8.56.0](https://www.npmjs.com/package/eslint/v/8.56.0)\r\n3. install `eslint-plugin-react-hooks` @ [4.6.2](https://www.npmjs.com/package/eslint-plugin-react-hooks/v/4.6.2)\r\n4. try to install `eslint` @ [9.10.0](https://www.npmjs.com/package/eslint/v/9.10.0)\r\n\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\ncannot install due to `eslint-plugin-react-hooks` only having `eslint` version 8 as a peer dependancy.\r\n\r\nnpm i output:\r\n\r\n```bash\r\nnpm error code ERESOLVE\r\nnpm error ERESOLVE could not resolve\r\nnpm error\r\nnpm error While resolving: eslint-plugin-react-hooks@4.6.2\r\nnpm error Found: eslint@9.10.0\r\nnpm error node_modules/eslint\r\nnpm error   dev eslint@\"^9.10.0\" from the root project\r\nnpm error   peer eslint@\"^7.5.0 || ^8.0.0 || ^9.0.0\" from @babel/eslint-parser@7.25.1\r\nnpm error   node_modules/@babel/eslint-parser\r\nnpm error     dev @babel/eslint-parser@\"^7.25.1\" from the root project\r\nnpm error   6 more (@eslint-community/eslint-utils, ...)\r\nnpm error\r\nnpm error Could not resolve dependency:\r\nnpm error peer eslint@\"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\" from eslint-plugin-react-hooks@4.6.2\r\nnpm error node_modules/eslint-plugin-react-hooks\r\nnpm error   dev eslint-plugin-react-hooks@\"^4.6.2\" from the root project\r\nnpm error\r\nnpm error Conflicting peer dependency: eslint@8.57.0\r\nnpm error node_modules/eslint\r\nnpm error   peer eslint@\"^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0\" from eslint-plugin-react-hooks@4.6.2\r\nnpm error   node_modules/eslint-plugin-react-hooks\r\nnpm error     dev eslint-plugin-react-hooks@\"^4.6.2\" from the root project\r\nnpm error\r\nnpm error Fix the upstream dependency conflict, or retry\r\nnpm error this command with --force or --legacy-peer-deps\r\nnpm error to accept an incorrect (and potentially broken) dependency resolution.\r\nnpm error\r\n```\r\n\r\n## The expected behavior\r\nES lint is upgraded successfully\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30932/reactions",
          "total_count": 7,
          "+1": 7,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30932/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30898",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30898/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30898/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30898/events",
        "html_url": "https://github.com/facebook/react/issues/30898",
        "id": 2511192981,
        "node_id": "I_kwDOAJy2Ks6VrcOV",
        "number": 30898,
        "title": "[DevTools Bug] The \"path\" argument must be of type string. Received undefined",
        "user": {
          "login": "cayolegal1",
          "id": 73796018,
          "node_id": "MDQ6VXNlcjczNzk2MDE4",
          "avatar_url": "https://avatars.githubusercontent.com/u/73796018?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cayolegal1",
          "html_url": "https://github.com/cayolegal1",
          "followers_url": "https://api.github.com/users/cayolegal1/followers",
          "following_url": "https://api.github.com/users/cayolegal1/following{/other_user}",
          "gists_url": "https://api.github.com/users/cayolegal1/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cayolegal1/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cayolegal1/subscriptions",
          "organizations_url": "https://api.github.com/users/cayolegal1/orgs",
          "repos_url": "https://api.github.com/users/cayolegal1/repos",
          "events_url": "https://api.github.com/users/cayolegal1/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cayolegal1/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-06T21:05:13Z",
        "updated_at": "2024-09-12T15:51:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nprivate repo\n\n### Repro steps\n\n- Just opening the devtools in a React Native App and inspecting components I got this error: The \"path\" argument must be of type string. Received undefined.\r\n<img width=\"1046\" alt=\"Screenshot 2024-09-06 at 4 54 59 PM\" src=\"https://github.com/user-attachments/assets/50d942d8-85f4-4bb1-8a1f-039fe302b370\">\r\n\r\n### Development Environment\r\nDevice: MacBook Air M1 (2020)\r\nProcessor: Apple Silicon (M1)\r\nOperating System: macOS Sonoma v.14.6.1\r\nArchitecture: ARM64\r\nPackage Manager: Yarn \r\n\r\n### Dependencies\r\nReact: 18.2.0\r\nReact Native: 0.74.2\r\nReact Navigation:\r\n@react-navigation/native: 6.1.17\r\n@react-navigation/stack: 6.3.29\r\n@react-navigation/drawer: 6.6.15\r\n@react-navigation/bottom-tabs: 6.5.20\r\n@react-navigation/native-stack: 6.9.26\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-core\n\n### DevTools version (automated)\n\n4.28.5-ef8a840bd\n\n### Error message (automated)\n\nThe \"path\" argument must be of type string. Received undefined\n\n### Error call stack (automated)\n\n```text\nat __node_internal_captureLargerStackTrace (node:internal/errors:484:5)\r\n    at new NodeError (node:internal/errors:393:5)\r\n    at validateString (node:internal/validators:163:11)\r\n    at isAbsolute (node:path:1157:5)\r\n    at f_ (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1371384)\r\n    at k_ (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1376557)\r\n    at xu (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1212586)\r\n    at an (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:39841)\r\n    at Ns (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:117187)\r\n    at Il (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:101534)\r\n    at Rl (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:101463)\r\n    at Nl (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:101281)\r\n    at Sl (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:98382)\r\n    at pl (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:97812)\r\n    at Immediate.D [as _onImmediate] (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:185245)\r\n    at process.processImmediate (node:internal/timers:471:21)\n```\n\n\n### Error component stack (automated)\n\n```text\nat xu (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1211637)\r\n    at Fl (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1182513)\r\n    at Suspense\r\n    at ms (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1166739)\r\n    at div\r\n    at Hs (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1172940)\r\n    at cu (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1202150)\r\n    at div\r\n    at div\r\n    at si (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1127258)\r\n    at ko (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1151045)\r\n    at /Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1231603\r\n    at ms (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1166739)\r\n    at /Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1169395\r\n    at div\r\n    at div\r\n    at div\r\n    at Ss (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1169229)\r\n    at ic (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1233344)\r\n    at Wu (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1225803)\r\n    at ut (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1073442)\r\n    at jt (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1100719)\r\n    at Os (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1173613)\r\n    at i_ (/Users/cayolegal/Documents/BDP/labarra-app-py/node_modules/react-devtools-core/dist/standalone.js:2:1367821)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=The \"path\" argument must be of type string. Received undefined in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30898/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30898/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30886",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30886/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30886/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30886/events",
        "html_url": "https://github.com/facebook/react/issues/30886",
        "id": 2507295641,
        "node_id": "I_kwDOAJy2Ks6VckuZ",
        "number": 30886,
        "title": "Bug: First render doesn't create DOM nodes before next javascript is executed in script",
        "user": {
          "login": "bryceosterhaus",
          "id": 6843530,
          "node_id": "MDQ6VXNlcjY4NDM1MzA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6843530?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bryceosterhaus",
          "html_url": "https://github.com/bryceosterhaus",
          "followers_url": "https://api.github.com/users/bryceosterhaus/followers",
          "following_url": "https://api.github.com/users/bryceosterhaus/following{/other_user}",
          "gists_url": "https://api.github.com/users/bryceosterhaus/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bryceosterhaus/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bryceosterhaus/subscriptions",
          "organizations_url": "https://api.github.com/users/bryceosterhaus/orgs",
          "repos_url": "https://api.github.com/users/bryceosterhaus/repos",
          "events_url": "https://api.github.com/users/bryceosterhaus/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bryceosterhaus/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-09-05T09:41:44Z",
        "updated_at": "2024-09-06T05:23:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This may have been discussed elsewhere but I wasn't able to find anything. \r\n\r\nWith the update to using `createRoot` in React 18, the DOM is created asynchronously, which means any code running after `root.render()` cannot depend on the DOM that React is creating.\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n```js\r\nconst root = ReactDOM.createRoot(document.getElementById(\"app\"));\r\nroot.render(\r\n    React.createElement(\"div\", { id: \"reactChild\" }, \"Rendered By React\")\r\n);\r\n\r\ndocument.getElementById(\"reactChild\").innerHTML = \"Replaced By VanillaJS\"; // this errors\r\n```\r\n\r\n## The current behavior\r\n JS will error because `document.getElementById(\"reactChild\")` is null and not found\r\n\r\n## The expected behavior\r\nReact will render first and then `document.getElementById(\"reactChild\")` will execute find the node\r\n\r\n\r\n[Link to code example](https://codesandbox.io/p/sandbox/2njxcj?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522cm0p0a5am00063b6igau3mza0%2522%252C%2522sizes%2522%253A%255B100%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522cm0p0a5am00023b6i7pymhzso%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522cm0p0a5am00033b6i48103piz%2522%257D%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522cm0p0a5am00053b6i9ksfo73k%2522%257D%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522cm0p0a5am00023b6i7pymhzso%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522cm0p0a5am00013b6i0zwjrq7t%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252Findex.html%2522%252C%2522state%2522%253A%2522IDLE%2522%252C%2522initialSelections%2522%253A%255B%257B%2522startLineNumber%2522%253A20%252C%2522startColumn%2522%253A1%252C%2522endLineNumber%2522%253A20%252C%2522endColumn%2522%253A1%257D%255D%257D%255D%252C%2522id%2522%253A%2522cm0p0a5am00023b6i7pymhzso%2522%252C%2522activeTabId%2522%253A%2522cm0p0a5am00013b6i0zwjrq7t%2522%257D%252C%2522cm0p0a5am00053b6i9ksfo73k%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522cm0p0a5am00043b6iord4hwnv%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522UNASSIGNED_PORT%2522%252C%2522port%2522%253A0%257D%255D%252C%2522id%2522%253A%2522cm0p0a5am00053b6i9ksfo73k%2522%252C%2522activeTabId%2522%253A%2522cm0p0a5am00043b6iord4hwnv%2522%257D%252C%2522cm0p0a5am00033b6i48103piz%2522%253A%257B%2522tabs%2522%253A%255B%255D%252C%2522id%2522%253A%2522cm0p0a5am00033b6i48103piz%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Afalse%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D)\r\n\r\n\r\nIs this just an expected result with React 18+? If you fallback and use `ReactDOM.render()` instead, it works as expected.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30886/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30886/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30872",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30872/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30872/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30872/events",
        "html_url": "https://github.com/facebook/react/issues/30872",
        "id": 2504869915,
        "node_id": "I_kwDOAJy2Ks6VTUgb",
        "number": 30872,
        "title": "Bug: Footer Unknown Text Found",
        "user": {
          "login": "Chehak",
          "id": 16488236,
          "node_id": "MDQ6VXNlcjE2NDg4MjM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/16488236?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Chehak",
          "html_url": "https://github.com/Chehak",
          "followers_url": "https://api.github.com/users/Chehak/followers",
          "following_url": "https://api.github.com/users/Chehak/following{/other_user}",
          "gists_url": "https://api.github.com/users/Chehak/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Chehak/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Chehak/subscriptions",
          "organizations_url": "https://api.github.com/users/Chehak/orgs",
          "repos_url": "https://api.github.com/users/Chehak/repos",
          "events_url": "https://api.github.com/users/Chehak/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Chehak/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-09-04T10:02:20Z",
        "updated_at": "2024-09-17T18:28:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n![Screenshot (35)](https://github.com/user-attachments/assets/2da119a1-5758-420f-aea0-88f127545070)\r\n\r\nFooter has some unknown text , on clicking the username [@sawaratsuki1004](https://twitter.com/sawaratsuki1004)  logo changes from the header\r\n\r\n**no uwu plz\r\nLogo by @sawaratsuki1004 **\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30872/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30872/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30871",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30871/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30871/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30871/events",
        "html_url": "https://github.com/facebook/react/issues/30871",
        "id": 2504845458,
        "node_id": "I_kwDOAJy2Ks6VTOiS",
        "number": 30871,
        "title": "I am encountering an error when trying to run the command npm run dev. How can I resolve",
        "user": {
          "login": "reacterpro",
          "id": 180402593,
          "node_id": "U_kgDOCsC5oQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/180402593?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/reacterpro",
          "html_url": "https://github.com/reacterpro",
          "followers_url": "https://api.github.com/users/reacterpro/followers",
          "following_url": "https://api.github.com/users/reacterpro/following{/other_user}",
          "gists_url": "https://api.github.com/users/reacterpro/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/reacterpro/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/reacterpro/subscriptions",
          "organizations_url": "https://api.github.com/users/reacterpro/orgs",
          "repos_url": "https://api.github.com/users/reacterpro/repos",
          "events_url": "https://api.github.com/users/reacterpro/events{/privacy}",
          "received_events_url": "https://api.github.com/users/reacterpro/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-09-04T09:51:28Z",
        "updated_at": "2024-09-18T15:52:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I utilized vite to create a frontend template. The package.json resides in the frontend directory and includes development tools, but I'm encountering an error. This project involves Django and React. I am using a Python virtual environment, and the backend is running smoothly. I have also installed React dependencies in the environment, so I am unsure of what the issue could be.\r\n\r\n```\r\n{\r\n  \"name\": \"frontend\",\r\n  \"private\": true,\r\n  \"version\": \"0.0.0\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"vite build\",\r\n    \"lint\": \"eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0\",\r\n    \"preview\": \"vite preview\"\r\n  },\r\n  \"dependencies\": {\r\n    \"axios\": \"^1.6.8\",\r\n    \"jwt-decode\": \"^4.0.0\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-router-dom\": \"^6.22.3\",\r\n    \"react-scripts\": \"^3.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^18.2.66\",\r\n    \"@types/react-dom\": \"^18.2.22\",\r\n    \"@vitejs/plugin-react\": \"^4.2.1\",\r\n    \"eslint\": \"^8.57.0\",\r\n    \"eslint-plugin-react\": \"^7.34.1\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.6\",\r\n    \"vite\": \"^5.2.0\"\r\n  }\r\n}\r\n```\r\nerror:\r\n\r\n```\r\n(env) PS C:\\Users\\Abdul\\Documents\\Personal Projects\\API-test\\Django&React FS\\frontend> npm run dev\r\n\r\n> <a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"7117031e1f05141f1531415f415f41\">[email protected]</a> dev\r\n> vite\r\n\r\n'React' is not recognized as an internal or external command,\r\noperable program or batch file.\r\nnode:internal/modules/cjs/loader:1146\r\n  throw err;\r\n  ^\r\n\r\nError: Cannot find module 'C:\\Users\\Abdul\\Documents\\Personal Projects\\API-test\\vite\\bin\\vite.js'\r\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1143:15)\r\n    at Module._load (node:internal/modules/cjs/loader:984:27)\r\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:135:12)\r\n    at node:internal/main/run_main_module:28:49 {\r\n  code: 'MODULE_NOT_FOUND',\r\n  requireStack: []\r\n}\r\n\r\nNode.js v20.12.1\r\n(env) PS C:\\Users\\Abdul\\Documents\\Personal Projects\\API-test\\Django&React FS\\frontend>\r\n```\r\n\r\nTry https://reacter.space/questions/i-am-encountering-an-error-when-trying-to-run-the-command-npm-run-dev-how-can-i-resolve",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30871/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30871/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30859",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30859/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30859/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30859/events",
        "html_url": "https://github.com/facebook/react/issues/30859",
        "id": 2500147655,
        "node_id": "I_kwDOAJy2Ks6VBTnH",
        "number": 30859,
        "title": "[React 19] Need suggestion on upgrade.",
        "user": {
          "login": "lakshman0369",
          "id": 54270674,
          "node_id": "MDQ6VXNlcjU0MjcwNjc0",
          "avatar_url": "https://avatars.githubusercontent.com/u/54270674?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/lakshman0369",
          "html_url": "https://github.com/lakshman0369",
          "followers_url": "https://api.github.com/users/lakshman0369/followers",
          "following_url": "https://api.github.com/users/lakshman0369/following{/other_user}",
          "gists_url": "https://api.github.com/users/lakshman0369/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/lakshman0369/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/lakshman0369/subscriptions",
          "organizations_url": "https://api.github.com/users/lakshman0369/orgs",
          "repos_url": "https://api.github.com/users/lakshman0369/repos",
          "events_url": "https://api.github.com/users/lakshman0369/events{/privacy}",
          "received_events_url": "https://api.github.com/users/lakshman0369/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-09-02T06:50:59Z",
        "updated_at": "2024-09-02T17:25:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nWe are upgrading the react in our project and we see in the documentation the support for the defaultprops and proptypes is removed.\r\n\r\nWe are using the jsx and migrating to typescript is not possible at the moment as our project is fairly big. Any suggestion on how to do defaultprop and proptype check.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30859/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30859/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30799",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30799/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30799/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30799/events",
        "html_url": "https://github.com/facebook/react/issues/30799",
        "id": 2482913014,
        "node_id": "I_kwDOAJy2Ks6T_j72",
        "number": 30799,
        "title": "[React 19] Upgrading React causes infinite refetching",
        "user": {
          "login": "cometkim",
          "id": 9696352,
          "node_id": "MDQ6VXNlcjk2OTYzNTI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9696352?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cometkim",
          "html_url": "https://github.com/cometkim",
          "followers_url": "https://api.github.com/users/cometkim/followers",
          "following_url": "https://api.github.com/users/cometkim/following{/other_user}",
          "gists_url": "https://api.github.com/users/cometkim/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cometkim/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cometkim/subscriptions",
          "organizations_url": "https://api.github.com/users/cometkim/orgs",
          "repos_url": "https://api.github.com/users/cometkim/repos",
          "events_url": "https://api.github.com/users/cometkim/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cometkim/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-23T11:14:28Z",
        "updated_at": "2024-09-05T03:15:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nThe reproduction is using Relay, but I came as this seems closer to a bug in React than Relay.\r\n\r\nhttps://stackblitz.com/@cometkim/collections/react-relay-suspend-loop\r\n\r\nWith this basic setup, using `useLazyLoadQuery` with `network-only` to make a new `fetch()` call on render. The code works fine in v18, but after upgrading to v19, it starts remounting an element infinitely.\r\n\r\n- [React v18](https://stackblitz.com/edit/vitejs-vite-ingwz7?file=src%2Fmain.tsx): No issues\r\n- [React v19](https://stackblitz.com/edit/vitejs-vite-ezhrrp?file=src%2Fmain.tsx): No differences, but the children including the suspense boundary is unexpectedly unmounted, resulting in an infinite refetch loop.\r\n- [React v19 workaround 1](https://stackblitz.com/edit/vitejs-vite-jqbsjc?file=src%2Fmain.tsx): Removing `<StrictMode>` seems to solve the issue.\r\n- [React v19 workaround 2](https://stackblitz.com/edit/vitejs-vite-56sxrz?file=src%2Fmain.tsx): Wrap the parent (which is just a context provider with nothing special) by one more `<Suspense>` boundary. It seems to do not make sense, but it works. \r\n\r\nThe expected behavior is that the `<Suspense>` boundary is retained stable, and the `<NetworkOnly>` is rendered after waiting for the QueryResource fulfilled.\r\n\r\nHowever, this seems to me like the `<Suspense>` could suspend itself.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30799/reactions",
          "total_count": 4,
          "+1": 3,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30799/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30782",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30782/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30782/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30782/events",
        "html_url": "https://github.com/facebook/react/issues/30782",
        "id": 2479437158,
        "node_id": "I_kwDOAJy2Ks6TyTVm",
        "number": 30782,
        "title": "[Compiler Bug]: eslint-plugin-react-compiler errors when updating initialization of ref.current",
        "user": {
          "login": "jeremy-code",
          "id": 43259194,
          "node_id": "MDQ6VXNlcjQzMjU5MTk0",
          "avatar_url": "https://avatars.githubusercontent.com/u/43259194?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jeremy-code",
          "html_url": "https://github.com/jeremy-code",
          "followers_url": "https://api.github.com/users/jeremy-code/followers",
          "following_url": "https://api.github.com/users/jeremy-code/following{/other_user}",
          "gists_url": "https://api.github.com/users/jeremy-code/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jeremy-code/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jeremy-code/subscriptions",
          "organizations_url": "https://api.github.com/users/jeremy-code/orgs",
          "repos_url": "https://api.github.com/users/jeremy-code/repos",
          "events_url": "https://api.github.com/users/jeremy-code/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jeremy-code/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-08-21T23:52:41Z",
        "updated_at": "2024-09-05T03:15:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAHRFMCAEcA2AlggHYAuGA3GiTYQLYAOEMZOwOWCASggGY4Avjj4wI9HBhgIAhnAohqtEnAgkwbAKoA5AJJ6AKroCCAGV0AtAKIARHAF4cAZQCe9AEYR8ACgw79ukZmlrYYAJRKNAgAHsyseGoanNgA8iq4jgA8BgA0AHzehCSEZIQy+ABq5VAIyDgGOAA+ON7eYQ559WHt9p3ANDgJ6mzSAo5cvAKZ9U04ZC6MCBAC-oYm5tZ2nd6rgeshNhE0AziEAt6jAHRwsNLkDvaOu0Ebtu39JIODVzcwd2yOeaLZanYqlcpVfA1B6ODB8KAqUpqDA4AD8oJKZUq1QQbRwdSKmIhOKUg0Ex0+OGkZFgnx+t1IZCUgkiJBicTYABN+DIoPg2PDEYQ1DgALIuYyMRh4j7fBA0mCfTKcwgANzyAAkEPh8BAcAB1Fj4TmZAD0KvVzJoIEEQA\n\n### Repro steps\n\n1. Initialize `useRef` with some dummy value (e.g. null, Symbol, undefined, etc.) to be changed after initialization/during render.\r\n2. Update `ref.current` by checking whether it is equivalent to its initial condition (as per documentation: [useRef#Avoiding recreating the ref contents](https://react.dev/reference/react/useRef#avoiding-recreating-the-ref-contents))\r\n  - > To solve it, you may initialize the ref like this instead:\r\n  ```\r\n  function Video() {\r\n    const playerRef = useRef(null);\r\n    if (playerRef.current === null) {\r\n      playerRef.current = new VideoPlayer();\r\n    }\r\n    // ...\r\n  ```\r\n\r\n  - > Normally, writing or reading ref.current during render is not allowed. However, it’s fine in this case because the result is always the same, and the condition only executes during initialization so it’s fully predictable.\r\n  \r\n3. eslint-plugin-react-compiler gives error\r\n\r\n```\r\nInvalidReact: Ref values (the `current` property) may not be accessed during render. (https://react.dev/reference/react/useRef)\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-1d989965-20240821",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30782/reactions",
          "total_count": 7,
          "+1": 5,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 2,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30782/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30772",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30772/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30772/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30772/events",
        "html_url": "https://github.com/facebook/react/issues/30772",
        "id": 2477246401,
        "node_id": "I_kwDOAJy2Ks6Tp8fB",
        "number": 30772,
        "title": "[DevTools Bug]: inspecting pseudo-elements in Firefox gives error `Permission denied to access property \"__reactFiber$sofadm08s2\"`",
        "user": {
          "login": "fspin",
          "id": 10550010,
          "node_id": "MDQ6VXNlcjEwNTUwMDEw",
          "avatar_url": "https://avatars.githubusercontent.com/u/10550010?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fspin",
          "html_url": "https://github.com/fspin",
          "followers_url": "https://api.github.com/users/fspin/followers",
          "following_url": "https://api.github.com/users/fspin/following{/other_user}",
          "gists_url": "https://api.github.com/users/fspin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fspin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fspin/subscriptions",
          "organizations_url": "https://api.github.com/users/fspin/orgs",
          "repos_url": "https://api.github.com/users/fspin/repos",
          "events_url": "https://api.github.com/users/fspin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fspin/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-21T07:08:14Z",
        "updated_at": "2024-09-05T03:15:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\r\n\r\nhttps://wk82tp.csb.app/\r\n\r\n### Repro steps\r\n\r\n1. Go to the Sandbox link in Firefox (129.0.2), with React DevTools (5.3.1)\r\n2. Open the inspector.\r\n3. Select the `::after` pseudo-element next to the `<h1>`.\r\n\r\n### More Info\r\nI add a screenshot of the issue.\r\n<img width=\"1305\" alt=\"Screenshot 2024-08-21 at 09 06 24\" src=\"https://github.com/user-attachments/assets/d3e869af-80f1-44d5-a9ec-a47ed8472974\">\r\n\r\nThis is happening from a while. Of course, is not a big issue, because if I close the error on the main screen, I can keep working. And until now I wasn't using much of pseudo-elements. \r\n\r\nBut now, I'm working on a new feature in our app, where I'm relying hardly on `::after` en `::before` pseudo elements. And it is quite annoying.\r\n\r\nThis is happening since DevTools 4.28.4. Until v4.27.8 I didn't had problems. On this version (4.27.8) the error is shown only when opening the tab \"(React) Components\" in the inspector... which kind of make sense, right?. \r\n\r\nWhat doesn't make sense (to me) is that I got this error when inspecting the pseudo-element in the basic firefox inspector (trying to apply css properties on it).\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30772/reactions",
          "total_count": 4,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 2,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30772/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30765",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30765/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30765/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30765/events",
        "html_url": "https://github.com/facebook/react/issues/30765",
        "id": 2476669087,
        "node_id": "I_kwDOAJy2Ks6Tnvif",
        "number": 30765,
        "title": "Bug: Strict mode effect cleanup order doesn't match normal unmount",
        "user": {
          "login": "xixixao",
          "id": 1473433,
          "node_id": "MDQ6VXNlcjE0NzM0MzM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1473433?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/xixixao",
          "html_url": "https://github.com/xixixao",
          "followers_url": "https://api.github.com/users/xixixao/followers",
          "following_url": "https://api.github.com/users/xixixao/following{/other_user}",
          "gists_url": "https://api.github.com/users/xixixao/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/xixixao/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/xixixao/subscriptions",
          "organizations_url": "https://api.github.com/users/xixixao/orgs",
          "repos_url": "https://api.github.com/users/xixixao/repos",
          "events_url": "https://api.github.com/users/xixixao/events{/privacy}",
          "received_events_url": "https://api.github.com/users/xixixao/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-08-20T22:53:18Z",
        "updated_at": "2024-09-05T10:28:44Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "React version: 18.2 or 18.3\r\n\r\n## Steps To Reproduce\r\n\r\n1. Use this code:\r\n\r\n```jsx\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function App() {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <>\r\n      <button onClick={() => setShow(!show)}>Toggle</button>\r\n      {show ? (\r\n        <A>\r\n          <B />\r\n        </A>\r\n      ) : (\r\n        \"Not showing\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction A({ children }) {\r\n  useEffect(() => {\r\n    console.log(\"parent effect\");\r\n\r\n    return () => console.log(\"parent effect cleanup\");\r\n  });\r\n  return <div>{children}</div>;\r\n}\r\n\r\nfunction B() {\r\n  useEffect(() => {\r\n    console.log(\"child effect\");\r\n    return () => console.log(\"child effect cleanup\");\r\n  });\r\n  return null;\r\n}\r\n```\r\n\r\n\r\n2. Observe the logs you get:\r\n```\r\n// Click to show\r\nchild effect\r\nparent effect\r\nchild effect cleanup\r\nparent effect cleanup\r\nchild effect\r\nparent effect\r\n// Click to hide\r\nparent effect cleanup\r\nchild effect cleanup\r\n```\r\n\r\nLink to code example: https://codesandbox.io/s/sleepy-bhabha-q5tfnt?file=/src/App.js\r\n\r\n## The current behavior\r\n\r\nNotice that during the strict mode cycle, the child effect cleanup runs before the parent's. But during actual unmounting, the child effect cleanup runs **after** the parent's.\r\n\r\n## The expected behavior\r\n\r\nI expected the behavior to match.\r\n\r\n## Why does this matter\r\n\r\nFrom my investigations:\r\n\r\n1. The expected behavior is not documented (neither for strict mode nor for normal unmount). I have searched for `order` and `child` on this page: https://react.dev/reference/react/useEffect\r\n2. From past issues it seems that the React team has strong opinions on what the order should be, although I'm not clear on what that order is.\r\n\r\nThe scenario we're trying to implement is for the parent to provider authentication state and for children to be subscribed and depend on this external authentication state.\r\n\r\nIdeally we'd want:\r\n1. the parent's effect to run first (set authentication credentials), then children (subscribe)\r\n2. the child effect cleanup to run first (unsubscribe), then parent (clear authentication credentials)\r\n\r\nWe achieved the first with useLayoutEffect (isomorphic for SSR) in parent, and useEffect in child.\r\n\r\nBut now I'm realizing there might be no easy way to achieve the second, without deferring the cleanup to another tick while avoiding racing with another render.\r\n\r\nAlso note that from my testing this popular SO answer on this topic is wrong: https://stackoverflow.com/a/55028488/1526986",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30765/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30765/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30754",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30754/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30754/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30754/events",
        "html_url": "https://github.com/facebook/react/issues/30754",
        "id": 2476164310,
        "node_id": "I_kwDOAJy2Ks6Tl0TW",
        "number": 30754,
        "title": "[DevTools Bug]: Inconsistent behavior; React dev tools does not recognize a react website; 'service worker(inactive)'",
        "user": {
          "login": "tarungka",
          "id": 39730755,
          "node_id": "MDQ6VXNlcjM5NzMwNzU1",
          "avatar_url": "https://avatars.githubusercontent.com/u/39730755?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tarungka",
          "html_url": "https://github.com/tarungka",
          "followers_url": "https://api.github.com/users/tarungka/followers",
          "following_url": "https://api.github.com/users/tarungka/following{/other_user}",
          "gists_url": "https://api.github.com/users/tarungka/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tarungka/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tarungka/subscriptions",
          "organizations_url": "https://api.github.com/users/tarungka/orgs",
          "repos_url": "https://api.github.com/users/tarungka/repos",
          "events_url": "https://api.github.com/users/tarungka/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tarungka/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-20T17:22:41Z",
        "updated_at": "2024-08-24T12:33:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\r\n\r\nhttps://healthbridge-silk.vercel.app/\r\n\r\n### Repro steps\r\n\r\nI have a two profiles on my chrome browser one personal other work related.\r\n1. Installed dev tool extension about a few months back on work profile.\r\n2. Installed the same extension on my personal profile.\r\n3. Works flawlessly on my work profile but in my personal profile has error \"service worker(inactive)\"\r\n\r\nOn my personal profile it does not recognize any react websites and on clicking the extension gives \"Page does not seem to be using react\". Works flawlessly on my work profile.\r\n\r\nImage from my personal account:\r\n![Screenshot_20240820_223428](https://github.com/user-attachments/assets/ef86ea22-a0f2-4cbb-80c2-97aab630afe2)\r\n\r\nImage from my work account:\r\n![image](https://github.com/user-attachments/assets/599160ca-61a5-4b7d-9924-04aed66a6aea)\r\n\r\n\r\nEDIT: I checked the extension errors in my personal account and here is a screen shot of it:\r\nThere are no stack traces for any of the errors.\r\n![image](https://github.com/user-attachments/assets/0b1805c9-4ce0-4ae6-96a0-e1d2e0ef5b04)\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### DevTools package (automated)\r\n\r\n_No response_\r\n\r\n### DevTools version (automated)\r\n\r\n_No response_\r\n\r\n### Error message (automated)\r\n\r\n_No response_\r\n\r\n### Error call stack (automated)\r\n\r\n_No response_\r\n\r\n### Error component stack (automated)\r\n\r\n_No response_\r\n\r\n### GitHub query string (automated)\r\n\r\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30754/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30754/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30745",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30745/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30745/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30745/events",
        "html_url": "https://github.com/facebook/react/issues/30745",
        "id": 2473838590,
        "node_id": "I_kwDOAJy2Ks6Tc8f-",
        "number": 30745,
        "title": "[Compiler]: Ref values (the `current` property) may not be accessed during render - showing error message for custom hooks",
        "user": {
          "login": "gkiely",
          "id": 1948935,
          "node_id": "MDQ6VXNlcjE5NDg5MzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1948935?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkiely",
          "html_url": "https://github.com/gkiely",
          "followers_url": "https://api.github.com/users/gkiely/followers",
          "following_url": "https://api.github.com/users/gkiely/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkiely/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkiely/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkiely/subscriptions",
          "organizations_url": "https://api.github.com/users/gkiely/orgs",
          "repos_url": "https://api.github.com/users/gkiely/repos",
          "events_url": "https://api.github.com/users/gkiely/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkiely/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-19T17:25:03Z",
        "updated_at": "2024-09-04T13:23:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/gkiely/react-eslint-vite\r\n\r\n### Repro steps\r\n```sh\r\ngit clone https://github.com/gkiely/react-eslint-vite\r\nnpm i \r\nnpm run lint\r\n```\r\n\r\nEach of these show an error message:\r\n- Pass a ref to a custom hook\r\n- Set ref.current inside a useCallback and pass to a custom hook\r\n- useImperativeHandle\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0-rc-6ebfd5b0-20240818",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30745/reactions",
          "total_count": 7,
          "+1": 7,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30745/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30739",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30739/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30739/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30739/events",
        "html_url": "https://github.com/facebook/react/issues/30739",
        "id": 2471657051,
        "node_id": "I_kwDOAJy2Ks6TUn5b",
        "number": 30739,
        "title": "[React 19] style using precedence can produce many additional style elements after initial render",
        "user": {
          "login": "souporserious",
          "id": 2762082,
          "node_id": "MDQ6VXNlcjI3NjIwODI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2762082?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/souporserious",
          "html_url": "https://github.com/souporserious",
          "followers_url": "https://api.github.com/users/souporserious/followers",
          "following_url": "https://api.github.com/users/souporserious/following{/other_user}",
          "gists_url": "https://api.github.com/users/souporserious/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/souporserious/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/souporserious/subscriptions",
          "organizations_url": "https://api.github.com/users/souporserious/orgs",
          "repos_url": "https://api.github.com/users/souporserious/repos",
          "events_url": "https://api.github.com/users/souporserious/events{/privacy}",
          "received_events_url": "https://api.github.com/users/souporserious/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 620368407,
            "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
            "name": "Resolution: Needs More Information",
            "color": "fffde7",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-08-17T20:16:15Z",
        "updated_at": "2024-08-19T20:23:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nWhen adding multiple style elements with the same precedence they will only ever be grouped on the initial render. During subsequent style elements being discovered they will each attach a new style element in the head of the document which can result in many elements being inserted as seen below:\r\n\r\n<img width=\"1345\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b9374fca-3b2b-430c-a6c3-a7f43f2df644\">\r\n\r\nI'm not sure if there is an inherent constraint because of concurrent rendering, but it would be nice if React could either batch these similar to the initial page render or always reuse a precedence once created and insert rules into the same style tag.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30739/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30739/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30727",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30727/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30727/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30727/events",
        "html_url": "https://github.com/facebook/react/issues/30727",
        "id": 2470820419,
        "node_id": "I_kwDOAJy2Ks6TRbpD",
        "number": 30727,
        "title": "Bug: Memory leak of old state until next render",
        "user": {
          "login": "jtbandes",
          "id": 14237,
          "node_id": "MDQ6VXNlcjE0MjM3",
          "avatar_url": "https://avatars.githubusercontent.com/u/14237?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jtbandes",
          "html_url": "https://github.com/jtbandes",
          "followers_url": "https://api.github.com/users/jtbandes/followers",
          "following_url": "https://api.github.com/users/jtbandes/following{/other_user}",
          "gists_url": "https://api.github.com/users/jtbandes/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jtbandes/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jtbandes/subscriptions",
          "organizations_url": "https://api.github.com/users/jtbandes/orgs",
          "repos_url": "https://api.github.com/users/jtbandes/repos",
          "events_url": "https://api.github.com/users/jtbandes/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jtbandes/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-16T19:15:15Z",
        "updated_at": "2024-08-16T19:17:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 18.3.1\r\n\r\n## Summary\r\nIt appears that state which is no longer being used can still be retained by some `__reactFiber$...` internals, leading to arbitrarily large memory leaks depending on what other objects are referenced by the state.\r\n\r\nPossibly related issues:\r\n- https://github.com/facebook/react/issues/14380\r\n- https://github.com/facebook/react/issues/13702\r\n- https://github.com/facebook/react/issues/14057\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open the following repro example in Chrome (click Open Preview In New Tab): https://stackblitz.com/edit/react-leak-repro-1?file=src%2FApp.tsx\r\n2. Open the Chrome Memory inspector\r\n3. Click the \"Mount\" button, take a heap snapshot, and verify the LeakyActions object is present\r\n4. Click the \"Unmount\" button, take a heap snapshot, and see that **LeakyActions is still present**\r\n5. Click the \"Increment\" button, take a heap snapshot, and verify that LeakyActions is now released.\r\n\r\nhttps://github.com/user-attachments/assets/fbfcf317-9eb3-431e-a887-cf8126d6aad8\r\n\r\nLink to code example:\r\n\r\nhttps://stackblitz.com/edit/react-leak-repro-1?file=src%2FApp.tsx,vite.config.ts\r\n\r\nThis repro case may be slightly more complicated than necessary, but was reduced from a real-world use case in our app.\r\n\r\n```ts\r\nimport { useImperativeHandle, useState } from 'react';\r\n\r\nclass LeakyActions {\r\n  foo() {\r\n    console.log('real foo');\r\n  }\r\n}\r\n\r\nfunction WorkspaceAdapter({ r }: { r: React.Ref<LeakyActions> }) {\r\n  useImperativeHandle(r, () => new LeakyActions(), []);\r\n  return null;\r\n}\r\n\r\nfunction App() {\r\n  const [adapterMounted, setAdapterMounted] = useState(false);\r\n  const [actions, setActions] = useState<LeakyActions | null>(null);\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => setAdapterMounted((x) => !x)}>\r\n        {adapterMounted ? 'Unmount' : 'Mount'}\r\n      </button>\r\n\r\n      <div>Have actions: {String(actions != undefined)}</div>\r\n      {adapterMounted && <WorkspaceAdapter r={setActions} />}\r\n\r\n      <div>Counter: {counter}</div>\r\n      <button onClick={() => setCounter((c) => c + 1)}>Increment</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n## The current behavior\r\n\r\nThe object is retained by the `__reactFiber$...` property of the `<button>` element:\r\n\r\n<img width=\"1181\" alt=\"image\" src=\"https://github.com/user-attachments/assets/49b1660e-537a-433a-8e32-b209ce1443e5\">\r\n\r\nIn our app, this behavior leads to a huge graph of objects from a previous screen/route of the app being retained when switching away from that screen.\r\n\r\n## The expected behavior\r\n\r\nThe state which is no longer current should be released.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30727/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30727/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30712",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30712/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30712/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30712/events",
        "html_url": "https://github.com/facebook/react/issues/30712",
        "id": 2468588437,
        "node_id": "I_kwDOAJy2Ks6TI6uV",
        "number": 30712,
        "title": "Bug: [Strict Mode] Inconsistent behavior updating reducer state in mount Effect vs. update Effect",
        "user": {
          "login": "bthall16",
          "id": 25190502,
          "node_id": "MDQ6VXNlcjI1MTkwNTAy",
          "avatar_url": "https://avatars.githubusercontent.com/u/25190502?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bthall16",
          "html_url": "https://github.com/bthall16",
          "followers_url": "https://api.github.com/users/bthall16/followers",
          "following_url": "https://api.github.com/users/bthall16/following{/other_user}",
          "gists_url": "https://api.github.com/users/bthall16/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/bthall16/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/bthall16/subscriptions",
          "organizations_url": "https://api.github.com/users/bthall16/orgs",
          "repos_url": "https://api.github.com/users/bthall16/repos",
          "events_url": "https://api.github.com/users/bthall16/events{/privacy}",
          "received_events_url": "https://api.github.com/users/bthall16/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-15T17:40:08Z",
        "updated_at": "2024-09-05T03:16:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When rendering an app using `<StrictMode />`, calling a reducer's `dispatch` function in an Effect appears to have different observable behaviors depending on whether the Effect is mounting or updating.\r\n\r\nReact version: 18.3.1\r\n\r\nSteps to reproduce:\r\n\r\n1. Dispatch a reducer action in an Effect where the reducer contains internal invariants depending on the current state (see reproduction below).\r\n2. Render the component in `<StrictMode />`.\r\n3. When the Effect dispatches on mount, the reducer's invariants can be violated causing an error to be thrown. The same does not occur when the Effect dispatches on update.\r\n\r\nMinimal reproduction:\r\n\r\nIn this reproduction, both components call `useReducer` with a reducer function containing invariants, e.g. to prevent invalid states. For this reproduction, the reducer toggles a boolean value to `true` once and throws an error for any future dispatches. \r\n\r\nEach component then calls `useReducer's` `dispatch` function in an Effect. The reducer's invariant is only violated in `<MountEffectDispatch />`, not `<UpdateEffectDispatch />` even though _both_ are being double-invoked as part of `<StrictMode />`.\r\n\r\nThis specific way of surfacing the different behaviors between mount and update Effects is simplified from an app I'm developing so it may obfuscate the underlying issue (if there is one). \r\n\r\nThis behavior isn't seen outside of `<StrictMode />`.\r\n\r\n```tsx\r\nfunction MountEffectDispatch() {\r\n  const [value, dispatch] = useReducer((prevValue) => {\r\n    if (prevValue) {\r\n      throw new Error(\"Already true\");\r\n    }\r\n\r\n    return !prevValue;\r\n  }, false);\r\n\r\n  useEffect(() => {\r\n    dispatch();\r\n  }, []);\r\n\r\n  return <p>{String(value)}</p>;\r\n}\r\n\r\nfunction UpdateEffectDispatch() {\r\n  const [value, dispatch] = useReducer((prevValue) => {\r\n    if (prevValue) {\r\n      throw new Error(\"Already true\");\r\n    }\r\n\r\n    return !prevValue;\r\n  }, false);\r\n\r\n  // Will be used to defer dispatching to a later render\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mounted) {\r\n      return;\r\n    }\r\n\r\n    dispatch();\r\n  }, [mounted]);\r\n\r\n  return <p>{String(value)}</p>;\r\n}\r\n\r\n\r\nReactDOM.createRoot(document.getElementById('root')!).render(\r\n  <React.StrictMode>\r\n    <UpdateEffectDispatch /> // or <MountEffectDispatch />\r\n  </React.StrictMode>\r\n);\r\n```\r\n\r\n## The current behavior\r\n\r\nReducer state updates in mount Effects behave differently from reducer state updates in update Effects when using `<StrictMode />`.\r\n\r\n## The expected behavior\r\n\r\nReducer state updates should behave consistently in any Effect when using `<StrictMode />`.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30712/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30712/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30709",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30709/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30709/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30709/events",
        "html_url": "https://github.com/facebook/react/issues/30709",
        "id": 2467775317,
        "node_id": "I_kwDOAJy2Ks6TF0NV",
        "number": 30709,
        "title": "[React 19] `use()` promise from state causes \"async/await is not yet supported in Client Components\" error",
        "user": {
          "login": "tom-sherman",
          "id": 9257001,
          "node_id": "MDQ6VXNlcjkyNTcwMDE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/9257001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/tom-sherman",
          "html_url": "https://github.com/tom-sherman",
          "followers_url": "https://api.github.com/users/tom-sherman/followers",
          "following_url": "https://api.github.com/users/tom-sherman/following{/other_user}",
          "gists_url": "https://api.github.com/users/tom-sherman/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/tom-sherman/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/tom-sherman/subscriptions",
          "organizations_url": "https://api.github.com/users/tom-sherman/orgs",
          "repos_url": "https://api.github.com/users/tom-sherman/repos",
          "events_url": "https://api.github.com/users/tom-sherman/events{/privacy}",
          "received_events_url": "https://api.github.com/users/tom-sherman/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 710375792,
            "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
            "name": "Type: Discussion",
            "color": "fef2c0",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-15T10:03:34Z",
        "updated_at": "2024-08-16T16:17:16Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nhttps://stackblitz.com/edit/vitejs-vite-kbccdh?file=src%2FApp.tsx\r\n\r\n```tsx\r\nimport { use, useState } from 'react';\r\n\r\nexport default function App() {\r\n  const [p] = useState(() => new Promise((res) => setTimeout(res, 500)));\r\n\r\n  use(p);\r\n  return 'hello!';\r\n}\r\n```\r\n\r\nNote: I do not have a parent Suspense boundary.\r\n\r\n### Actual behaviour\r\n\r\nAn error is thrown\r\n\r\n> Error: async/await is not yet supported in Client Components, only Server Components. This error is often caused by accidentally adding `'use client'` to a module that was originally written for the server.\r\n\r\n### Expected behaviour\r\n\r\nI think this should render \"hello!\". If I lift the promise out of the state initialiser into the module, there is no error - React holds from rendering the app until the promise resolves.\r\n\r\n```tsx\r\n// This works fine, even without a parent <Suspense>\r\nconst p = new Promise((res) => setTimeout(res, 500));\r\nexport default function App() {\r\n  use(p);\r\n  return 'hello!';\r\n}\r\n```\r\n\r\nIf it's expected to throw an error in this scenario, then I think the error message should be improved. It should log the error message about the component suspended without a parent suspense boundary. I do think this is inconsistent though, and in original example should just work.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30709/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30709/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30706",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30706/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30706/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30706/events",
        "html_url": "https://github.com/facebook/react/issues/30706",
        "id": 2467506100,
        "node_id": "I_kwDOAJy2Ks6TEye0",
        "number": 30706,
        "title": "[React 19] RSC and `as` property pattern",
        "user": {
          "login": "FezVrasta",
          "id": 5382443,
          "node_id": "MDQ6VXNlcjUzODI0NDM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5382443?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/FezVrasta",
          "html_url": "https://github.com/FezVrasta",
          "followers_url": "https://api.github.com/users/FezVrasta/followers",
          "following_url": "https://api.github.com/users/FezVrasta/following{/other_user}",
          "gists_url": "https://api.github.com/users/FezVrasta/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/FezVrasta/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/FezVrasta/subscriptions",
          "organizations_url": "https://api.github.com/users/FezVrasta/orgs",
          "repos_url": "https://api.github.com/users/FezVrasta/repos",
          "events_url": "https://api.github.com/users/FezVrasta/events{/privacy}",
          "received_events_url": "https://api.github.com/users/FezVrasta/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-15T06:38:15Z",
        "updated_at": "2024-08-15T10:42:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nMany UI libraries adopt the `as` property pattern, especially for the Icon component.\r\n\r\n```\r\n<Icon as={ArrowIcon} />\r\n```\r\n\r\nThis pattern is currently unsupported by server components, and requires to manually define client components for each icon one decides to use.\r\n\r\nIs there a suggested alternative pattern the React team would like to promote? If not, do you think passing components as properties could be supported? In theory a component could be serialized (to a pointer) and then sent over HTTP, then the client could either dynamically import it, or the bundler could statically analyze it and bundle it on the client side code.\r\n\r\nAlternatively, when a component is passed as property, the server component could inline the child component so that they are forced to be render together.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30706/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30706/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30704",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30704/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30704/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30704/events",
        "html_url": "https://github.com/facebook/react/issues/30704",
        "id": 2467398525,
        "node_id": "I_kwDOAJy2Ks6TEYN9",
        "number": 30704,
        "title": "[React 19]JSX asking that I should declare react at the top of the file",
        "user": {
          "login": "jetro4u",
          "id": 32860982,
          "node_id": "MDQ6VXNlcjMyODYwOTgy",
          "avatar_url": "https://avatars.githubusercontent.com/u/32860982?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jetro4u",
          "html_url": "https://github.com/jetro4u",
          "followers_url": "https://api.github.com/users/jetro4u/followers",
          "following_url": "https://api.github.com/users/jetro4u/following{/other_user}",
          "gists_url": "https://api.github.com/users/jetro4u/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jetro4u/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jetro4u/subscriptions",
          "organizations_url": "https://api.github.com/users/jetro4u/orgs",
          "repos_url": "https://api.github.com/users/jetro4u/repos",
          "events_url": "https://api.github.com/users/jetro4u/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jetro4u/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 620368407,
            "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
            "name": "Resolution: Needs More Information",
            "color": "fffde7",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-15T04:52:44Z",
        "updated_at": "2024-08-15T12:32:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\nPlease I have a question. I am using React 19 canary version. It keeps asking that I should declare react at the top of the file and I know that was removed in v18 or so. Is it now a requirement or a bug?\r\n\r\nPrecisely the error says `'React' refers to a UMD global, but the current file is a module. Consider adding an import instead.ts(2686)`\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30704/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30704/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30698",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30698/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30698/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30698/events",
        "html_url": "https://github.com/facebook/react/issues/30698",
        "id": 2466857181,
        "node_id": "I_kwDOAJy2Ks6TCUDd",
        "number": 30698,
        "title": "Bug: No \"exports\" in use-sync-external-store package.json",
        "user": {
          "login": "alexkb0009",
          "id": 10673737,
          "node_id": "MDQ6VXNlcjEwNjczNzM3",
          "avatar_url": "https://avatars.githubusercontent.com/u/10673737?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/alexkb0009",
          "html_url": "https://github.com/alexkb0009",
          "followers_url": "https://api.github.com/users/alexkb0009/followers",
          "following_url": "https://api.github.com/users/alexkb0009/following{/other_user}",
          "gists_url": "https://api.github.com/users/alexkb0009/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/alexkb0009/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/alexkb0009/subscriptions",
          "organizations_url": "https://api.github.com/users/alexkb0009/orgs",
          "repos_url": "https://api.github.com/users/alexkb0009/repos",
          "events_url": "https://api.github.com/users/alexkb0009/events{/privacy}",
          "received_events_url": "https://api.github.com/users/alexkb0009/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-14T21:16:24Z",
        "updated_at": "2024-08-15T03:33:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.9\r\n\r\nThis is less of a critical error and more of suggestion to fix issue/non-ideal-scenario with certain webpack builds. I did not have permission to push a branch to this repo to make PR with.\r\n\r\n## Steps To Reproduce\r\n\r\n1. `import { useSyncExternalStore } from 'use-sync-external-store/shim';` in a library that uses `\"type\":\"module\"` in its package.json, and is then imported into an application built with webpack 5.\r\n    - Be using webpack 5 _without_ setting `resolve: { fullySpecified: false }` in webpack config's module.rules[].resolve.\r\n2. Receive an error:\r\n     > BREAKING CHANGE: The request 'use-sync-external-store/shim' failed to resolve only because it was resolved as fully specified (probably because the origin is strict EcmaScript Module, e.g. a module with javascript mimetype, a \"*.mjs\" file, or a \"*.js\" file where the package contains '\"type\": \"module\"').\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\n---\r\n\r\nWe have such an import line in our code. We also have an ESLint rule to prevent fully specified imports and do not want to make an exception. I would like to propose adding 'exports' to the [package.json in use-sync-external-store](https://github.com/facebook/react/blob/main/packages/use-sync-external-store/package.json) containing the following or similar:\r\n\r\n```json\r\n  \"exports\": {\r\n    \".\": {\r\n      \"default\": \"./index.js\"\r\n    },\r\n    \"./package.json\": \"./package.json\",\r\n    \"./shim\": {\r\n      \"default\": \"./shim/index.js\"\r\n    }\r\n  }\r\n```\r\n(used [react's package.json](https://github.com/facebook/react/blob/main/packages/react/package.json#L24) as basis)\r\n\r\nHave tested the above inside own project's node_modules/use-sync-external-store/package.json and confirmed this fixes the build error without needing to add in `resolve: { fullySpecified: false }` nor fully specify the path. Did not need package.json export, and did not need or test the \".\" export.\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30698/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30698/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30691",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30691/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30691/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30691/events",
        "html_url": "https://github.com/facebook/react/issues/30691",
        "id": 2465653191,
        "node_id": "I_kwDOAJy2Ks6S9uHH",
        "number": 30691,
        "title": "[React 19] No re-render after 'useActionState' action queue finishes",
        "user": {
          "login": "morditore",
          "id": 11913152,
          "node_id": "MDQ6VXNlcjExOTEzMTUy",
          "avatar_url": "https://avatars.githubusercontent.com/u/11913152?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/morditore",
          "html_url": "https://github.com/morditore",
          "followers_url": "https://api.github.com/users/morditore/followers",
          "following_url": "https://api.github.com/users/morditore/following{/other_user}",
          "gists_url": "https://api.github.com/users/morditore/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/morditore/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/morditore/subscriptions",
          "organizations_url": "https://api.github.com/users/morditore/orgs",
          "repos_url": "https://api.github.com/users/morditore/repos",
          "events_url": "https://api.github.com/users/morditore/events{/privacy}",
          "received_events_url": "https://api.github.com/users/morditore/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-14T12:04:29Z",
        "updated_at": "2024-08-16T09:00:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nWhen multiple client side actions are scheduled via `useActionState`, the \"Action queue\" promises are processed sequentially as expected. However after the last action promise resolves, the component is not re-rendered. This means, the component is stuck in \"loading\" without access to \"data\".\r\n\r\n### Steps to reproduce\r\n\r\n1. Open the demo here: https://codesandbox.io/p/sandbox/use-action-state-stuck-xl72xk?file=%2Fsrc%2FApp.js\r\n2. Click the \"Send request\" button two times.\r\n3. After 10 seconds (each request is 5 seconds and processed sequentially), the component still shows \"Loading...\" and not the dummy data (as I would expect).\r\n\r\n\r\n#### Notes\r\n* When only one \"action\" is scheduled (button clicked once), the component re-renders when the action is done, as expected.\r\n* The promise \"delay\" seems to have an effect. When `REQUEST_DELAY` is set lower i.e. 1000ms, this \"issue\" is not present.\r\n* Possibly related: https://github.com/facebook/react/issues/27630\r\n\r\nIs this behavior intentional?\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30691/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30691/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30687",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30687/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30687/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30687/events",
        "html_url": "https://github.com/facebook/react/issues/30687",
        "id": 2464991801,
        "node_id": "I_kwDOAJy2Ks6S7Mo5",
        "number": 30687,
        "title": "Bug: Object.keys inside the Shallow Equal can be improved ",
        "user": {
          "login": "Biki-das",
          "id": 72331432,
          "node_id": "MDQ6VXNlcjcyMzMxNDMy",
          "avatar_url": "https://avatars.githubusercontent.com/u/72331432?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Biki-das",
          "html_url": "https://github.com/Biki-das",
          "followers_url": "https://api.github.com/users/Biki-das/followers",
          "following_url": "https://api.github.com/users/Biki-das/following{/other_user}",
          "gists_url": "https://api.github.com/users/Biki-das/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Biki-das/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Biki-das/subscriptions",
          "organizations_url": "https://api.github.com/users/Biki-das/orgs",
          "repos_url": "https://api.github.com/users/Biki-das/repos",
          "events_url": "https://api.github.com/users/Biki-das/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Biki-das/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-14T06:17:34Z",
        "updated_at": "2024-08-14T10:01:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "if we look at this file https://github.com/facebook/react/blob/main/packages/shared/shallowEqual.js\r\nwhich is a utility for shallowEqual, in this code we are using Object.keys() method,  i tried to have this method working without Object.keys() , which does not create intermediate arrays.\r\n\r\nthis actually has a near around 30% better performance in the comparison loop we are trying to do, now that can be something that varies from browser to browser, and also due to many other factors, but would love to know the opinion of the maintainers of the same of what they think about, i am attaching a JS benchmark which calculates the benchmark for the both piece of code.\r\n\r\n\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. check the JS benchmark https://jsben.ch/d9SVb\r\n2. click on run tests\r\n\r\nThe code block 2 contains the piece of code which does not uses Object.keys() and is much faster.\r\n\r\n\r\n\r\n\r\nhttps://github.com/user-attachments/assets/8fbe9850-8f4d-4de4-be15-96bff5db10dd\r\n\r\n\r\n\r\n\r\n\r\n**Current Code**\r\n\r\n```\r\nfunction shallowEqual(objA, objB) {\r\n  if (is(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (\r\n    typeof objA !== 'object' ||\r\n    objA === null ||\r\n    typeof objB !== 'object' ||\r\n    objB === null\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  const keysA = Object.keys(objA);\r\n  const keysB = Object.keys(objB);\r\n\r\n  if (keysA.length !== keysB.length) {\r\n    return false;\r\n  }\r\n\r\n  // Test for A's keys different from B.\r\n  for (let i = 0; i < keysA.length; i++) {\r\n    const currentKey = keysA[i];\r\n    if (\r\n      !hasOwnProperty.call(objB, currentKey) ||\r\n      !is(objA[currentKey], objB[currentKey])\r\n    ) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\nfor(let i = 0; i <= 1000; i++){\r\n\r\nshallowEqual(a, b);\r\n}\r\n\r\n```\r\n\r\n**Code that has a  better performance**\r\n\r\n```\r\nfunction shallowEqual(objA, objB) {\r\n  if (is(objA, objB)) {\r\n    return true;\r\n  }\r\n\r\n  if (\r\n    typeof objA !== 'object' ||\r\n    objA === null ||\r\n    typeof objB !== 'object' ||\r\n    objB === null\r\n  ) {\r\n    return false;\r\n  }\r\n let aLength = 0;\r\n  let bLength = 0;\r\n\r\n  for (const key in objA) {\r\n    aLength += 1;\r\n\r\n    if (!hasOwnProperty.call(objB, key) || !is(objA[key], objB[key])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  for (const _ in objB) {\r\n    bLength += 1;\r\n  }\r\n\r\n  return aLength === bLength;\r\n}\r\n for(let i = 0; i <= 1000; i++){\r\nshallowEqual(a, b);\r\n }\r\n\r\n\r\n```\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30687/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30687/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30682",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30682/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30682/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30682/events",
        "html_url": "https://github.com/facebook/react/issues/30682",
        "id": 2464333591,
        "node_id": "I_kwDOAJy2Ks6S4r8X",
        "number": 30682,
        "title": "[DevTools Bug]: Cannot view source with remote sourcemap containing absolute `sources`",
        "user": {
          "login": "yepitschunked",
          "id": 125177,
          "node_id": "MDQ6VXNlcjEyNTE3Nw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/125177?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/yepitschunked",
          "html_url": "https://github.com/yepitschunked",
          "followers_url": "https://api.github.com/users/yepitschunked/followers",
          "following_url": "https://api.github.com/users/yepitschunked/following{/other_user}",
          "gists_url": "https://api.github.com/users/yepitschunked/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/yepitschunked/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/yepitschunked/subscriptions",
          "organizations_url": "https://api.github.com/users/yepitschunked/orgs",
          "repos_url": "https://api.github.com/users/yepitschunked/repos",
          "events_url": "https://api.github.com/users/yepitschunked/events{/privacy}",
          "received_events_url": "https://api.github.com/users/yepitschunked/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-13T22:22:45Z",
        "updated_at": "2024-09-11T02:13:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nwww.airbnb.com\n\n### Repro steps\n\n1. Visit www.airbnb.com\r\n2. Use component inspector to inspect a React component\r\n3. Attempt to jump to source and observe that it fails\r\n\r\nYou won't be able to repro this since the sourcemaps aren't publicly accessible, but hopefully my issue description below explains the matter clearly:\r\n\r\nOur sourcemaps contain no `sourceRoot`, but the `sources` are absolute paths (e.g `/foo/bar/baz/main.js`). The sourcemaps are uploaded to a domain `sourcemaps.d.musta.ch` and our minified JS files contain `sourceMappingURL=https://sourcemaps.d.musta.ch/foo/bar/baz.js.map` comments pointing to them. \r\n\r\nPer the [spec](https://sourcemaps.info/spec.html#h.75yo6yoyk7x5):\r\n> Resolving Sources\r\nIf the sources are not absolute URLs after prepending of the “sourceRoot”, the sources are resolved relative to the SourceMap (like resolving script src in a html document).\r\n\r\nChrome follows the spec. `/foo/bar/baz/main.js` is an absolute *filesystem path*, but it is not an absolute `URL` - it would need to be something like `file:///foo/bar/baz/main.js` to be an absolute URL. Therefore, Chrome resolves the path relative to the sourcemap, resulting in `https://sourcemaps.d.musta.ch/foo/bar/baz/main.js`. This is the path that shows up in the Sources tab. \r\n\r\nHowever, the React code here does not follow the spec:\r\nhttps://github.com/facebook/react/blob/8e60bacd08215bd23f0bf05dde407cd133885aa1/packages/react-devtools-shared/src/symbolicateSource.js#L101\r\n\r\nAs a result, the sourceURL remains `/foo/bar/baz/main.js`. The \"View Source\" functionality is broken since that doesn't point to a valid path. \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30682/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30682/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30664",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30664/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30664/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30664/events",
        "html_url": "https://github.com/facebook/react/issues/30664",
        "id": 2461531588,
        "node_id": "I_kwDOAJy2Ks6St_3E",
        "number": 30664,
        "title": "Bug: in chrome version  127.0.6533.100 and the previous release, debugger hangs on breakpoint, when attempting to interact with values",
        "user": {
          "login": "KellyGrantSDSU",
          "id": 177801078,
          "node_id": "U_kgDOCpkHdg",
          "avatar_url": "https://avatars.githubusercontent.com/u/177801078?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/KellyGrantSDSU",
          "html_url": "https://github.com/KellyGrantSDSU",
          "followers_url": "https://api.github.com/users/KellyGrantSDSU/followers",
          "following_url": "https://api.github.com/users/KellyGrantSDSU/following{/other_user}",
          "gists_url": "https://api.github.com/users/KellyGrantSDSU/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/KellyGrantSDSU/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/KellyGrantSDSU/subscriptions",
          "organizations_url": "https://api.github.com/users/KellyGrantSDSU/orgs",
          "repos_url": "https://api.github.com/users/KellyGrantSDSU/repos",
          "events_url": "https://api.github.com/users/KellyGrantSDSU/events{/privacy}",
          "received_events_url": "https://api.github.com/users/KellyGrantSDSU/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-08-12T17:21:21Z",
        "updated_at": "2024-08-21T16:30:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Starting with the version ending in .88 and in  127.0.6533.100, the react devtool plugin hangs when a breakpoint is hit and you attempt to hover over any variables in the current scope, where the break happened.   You can briefly scroll the right panel with the mouse wheel, but fairly soon that goes away too.  If you immediately press continue, the code continues to run.  Otherwise, you have to press F12 to remove the debugger and press F12 again to restart it.  The other tabs seem to function normally, but the ability to set breakpoints and inspect elements is very broken\r\n\r\n\r\nReact version:\r\nExtension 5.3.1, react 17.02\r\n\r\n## Steps To Reproduce\r\n\r\n1. Set a breakpoint\r\n2. Reach the breakpoint.\r\n3. Attempt to inspect elements  in the current scope.\r\n4. Find the debugger is now hung and will not interact with the mouse.\r\n\r\nI don't have a code example, it doesn't seem to be dependent on any particular code, it behaves the same in every part of our application; set a breakpoint, hit it, and you are stuck.\r\n\r\n\r\n## The current behavior\r\nDebugger hangs upon stopping at a breakpoint\r\n\r\n## The expected behavior\r\nDebugger allows user to inspect code and variables when hitting a breakpoint.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30664/reactions",
          "total_count": 7,
          "+1": 7,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30664/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30661",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30661/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30661/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30661/events",
        "html_url": "https://github.com/facebook/react/issues/30661",
        "id": 2460991461,
        "node_id": "I_kwDOAJy2Ks6Sr7_l",
        "number": 30661,
        "title": "[DevTools Bug] getCommitTree(): Invalid commit \"2\" for root \"1\". There are only \"1\" commits.  ",
        "user": {
          "login": "VivekMendhe",
          "id": 77184161,
          "node_id": "MDQ6VXNlcjc3MTg0MTYx",
          "avatar_url": "https://avatars.githubusercontent.com/u/77184161?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/VivekMendhe",
          "html_url": "https://github.com/VivekMendhe",
          "followers_url": "https://api.github.com/users/VivekMendhe/followers",
          "following_url": "https://api.github.com/users/VivekMendhe/following{/other_user}",
          "gists_url": "https://api.github.com/users/VivekMendhe/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/VivekMendhe/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/VivekMendhe/subscriptions",
          "organizations_url": "https://api.github.com/users/VivekMendhe/orgs",
          "repos_url": "https://api.github.com/users/VivekMendhe/repos",
          "events_url": "https://api.github.com/users/VivekMendhe/events{/privacy}",
          "received_events_url": "https://api.github.com/users/VivekMendhe/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-08-12T13:20:04Z",
        "updated_at": "2024-08-12T13:20:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\ndevelopment website\n\n### Repro steps\n\nUncaught Error: getCommitTree(): Invalid commit \"1\" for root \"1\". There are only \"1\" commits.\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.3.1-ccb20cb88b\n\n### Error message (automated)\n\ngetCommitTree(): Invalid commit \"2\" for root \"1\". There are only \"1\" commits.\n\n### Error call stack (automated)\n\n```text\nat getCommitTree (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1156298)\r\n    at fe.getCommitTree (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1159973)\r\n    at CommitRankedAutoSizer (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1405976)\r\n    at renderWithHooks (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:52335)\r\n    at updateFunctionComponent (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:79640)\r\n    at beginWork (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:93314)\r\n    at performUnitOfWork (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:150703)\r\n    at workLoopSync (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:150571)\r\n    at renderRootSync (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:150302)\r\n    at recoverFromConcurrentError (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:146135)\n```\n\n\n### Error component stack (automated)\n\n```text\nat CommitRankedAutoSizer (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1405777)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1297185)\r\n    at chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1534843\r\n    at ua (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1314716)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1317427)\r\n    at chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1317624\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1317427)\r\n    at TimelineContextController (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1394187)\r\n    at ProfilerContextController (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1385842)\r\n    at TreeContextController (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1209165)\r\n    at SettingsContextController (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1237405)\r\n    at ModalDialogContextController (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1321890)\r\n    at DevTools_DevTools (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:1:1542579)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=getCommitTree(): Invalid commit  for root . There are only  commits. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30661/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30661/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30659",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30659/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30659/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30659/events",
        "html_url": "https://github.com/facebook/react/issues/30659",
        "id": 2460611082,
        "node_id": "I_kwDOAJy2Ks6SqfIK",
        "number": 30659,
        "title": "Bug: React refresh fails when component type is changed to memo or forward ref and vice versa",
        "user": {
          "login": "Biki-das",
          "id": 72331432,
          "node_id": "MDQ6VXNlcjcyMzMxNDMy",
          "avatar_url": "https://avatars.githubusercontent.com/u/72331432?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Biki-das",
          "html_url": "https://github.com/Biki-das",
          "followers_url": "https://api.github.com/users/Biki-das/followers",
          "following_url": "https://api.github.com/users/Biki-das/following{/other_user}",
          "gists_url": "https://api.github.com/users/Biki-das/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Biki-das/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Biki-das/subscriptions",
          "organizations_url": "https://api.github.com/users/Biki-das/orgs",
          "repos_url": "https://api.github.com/users/Biki-das/repos",
          "events_url": "https://api.github.com/users/Biki-das/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Biki-das/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-12T10:27:17Z",
        "updated_at": "2024-09-17T19:58:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "when Editing a JSX component, if we try to move from a normal React component to a memo Wrapped component,  or to a forwardRef wrapped, we cannot see any component rendered, but rather an error  ```Uncaught TypeError: Component is not a function```\r\n\r\nthis seems to be an issue with React refresh since if we try to reload the page, the component renders fine without any issue.\r\n\r\nif we start with a code like below\r\n\r\n```\r\nimport { forwardRef, memo } from \"react\";\r\n\r\nexport function Component() {\r\n   return <h1>This is a component</h1>;\r\n}\r\n\r\n```\r\n\r\nand then edit it to \r\n\r\n```\r\n\r\nexport const Component = memo(function Test() {\r\n  return <h1>This is a memo component</h1>;\r\n});\r\n\r\n```\r\n\r\nthe error comes up\r\n\r\n\r\n\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n[CodesandBoxLink](https://codesandbox.io/p/devbox/relaxed-clarke-6tty7m)\r\n\r\n1. Visit the Sandbox URL\r\n2. try editing the Component File\r\n3. the initial render is of a normal Component\r\n4. comment out the Normal component and uncomment the Memo wrapped component\r\n5. it does not render instead if you check the console you would see an error\r\n6. try commenting the Memo out and then check the ForwardRef, the same thing happens\r\n\r\n\r\nLink to code example:\r\n[CodesandBoxLink](https://codesandbox.io/p/devbox/relaxed-clarke-6tty7m)\r\n\r\nif the codeSandBox is not able to reproduce the same due to some reason, try cloning the below repository\r\nhttps://github.com/Biki-das/ReactRefreshBug\r\n\r\n## The current behavior\r\n\r\nhttps://github.com/user-attachments/assets/4e691ebf-38d1-4c05-9585-c5292aab5563\r\n\r\n\r\n## The expected behavior\r\nReact refresh should have work and the component should have rendered.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30659/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30659/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30654",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30654/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30654/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30654/events",
        "html_url": "https://github.com/facebook/react/issues/30654",
        "id": 2458728523,
        "node_id": "I_kwDOAJy2Ks6SjThL",
        "number": 30654,
        "title": "Bug: Inconsistent styles between client-side and server-side routing",
        "user": {
          "login": "denk0403",
          "id": 3473945,
          "node_id": "MDQ6VXNlcjM0NzM5NDU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3473945?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/denk0403",
          "html_url": "https://github.com/denk0403",
          "followers_url": "https://api.github.com/users/denk0403/followers",
          "following_url": "https://api.github.com/users/denk0403/following{/other_user}",
          "gists_url": "https://api.github.com/users/denk0403/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/denk0403/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/denk0403/subscriptions",
          "organizations_url": "https://api.github.com/users/denk0403/orgs",
          "repos_url": "https://api.github.com/users/denk0403/repos",
          "events_url": "https://api.github.com/users/denk0403/events{/privacy}",
          "received_events_url": "https://api.github.com/users/denk0403/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-09T22:14:35Z",
        "updated_at": "2024-08-20T20:08:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 18.2.0\r\n\r\nThis may be verging into undefined behavior, but there seems to be a slight discrepancy when it comes to applying ill-formed CSS styles to a React element. For instance, say we had the following JSX:\r\n```tsx\r\n<div style={{ backgroundColor: \"orange; font-size: 40px;\", color: \"blue\" }}>Hello World</div>\r\n```\r\n\r\nWhen the JSX is server rendered, it produces mostly the \"expected\" HTML:\r\n```html\r\n<div style=\"background-color:orange; font-size: 40px;;color:blue\">Hello World</div>\r\n```\r\n\r\nHowever, when the JSX is rendered from client-side routing, it strips the ill-formed style from the HTML and reports a warning in the console:\r\n```html\r\n<div style=\"color: blue;\">Hello World</div>\r\n```\r\n```\r\nWarning: Style property values shouldn't contain a semicolon. Try \"backgroundColor: orange; font-size: 40px\" instead.\r\n    at div\r\n```\r\n\r\nWhile ultimately the problem is with the style definition, it seems like React should be more consistent with how it handles bad styles. I would expect either that the styles are present in both types of routing, or stripped and warned about in both types of routing.\r\n\r\n## Steps To Reproduce\r\nThe steps below are in a Next.js project, but I have been able to reproduce this in Remix as well.\r\n\r\n1. Press on \"Go to Test\".\r\n2. Observe that the button text is blue, but the rest of the styles are the defaults.\r\n3. Click the button to refresh the page.\r\n4. Observe that the button now has an orange background and larger font size.\r\n\r\nLink to code example: https://codesandbox.io/p/devbox/styles-bug-3kxt2g\r\n\r\n| Client-side routing | Server-side routing |\r\n| - | - |\r\n| <img width=\"403\" alt=\"image\" src=\"https://github.com/user-attachments/assets/500fe2a7-1aef-445f-97a7-73add6921096\"> | <img width=\"403\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ca8dfee1-ed18-46c8-962c-50ca68657339\"> |\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30654/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30654/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30648",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30648/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30648/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30648/events",
        "html_url": "https://github.com/facebook/react/issues/30648",
        "id": 2457754037,
        "node_id": "I_kwDOAJy2Ks6Sflm1",
        "number": 30648,
        "title": "Bug: White Screen Issue with Vite React App on iOS – Works on Other Platforms",
        "user": {
          "login": "AdityaSingh18",
          "id": 67780745,
          "node_id": "MDQ6VXNlcjY3NzgwNzQ1",
          "avatar_url": "https://avatars.githubusercontent.com/u/67780745?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AdityaSingh18",
          "html_url": "https://github.com/AdityaSingh18",
          "followers_url": "https://api.github.com/users/AdityaSingh18/followers",
          "following_url": "https://api.github.com/users/AdityaSingh18/following{/other_user}",
          "gists_url": "https://api.github.com/users/AdityaSingh18/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AdityaSingh18/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AdityaSingh18/subscriptions",
          "organizations_url": "https://api.github.com/users/AdityaSingh18/orgs",
          "repos_url": "https://api.github.com/users/AdityaSingh18/repos",
          "events_url": "https://api.github.com/users/AdityaSingh18/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AdityaSingh18/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-09T11:54:24Z",
        "updated_at": "2024-09-06T02:59:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I’m developing a React application using Vite, and I'm facing an issue where the app displays a white blank screen only on iOS devices. But it works perfectly on Android devices and desktop browsers. I’ve checked it using Chrome Inspect on my iPhone, and the console shows “Vite connecting” and “Vite connected” but the screen remains blank.Please check the attached package.json and vite.config.js for reference. Any help or advice would be greatly appreciated!-->\r\n\r\n\r\n\r\n\r\n**package.json**\r\n\r\n`{\r\n  \"name\": \"my-app\",\r\n  \"private\": true,\r\n  \"version\": \"0.0.0\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"vite build\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint:check\": \"NODE_OPTIONS='--max-old-space-size=4096' eslint . --ext=js,jsx --no-color\",\r\n    \"lint:fix\": \"NODE_OPTIONS='--max-old-space-size=4096' eslint . --ext=js,jsx --fix\",\r\n    \"audit:fix\": \"npm audit fix\",\r\n    \"prettier:check\": \"prettier --check \\\"src/**/*.{js,jsx}\\\"\",\r\n    \"prettier:fix\": \"prettier --write \\\"src/**/*.{js,jsx}\\\"\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@fortawesome/fontawesome-svg-core\": \"^6.4.0\",\r\n    \"@fortawesome/free-regular-svg-icons\": \"^6.4.0\",\r\n    \"@fortawesome/free-solid-svg-icons\": \"^6.4.0\",\r\n    \"@fortawesome/react-fontawesome\": \"^0.2.0\",\r\n    \"@hookform/resolvers\": \"^3.1.0\",\r\n    \"@reduxjs/toolkit\": \"^1.9.5\",\r\n    \"@tanstack/react-query\": \"^4.29.5\",\r\n    \"@tanstack/react-query-devtools\": \"^4.29.5\",\r\n    \"axios\": \"^1.3.6\",\r\n    \"bootstrap\": \"^5.1.3\",\r\n    \"classnames\": \"^2.3.2\",\r\n    \"country-state-city\": \"^3.1.4\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"moment\": \"^2.29.4\",\r\n    \"prop-types\": \"^15.8.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-bootstrap\": \"^2.7.4\",\r\n    \"react-currency-input-field\": \"^3.6.11\",\r\n    \"react-date-picker\": \"^10.5.2\",\r\n    \"react-datepicker\": \"^4.11.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-dropzone\": \"^14.2.3\",\r\n    \"react-google-autocomplete\": \"^2.7.3\",\r\n    \"react-hook-form\": \"^7.43.9\",\r\n    \"react-redux\": \"^8.1.2\",\r\n    \"react-router-dom\": \"^6.10.0\",\r\n    \"react-select\": \"^5.7.2\",\r\n    \"react-signature-canvas\": \"^1.0.6\",\r\n    \"react-slick\": \"^0.29.0\",\r\n    \"react-switch\": \"^7.0.0\",\r\n    \"react-table\": \"^7.8.0\",\r\n    \"react-time-picker\": \"^6.5.2\",\r\n    \"react-toastify\": \"^9.1.2\",\r\n    \"react-webcam\": \"^7.1.1\",\r\n    \"redux-persist\": \"^6.0.0\",\r\n    \"slick-carousel\": \"^1.8.1\",\r\n    \"socket.io-client\": \"^4.7.1\",\r\n    \"yup\": \"^1.1.1\"\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/eslint-parser\": \"^7.21.3\",\r\n    \"@types/react\": \"^18.0.28\",\r\n    \"@types/react-dom\": \"^18.0.11\",\r\n    \"@vitejs/plugin-react\": \"^4.0.0-beta.0\",\r\n    \"autoprefixer\": \"^10.4.14\",\r\n    \"eslint\": \"^8.38.0\",\r\n    \"eslint-config-prettier\": \"^8.8.0\",\r\n    \"eslint-import-resolver-alias\": \"^1.1.2\",\r\n    \"eslint-plugin-extra-rules\": \"^0.0.0-development\",\r\n    \"eslint-plugin-flowtype\": \"^8.0.3\",\r\n    \"eslint-plugin-import\": \"^2.27.5\",\r\n    \"eslint-plugin-jest\": \"^27.2.1\",\r\n    \"eslint-plugin-jsx-a11y\": \"^6.7.1\",\r\n    \"eslint-plugin-lodash\": \"^7.4.0\",\r\n    \"eslint-plugin-no-inline-styles\": \"^1.0.5\",\r\n    \"eslint-plugin-prettier\": \"^4.2.1\",\r\n    \"eslint-plugin-react\": \"^7.32.2\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.3.4\",\r\n    \"prettier\": \"^2.8.8\",\r\n    \"pretty-quick\": \"^3.1.3\",\r\n    \"sass\": \"^1.62.0\",\r\n    \"vite\": \"^4.3.0\",\r\n    \"vite-plugin-eslint\": \"^1.8.1\"\r\n  }\r\n}\r\n{\r\n  \"name\": \"my-app\",\r\n  \"private\": true,\r\n  \"version\": \"0.0.0\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"vite build\",\r\n    \"preview\": \"vite preview\",\r\n    \"lint:check\": \"NODE_OPTIONS='--max-old-space-size=4096' eslint . --ext=js,jsx --no-color\",\r\n    \"lint:fix\": \"NODE_OPTIONS='--max-old-space-size=4096' eslint . --ext=js,jsx --fix\",\r\n    \"audit:fix\": \"npm audit fix\",\r\n    \"prettier:check\": \"prettier --check \\\"src/**/*.{js,jsx}\\\"\",\r\n    \"prettier:fix\": \"prettier --write \\\"src/**/*.{js,jsx}\\\"\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@fortawesome/fontawesome-svg-core\": \"^6.4.0\",\r\n    \"@fortawesome/free-regular-svg-icons\": \"^6.4.0\",\r\n    \"@fortawesome/free-solid-svg-icons\": \"^6.4.0\",\r\n    \"@fortawesome/react-fontawesome\": \"^0.2.0\",\r\n    \"@hookform/resolvers\": \"^3.1.0\",\r\n    \"@reduxjs/toolkit\": \"^1.9.5\",\r\n    \"@tanstack/react-query\": \"^4.29.5\",\r\n    \"@tanstack/react-query-devtools\": \"^4.29.5\",\r\n    \"axios\": \"^1.3.6\",\r\n    \"bootstrap\": \"^5.1.3\",\r\n    \"classnames\": \"^2.3.2\",\r\n    \"country-state-city\": \"^3.1.4\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"moment\": \"^2.29.4\",\r\n    \"prop-types\": \"^15.8.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-bootstrap\": \"^2.7.4\",\r\n    \"react-currency-input-field\": \"^3.6.11\",\r\n    \"react-date-picker\": \"^10.5.2\",\r\n    \"react-datepicker\": \"^4.11.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-dropzone\": \"^14.2.3\",\r\n    \"react-google-autocomplete\": \"^2.7.3\",\r\n    \"react-hook-form\": \"^7.43.9\",\r\n    \"react-redux\": \"^8.1.2\",\r\n    \"react-router-dom\": \"^6.10.0\",\r\n    \"react-select\": \"^5.7.2\",\r\n    \"react-signature-canvas\": \"^1.0.6\",\r\n    \"react-slick\": \"^0.29.0\",\r\n    \"react-switch\": \"^7.0.0\",\r\n    \"react-table\": \"^7.8.0\",\r\n    \"react-time-picker\": \"^6.5.2\",\r\n    \"react-toastify\": \"^9.1.2\",\r\n    \"react-webcam\": \"^7.1.1\",\r\n    \"redux-persist\": \"^6.0.0\",\r\n    \"slick-carousel\": \"^1.8.1\",\r\n    \"socket.io-client\": \"^4.7.1\",\r\n    \"yup\": \"^1.1.1\"\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/eslint-parser\": \"^7.21.3\",\r\n    \"@types/react\": \"^18.0.28\",\r\n    \"@types/react-dom\": \"^18.0.11\",\r\n    \"@vitejs/plugin-react\": \"^4.0.0-beta.0\",\r\n    \"autoprefixer\": \"^10.4.14\",\r\n    \"eslint\": \"^8.38.0\",\r\n    \"eslint-config-prettier\": \"^8.8.0\",\r\n    \"eslint-import-resolver-alias\": \"^1.1.2\",\r\n    \"eslint-plugin-extra-rules\": \"^0.0.0-development\",\r\n    \"eslint-plugin-flowtype\": \"^8.0.3\",\r\n    \"eslint-plugin-import\": \"^2.27.5\",\r\n    \"eslint-plugin-jest\": \"^27.2.1\",\r\n    \"eslint-plugin-jsx-a11y\": \"^6.7.1\",\r\n    \"eslint-plugin-lodash\": \"^7.4.0\",\r\n    \"eslint-plugin-no-inline-styles\": \"^1.0.5\",\r\n    \"eslint-plugin-prettier\": \"^4.2.1\",\r\n    \"eslint-plugin-react\": \"^7.32.2\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.3.4\",\r\n    \"prettier\": \"^2.8.8\",\r\n    \"pretty-quick\": \"^3.1.3\",\r\n    \"sass\": \"^1.62.0\",\r\n    \"vite\": \"^4.3.0\",\r\n    \"vite-plugin-eslint\": \"^1.8.1\"\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\n\r\n**vite.config.js**\r\n\r\n` import react from '@vitejs/plugin-react'\r\nimport { defineConfig, loadEnv } from 'vite'\r\nimport eslint from 'vite-plugin-eslint'\r\n\r\n// \r\nexport default ({ mode }) => {\r\n  process.env = { ...process.env, ...loadEnv(mode, process.cwd()) }\r\n\r\n  return defineConfig({\r\n    base:'/',\r\n    plugins: [react(), eslint()],\r\n    server: {\r\n      port: 3000,\r\n    },\r\n    resolve: {\r\n      alias: [\r\n        { find: '@views', replacement: '/src/views' },\r\n        { find: '@components', replacement: '/src/components' },\r\n        { find: '@assets', replacement: '/src/assets' },\r\n        { find: '@config', replacement: '/src/config' },\r\n        { find: '@services', replacement: '/src/services' },\r\n        { find: '@hooks', replacement: '/src/hooks' },\r\n        { find: '@utils', replacement: '/src/utils' },\r\n        { find: '@redux', replacement: '/src/redux' },\r\n      ],\r\n    },\r\n    define: {\r\n      'process.env.VITE_API_URL': JSON.stringify(process.env.VITE_API_URL),\r\n      'process.env.VITE_VIN_API_URL': JSON.stringify(process.env.VITE_VIN_API_URL),\r\n      'process.env.VITE_VIN_API_TOKEN': JSON.stringify(process.env.VITE_VIN_API_TOKEN),\r\n      'process.env.VITE_VIN_API_HOST': JSON.stringify(process.env.VITE_VIN_API_HOST),\r\n    },\r\n  })\r\n}}https://vitejs.dev/config/\r\n `\r\n\r\n\r\n\r\n\r\n![Image](https://github.com/user-attachments/assets/5b2b518d-c461-4fdf-84dc-d52e65beb4b4)\r\n![Image2](https://github.com/user-attachments/assets/f40749b5-febc-4a3d-bd9f-4d219ba6905e)\r\n\r\n\r\n\r\n\r\n\r\n## The expected behavior : The app should render and function correctly across all devices, including iOS. No white screen should be displayed, and any errors or issues should be visible in the console if present.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30648/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30648/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30637",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30637/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30637/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30637/events",
        "html_url": "https://github.com/facebook/react/issues/30637",
        "id": 2455962059,
        "node_id": "I_kwDOAJy2Ks6SYwHL",
        "number": 30637,
        "title": "[React 19] useOptimistic shows wrong value when other actions happen in the background",
        "user": {
          "login": "denis-sokolov",
          "id": 113721,
          "node_id": "MDQ6VXNlcjExMzcyMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/113721?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/denis-sokolov",
          "html_url": "https://github.com/denis-sokolov",
          "followers_url": "https://api.github.com/users/denis-sokolov/followers",
          "following_url": "https://api.github.com/users/denis-sokolov/following{/other_user}",
          "gists_url": "https://api.github.com/users/denis-sokolov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/denis-sokolov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/denis-sokolov/subscriptions",
          "organizations_url": "https://api.github.com/users/denis-sokolov/orgs",
          "repos_url": "https://api.github.com/users/denis-sokolov/repos",
          "events_url": "https://api.github.com/users/denis-sokolov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/denis-sokolov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-08T14:30:12Z",
        "updated_at": "2024-08-08T14:40:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nAny unrelated background action blocks useOptimistic’s heuristic as to when to revert to the real value.\r\n\r\n### Reproduce\r\n1. Open [the demo](https://codesandbox.io/p/sandbox/use-optimistic-multiple-n6hr29?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clzlc8lee0006356jhc9vysql%2522%252C%2522sizes%2522%253A%255B100%252C0%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clzlc8lee0002356jjit74twl%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clzlc8lee0003356jq656yyz1%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clzlc8lee0005356j3uhkgzsg%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clzlc8lee0002356jjit74twl%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clzlc8led0001356jll6xqjiv%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252Fsrc%252Findex.js%2522%257D%255D%252C%2522id%2522%253A%2522clzlc8lee0002356jjit74twl%2522%252C%2522activeTabId%2522%253A%2522clzlc8led0001356jll6xqjiv%2522%257D%252C%2522clzlc8lee0005356j3uhkgzsg%2522%253A%257B%2522id%2522%253A%2522clzlc8lee0005356j3uhkgzsg%2522%252C%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clzlc8lee0004356jfwwrs2uq%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522UNASSIGNED_PORT%2522%252C%2522port%2522%253A0%252C%2522path%2522%253A%2522%252F%2522%257D%255D%252C%2522activeTabId%2522%253A%2522clzlc8lee0004356jfwwrs2uq%2522%257D%252C%2522clzlc8lee0003356jq656yyz1%2522%253A%257B%2522tabs%2522%253A%255B%255D%252C%2522id%2522%253A%2522clzlc8lee0003356jq656yyz1%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Afalse%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D)\r\n\r\n    <details><summary>Code backup</summary>\r\n    \r\n    ```js\r\n    import { useOptimistic, useState } from \"react\";\r\n    \r\n    const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n    \r\n    export default function App() {\r\n      const [a, setA] = useState(0);\r\n      const [optimisticA, setOptimisticA] = useOptimistic(a);\r\n      async function incA() {\r\n        const newVal = optimisticA + 1;\r\n        setOptimisticA(newVal);\r\n        await sleep(1000);\r\n        return Error(\"failed\");\r\n      }\r\n    \r\n      async function unrelatedSlow() {\r\n        await sleep(20000);\r\n      }\r\n    \r\n      return (\r\n        <div className=\"App\">\r\n          <div>\r\n            <form action={incA}>\r\n              {optimisticA} <button disabled={optimisticA !== a}>Inc</button>\r\n            </form>\r\n          </div>\r\n          <div>\r\n            <form action={unrelatedSlow}>\r\n              <button>Unrelated slow</button>{\" \"}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    ```\r\n\r\n2. Click on Inc.\r\n3. Observe how after 1 second and a simulated server failure the number goes back to 0.\r\n4. Click on Unrelated slow.\r\n5. Click on Inc.\r\n\r\nExpected: after 1 second number goes back to 0, same as before.\r\nActual: the number stays at 1 for 20 seconds, until the unrelated action completes.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30637/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30637/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30635",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30635/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30635/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30635/events",
        "html_url": "https://github.com/facebook/react/issues/30635",
        "id": 2455263713,
        "node_id": "I_kwDOAJy2Ks6SWFnh",
        "number": 30635,
        "title": "issue with `useCallback` and `useRef` Cleanup in `useEffect` on Production Build with Next.js",
        "user": {
          "login": "EhsanKey",
          "id": 95970613,
          "node_id": "U_kgDOBbhlNQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/95970613?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/EhsanKey",
          "html_url": "https://github.com/EhsanKey",
          "followers_url": "https://api.github.com/users/EhsanKey/followers",
          "following_url": "https://api.github.com/users/EhsanKey/following{/other_user}",
          "gists_url": "https://api.github.com/users/EhsanKey/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/EhsanKey/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/EhsanKey/subscriptions",
          "organizations_url": "https://api.github.com/users/EhsanKey/orgs",
          "repos_url": "https://api.github.com/users/EhsanKey/repos",
          "events_url": "https://api.github.com/users/EhsanKey/events{/privacy}",
          "received_events_url": "https://api.github.com/users/EhsanKey/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-08T09:02:44Z",
        "updated_at": "2024-08-09T07:34:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "We are encountering an issue where a `useCallback` function, managed with `useRef`, does not perform cleanup as expected during component unmount in both development and production builds of a Next.js application.\r\n\r\n#### Problematic Code\r\n\r\n```javascript\r\nimport React, { useCallback, useEffect, useRef } from 'react';\r\n\r\nconst MyComponent = () => {\r\n  const stopRecordingRef = useRef<() => void>(() => {});\r\n\r\n  const [recorder, setRecorder] = React.useState<MediaRecorder | null>(null);\r\n  const [stream, setStream] = React.useState<MediaStream | null>(null);\r\n  const videoRefs = useRef<{ webcam: HTMLVideoElement | null, recordedVideo: HTMLVideoElement | null }>({\r\n    webcam: null,\r\n    recordedVideo: null,\r\n  });\r\n\r\n  const stopRecording = useCallback(() => {\r\n    console.log('stopRecording called');\r\n    if (recorder) {\r\n      console.log('Stopping recorder');\r\n      recorder.stop();\r\n    }\r\n\r\n    if (stream) {\r\n      console.log('Stopping stream tracks');\r\n      stream.getTracks().forEach(track => track.stop());\r\n      setStream(null);\r\n    }\r\n\r\n    if (videoRefs.current?.webcam) {\r\n      console.log('Clearing webcam srcObject');\r\n      videoRefs.current.webcam.srcObject = null;\r\n    }\r\n\r\n    if (videoRefs.current?.recordedVideo) {\r\n      console.log('Clearing recorded video src');\r\n      videoRefs.current.recordedVideo.src = '';\r\n    }\r\n  }, [recorder, stream]);\r\n\r\n  useEffect(() => {\r\n    stopRecordingRef.current = stopRecording;\r\n  }, [stopRecording]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log('Cleaning up in useEffect');\r\n      if (stopRecordingRef.current) {\r\n        stopRecordingRef.current();\r\n      } else {\r\n        console.log('stopRecordingRef.current is not set');\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/*JSX */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n```\r\n\r\n#### Expected Behavior\r\n\r\nThe `stopRecording` function should be executed properly during component unmount via `useEffect`. This function should correctly perform all cleanup operations both in development and production builds.\r\n\r\n#### Actual Behavior\r\n\r\n- **In Development:** The `stopRecording` function executes correctly, and cleanup operations are performed as expected.\r\n- **In Production Build:** The `stopRecording` function does not execute properly during component unmount, resulting in lingering resources and incorrect references.\r\n\r\n#### Steps to Reproduce\r\n\r\n1. Implement the `stopRecording` function using `useCallback`.\r\n2. Use `useRef` to maintain a reference to the `stopRecording` function.\r\n3. Set the reference in `useEffect`.\r\n4. Verify the cleanup process in the production build.\r\n\r\n#### Environment\r\n\r\n- **Next.js Version:** 12.0.8\r\n- **React Version:** 17.0.2\r\n- **React DOM Version:** 17.0.2\r\n\r\n#### Suggestions and Requests\r\n\r\nPlease investigate this issue and suggest a resolution if available. If a specific solution is not possible, guidance on correctly implementing resource cleanup during component unmounting using `useCallback` and `useRef` in a Next.js environment would be highly appreciated.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30635/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30635/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30621",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30621/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30621/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30621/events",
        "html_url": "https://github.com/facebook/react/issues/30621",
        "id": 2452122323,
        "node_id": "I_kwDOAJy2Ks6SKGrT",
        "number": 30621,
        "title": "Bug: False positive maximum update depth exceeded error",
        "user": {
          "login": "steinybot",
          "id": 4659562,
          "node_id": "MDQ6VXNlcjQ2NTk1NjI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4659562?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/steinybot",
          "html_url": "https://github.com/steinybot",
          "followers_url": "https://api.github.com/users/steinybot/followers",
          "following_url": "https://api.github.com/users/steinybot/following{/other_user}",
          "gists_url": "https://api.github.com/users/steinybot/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/steinybot/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/steinybot/subscriptions",
          "organizations_url": "https://api.github.com/users/steinybot/orgs",
          "repos_url": "https://api.github.com/users/steinybot/repos",
          "events_url": "https://api.github.com/users/steinybot/events{/privacy}",
          "received_events_url": "https://api.github.com/users/steinybot/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-07T02:45:25Z",
        "updated_at": "2024-08-07T10:28:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. A functional component with a slow render method of around 3 milliseconds\r\n2. Three states: `a`, `b`, `c`\r\n3. One effect that runs when state `a` changes which changes `b`\r\n4. Another effect that runs when state `b` changes which changes `c`\r\n5. An input which changes state `a`\r\n6. Type at least 25 characters into the input with a delay of 1 millisecond between each character\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: https://codesandbox.io/p/sandbox/max-depth-exceeded-false-positive-nrjtft?file=%2Fsrc%2FApp.tsx%3A52%2C40\r\n\r\n```typescript\r\nimport { forwardRef, useEffect, useRef, useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\n// This needs to be at least 25 characters long.\r\nconst text = \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\";\r\n// This needs to be less than the renderTime.\r\nconst typingDelay = 1;\r\n// This needs to be at least 3 milliseconds.\r\nconst renderTime = 10;\r\n\r\nexport default function App() {\r\n  const ref = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    const input = ref.current;\r\n    let timeoutId: number | undefined = undefined;\r\n\r\n    if (input) {\r\n      const typeCharacter = (index: number) => {\r\n        if (index < text.length) {\r\n          const char = text[index];\r\n          console.log(\"Typing character\", char, index + 1);\r\n          input.dispatchEvent(\r\n            new InputEvent(\"input\", {\r\n              bubbles: true,\r\n              composed: true,\r\n              detail: 0,\r\n              view: window,\r\n              data: char,\r\n              inputType: \"\",\r\n            })\r\n          );\r\n          input.value += char;\r\n          timeoutId = setTimeout(() => typeCharacter(index + 1), typingDelay);\r\n        }\r\n      };\r\n\r\n      typeCharacter(0);\r\n    }\r\n\r\n    return () => clearTimeout(timeoutId);\r\n  }, [ref.current]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>React - Maximum Depth Exceeded False Positive</h1>\r\n      <h2>Check the console for errors</h2>\r\n      <SlowInput ref={ref} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SlowInput = forwardRef<HTMLInputElement>(function MyInput(props, ref) {\r\n  const [unused, setUnused] = useState({});\r\n  const [used, setUsed] = useState({});\r\n  const [name, setName] = useState(\"\");\r\n  useEffect(() => setUnused({}), [used]);\r\n  useEffect(() => setUsed({}), [name]);\r\n\r\n  spin(renderTime);\r\n\r\n  return <input onInput={(e) => setName(e.currentTarget.value)} ref={ref} />;\r\n});\r\n\r\nfunction spin(ms: number) {\r\n  const start = Date.now();\r\n  while (Date.now() - start < ms) {\r\n    // Spin!\r\n  }\r\n}\r\n```\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\nAfter typing the 25th character (or sometimes a few later) the following error appears in the console:\r\n```\r\n Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\r\n    at MyInput (https://nrjtft.csb.app/src/App.tsx:58:51)\r\n    at div\r\n    at App (https://nrjtft.csb.app/src/App.tsx:18:33)\r\n```\r\n\r\nIncreasing the `typingDelay` to `10` and decreasing the `renderTime` to `1` causes the error to go away.\r\n\r\n## The expected behavior\r\n\r\nThis error is a false positive and should not be shown.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30621/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30621/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30607",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30607/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30607/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30607/events",
        "html_url": "https://github.com/facebook/react/issues/30607",
        "id": 2450384970,
        "node_id": "I_kwDOAJy2Ks6SDehK",
        "number": 30607,
        "title": "[DevTools Bug] Cannot add node \"1\" because a node with that id is already in the Store.",
        "user": {
          "login": "arvindhcm",
          "id": 26719663,
          "node_id": "MDQ6VXNlcjI2NzE5NjYz",
          "avatar_url": "https://avatars.githubusercontent.com/u/26719663?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/arvindhcm",
          "html_url": "https://github.com/arvindhcm",
          "followers_url": "https://api.github.com/users/arvindhcm/followers",
          "following_url": "https://api.github.com/users/arvindhcm/following{/other_user}",
          "gists_url": "https://api.github.com/users/arvindhcm/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/arvindhcm/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/arvindhcm/subscriptions",
          "organizations_url": "https://api.github.com/users/arvindhcm/orgs",
          "repos_url": "https://api.github.com/users/arvindhcm/repos",
          "events_url": "https://api.github.com/users/arvindhcm/events{/privacy}",
          "received_events_url": "https://api.github.com/users/arvindhcm/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2024-08-06T09:20:37Z",
        "updated_at": "2024-09-15T05:05:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nlocal repo\n\n### Repro steps\n\njust loaded the local  react app\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.3.1-ccb20cb88b\n\n### Error message (automated)\n\nCannot add node \"1\" because a node with that id is already in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1172435\r\n    at v.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1141877)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1143565\r\n    at bridgeListener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1551564)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=Cannot add node  because a node with that id is already in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30607/reactions",
          "total_count": 6,
          "+1": 6,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30607/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30605",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30605/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30605/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30605/events",
        "html_url": "https://github.com/facebook/react/issues/30605",
        "id": 2450155890,
        "node_id": "I_kwDOAJy2Ks6SCmly",
        "number": 30605,
        "title": "Bug: SetState Calls not being batched inside Promise calls/micro Task",
        "user": {
          "login": "Biki-das",
          "id": 72331432,
          "node_id": "MDQ6VXNlcjcyMzMxNDMy",
          "avatar_url": "https://avatars.githubusercontent.com/u/72331432?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Biki-das",
          "html_url": "https://github.com/Biki-das",
          "followers_url": "https://api.github.com/users/Biki-das/followers",
          "following_url": "https://api.github.com/users/Biki-das/following{/other_user}",
          "gists_url": "https://api.github.com/users/Biki-das/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Biki-das/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Biki-das/subscriptions",
          "organizations_url": "https://api.github.com/users/Biki-das/orgs",
          "repos_url": "https://api.github.com/users/Biki-das/repos",
          "events_url": "https://api.github.com/users/Biki-das/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Biki-das/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-08-06T07:28:55Z",
        "updated_at": "2024-08-21T09:47:30Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "`setState` calls are generally batched in React. However, in a case where setState calls occur inside a native event handler that also includes a microTask (Promise), the batching behaviour changes. When a setState is executed first in the synchronous part of the handler, followed by a microTask operation which includes a state update, and then another setState is executed after the microTask, these setState calls are not batched together as one might expect. the stateUpdate inside the Promise call does not get batched.\r\n\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\nI am attaching a code Sandbox below to reproduce the same, where you can just run the code and see the Count Value rendered which does not resemble with the Way react should behave.\r\n\r\nLink to code example:\r\n\r\nhttps://stackblitz.com/edit/vitejs-vite-5lvqjx?file=src%2FCounter.tsx\r\n\r\n## The current behaviour\r\n\r\nif we look closely, currently the count is getting set to 2, which proves the point, that state updates inside the Promise call are not being batched.\r\n\r\nhttps://github.com/user-attachments/assets/4a686d8d-5815-4c6c-bc5a-b7b638c85bd8\r\n\r\n\r\n\r\n\r\n## The expected behaviour\r\nthe state update call inside the Promise should have been batched which would have made the count value to be 1 on the increment click.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30605/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30605/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30582",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30582/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30582/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30582/events",
        "html_url": "https://github.com/facebook/react/issues/30582",
        "id": 2445107933,
        "node_id": "I_kwDOAJy2Ks6RvWLd",
        "number": 30582,
        "title": "Bug: Conditionally rendering a lazy loaded component only after the parent node is attached causes infinite loop",
        "user": {
          "login": "danhorvath",
          "id": 23309966,
          "node_id": "MDQ6VXNlcjIzMzA5OTY2",
          "avatar_url": "https://avatars.githubusercontent.com/u/23309966?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/danhorvath",
          "html_url": "https://github.com/danhorvath",
          "followers_url": "https://api.github.com/users/danhorvath/followers",
          "following_url": "https://api.github.com/users/danhorvath/following{/other_user}",
          "gists_url": "https://api.github.com/users/danhorvath/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/danhorvath/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/danhorvath/subscriptions",
          "organizations_url": "https://api.github.com/users/danhorvath/orgs",
          "repos_url": "https://api.github.com/users/danhorvath/repos",
          "events_url": "https://api.github.com/users/danhorvath/events{/privacy}",
          "received_events_url": "https://api.github.com/users/danhorvath/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 1109407645,
            "node_id": "MDU6TGFiZWwxMTA5NDA3NjQ1",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Suspense",
            "name": "Component: Suspense",
            "color": "8ffcd6",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-08-02T14:39:55Z",
        "updated_at": "2024-08-26T21:44:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 18.3.1 and [19.0.0-rc-b57d2823-20240822](https://codesandbox.io/p/sandbox/conditionally-rendering-a-lazy-loaded-component-only-after-the-parent-node-is-attached-causes-infinite-loop-s9gzml)\r\n\r\n## Steps To Reproduce\r\n\r\n1. Create a component that renders the children inside a `<div>`, but only after it has obtained reference to that div (via putting the div node into a state)\r\n2. Pass a lazy loaded component as children\r\n\r\nSo basically something like:\r\n```jsx\r\nimport { Suspense, lazy, useState } from 'react';\r\n\r\nconst LazyLoadedComponent = lazy(\r\n  () =>\r\n    new Promise((resolve) => {\r\n      setTimeout(\r\n        () =>\r\n          resolve({\r\n            default: () => <div>Lazy loaded component</div>,\r\n          }),\r\n        500,\r\n      );\r\n    }),\r\n);\r\n\r\nconst RenderAfterMount = (props) => {\r\n  const [node, setNode] = useState(null);\r\n\r\n  return <div ref={setNode}>{node && props.children}</div>;\r\n};\r\n\r\nexport const App = () => (\r\n  <Suspense>\r\n    <RenderAfterMount>\r\n      <LazyLoadedComponent />\r\n    </RenderAfterMount>\r\n  </Suspense>\r\n);\r\n```\r\n\r\nLink to code example:\r\nhttps://codesandbox.io/s/vibrant-murdock-jpnznd?file=/src/App.js:542-561\r\n\r\n## The current behavior\r\nRuntime error due to an infinite loop.\r\n\r\n## The expected behavior\r\nThe lazy loaded component is rendered.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30582/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30582/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30580",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30580/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30580/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30580/events",
        "html_url": "https://github.com/facebook/react/issues/30580",
        "id": 2444597960,
        "node_id": "I_kwDOAJy2Ks6RtZrI",
        "number": 30580,
        "title": "[React 19] Controlled `<select>` component is subject to automatic form reset",
        "user": {
          "login": "cjg1122",
          "id": 104553323,
          "node_id": "U_kgDOBjtbaw",
          "avatar_url": "https://avatars.githubusercontent.com/u/104553323?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cjg1122",
          "html_url": "https://github.com/cjg1122",
          "followers_url": "https://api.github.com/users/cjg1122/followers",
          "following_url": "https://api.github.com/users/cjg1122/following{/other_user}",
          "gists_url": "https://api.github.com/users/cjg1122/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cjg1122/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cjg1122/subscriptions",
          "organizations_url": "https://api.github.com/users/cjg1122/orgs",
          "repos_url": "https://api.github.com/users/cjg1122/repos",
          "events_url": "https://api.github.com/users/cjg1122/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cjg1122/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2024-08-02T10:01:56Z",
        "updated_at": "2024-08-04T09:47:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The controlled component also resets the \"select\" after the action is triggered.\r\nbut the \"input\" component does not.\r\n\r\n```jsx\r\n\"use client\";\r\nimport { useActionState, useState } from \"react\";\r\nfunction add() {\r\n  return Date.now();\r\n}\r\nexport default function Page() {\r\n  const [state, formAction] = useActionState(add, 0);\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"2\");\r\n  return (\r\n    <form action={formAction}>\r\n      <p>{state}</p>\r\n      <p>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </p>\r\n      <p>\r\n        <select\r\n          name=\"gender\"\r\n          value={type}\r\n          onChange={(e) => setType(e.target.value)}\r\n        >\r\n          <option value=\"1\">1</option>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n        </select>\r\n      </p>\r\n      <button>submit</button>\r\n    </form>\r\n  );\r\n}\r\n```\r\n\r\n![20240802-193357](https://github.com/user-attachments/assets/c61f2b1c-a00c-4982-aba3-5061770f719a)\r\n\r\nRepro: https://codesandbox.io/p/sandbox/stupefied-cohen-n578l6",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30580/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30580/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30577",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30577/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30577/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30577/events",
        "html_url": "https://github.com/facebook/react/issues/30577",
        "id": 2444371914,
        "node_id": "I_kwDOAJy2Ks6RsifK",
        "number": 30577,
        "title": "[DevTools Bug] Cannot remove node \"366\" because no matching node was found in the Store.",
        "user": {
          "login": "vanshnayak2002",
          "id": 77628335,
          "node_id": "MDQ6VXNlcjc3NjI4MzM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/77628335?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vanshnayak2002",
          "html_url": "https://github.com/vanshnayak2002",
          "followers_url": "https://api.github.com/users/vanshnayak2002/followers",
          "following_url": "https://api.github.com/users/vanshnayak2002/following{/other_user}",
          "gists_url": "https://api.github.com/users/vanshnayak2002/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/vanshnayak2002/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/vanshnayak2002/subscriptions",
          "organizations_url": "https://api.github.com/users/vanshnayak2002/orgs",
          "repos_url": "https://api.github.com/users/vanshnayak2002/repos",
          "events_url": "https://api.github.com/users/vanshnayak2002/events{/privacy}",
          "received_events_url": "https://api.github.com/users/vanshnayak2002/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-08-02T08:17:10Z",
        "updated_at": "2024-08-08T21:29:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nhttp://localhost:3000/welcome\n\n### Repro steps\n\n### I created token for user authentication and pass into context so that user can reuse that token to call an API \r\nwhen i logout or login on my localhost i see this error \r\n\r\n**STEP 1 Create a token** \r\nexport const executeBasicAuthenticationService\r\n    = (token) => apiClient.get(`/basicauth`,{\r\n        headers: {\r\n            Authorization: token\r\n        }\r\n    })\r\n\r\n**STEP-2 Pass into context**\r\n\r\nasync function login(username, password) {\r\n\r\n\r\n\r\n  const baToken = 'Basic ' + window.btoa( username + \":\" + password )\r\n  \r\n  try{\r\n\r\n  \r\n  const response = await executeBasicAuthenticationService(baToken)\r\n  \r\n  if(response.status==200){\r\n        setAuthenticated(true)\r\n        setUsername(username)\r\n        settoken(baToken)\r\n         return true\r\n       \r\n    } else {\r\n       logout()\r\n        return false\r\n      \r\n     }\r\n}  catch(error){\r\n  logout()\r\n  return false\r\n}\r\n\r\n }\r\n\r\nfunction logout(){\r\nsetAuthenticated(false)\r\nsettoken(null)\r\nsetUsername(null)\r\n}\r\n\r\n    return (\r\n  <AuthContext.Provider value={ {isAuthenticated,setAuthenticated,login,logout,username,token} }>\r\n\r\n    {children}\r\n  </AuthContext.Provider>\r\n\r\n\r\n    )\r\n}\r\n\r\n    \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.3.1-ccb20cb88b\n\n### Error message (automated)\n\nCannot remove node \"366\" because no matching node was found in the Store.\n\n### Error call stack (automated)\n\n```text\nat chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1174132\r\n    at v.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1141877)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1143565\r\n    at bridgeListener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1551564)\n```\n\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=Cannot remove node  because no matching node was found in the Store. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30577/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30577/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30570",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30570/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30570/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30570/events",
        "html_url": "https://github.com/facebook/react/issues/30570",
        "id": 2442863102,
        "node_id": "I_kwDOAJy2Ks6RmyH-",
        "number": 30570,
        "title": "[React 19] Signal & Observable",
        "user": {
          "login": "FrameMuse",
          "id": 53980482,
          "node_id": "MDQ6VXNlcjUzOTgwNDgy",
          "avatar_url": "https://avatars.githubusercontent.com/u/53980482?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/FrameMuse",
          "html_url": "https://github.com/FrameMuse",
          "followers_url": "https://api.github.com/users/FrameMuse/followers",
          "following_url": "https://api.github.com/users/FrameMuse/following{/other_user}",
          "gists_url": "https://api.github.com/users/FrameMuse/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/FrameMuse/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/FrameMuse/subscriptions",
          "organizations_url": "https://api.github.com/users/FrameMuse/orgs",
          "repos_url": "https://api.github.com/users/FrameMuse/repos",
          "events_url": "https://api.github.com/users/FrameMuse/events{/privacy}",
          "received_events_url": "https://api.github.com/users/FrameMuse/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-08-01T16:18:26Z",
        "updated_at": "2024-08-08T08:11:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nThere is huge discussion about Signals and Observables, Solid.js is built upon Signals, highly popular library like `react-use` has `useObservable` util hook.\r\n\r\n\"Recently\", a [Signals proposal](https://github.com/tc39/proposal-signals) appeared and quickly drew attention.\r\n\r\n## Proposal\r\n\r\nI thought it would be really handy if React would have a way to support this kind of structure - observe the state. I know there is `useSyncExternalStore`, but the signature is a little bit different and it can't be used in conditionals.\r\n\r\nSo if something like that would work... I would expect the following to work\r\n\r\n```tsx\r\nimport { use } from \"react\"\r\nimport { searchSignal } from \"@/signals\"\r\n\r\nfunction Images() {\r\n\tconst search = use(searchSignal)\r\n\r\n\treturn (...)\r\n}\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<SearchBar />\r\n\t\t<Images />\r\n\t)\r\n}\r\n\r\nfunction SearchBar() {\r\n\treturn <input onChange={event => searchSignal.set(event.currentTarget.value)} />\r\n}\r\n```\r\n\r\n## Explanation\r\n\r\nThe Signal itself is an abstraction, which only implements `get` method and `subscribe` from [this proposal](https://github.com/tc39/proposal-observable).\r\n\r\nThe `use` hook would have the following signature\r\n\r\n```ts\r\ninterface Getter<T> {\r\n\tget?(): T\r\n}\r\n\r\ninterface Observable<T> {\r\n\tsubscribe?(): { unsubscribe(): void }\r\n}\r\n\r\nfunction use<T>(... | Getter<T> | Observable<T> | (Getter<T> & Observable<T>)): T\r\n```\r\n\r\nThe `Getter` and `Observable` could work in tandem to allow getting initial value while listening for further updates.\r\n\r\n---\r\n\r\nNot sure about `use`, it might be better to implement completely standalone hook like `useSignal` or `useObservable`.\r\nNot sure if this was already discussed and proposed, I couldn't find any related topics.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30570/reactions",
          "total_count": 13,
          "+1": 8,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30570/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30558",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30558/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30558/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30558/events",
        "html_url": "https://github.com/facebook/react/issues/30558",
        "id": 2441271043,
        "node_id": "I_kwDOAJy2Ks6RgtcD",
        "number": 30558,
        "title": "Bug: Setting the state to the same value causes a re-render.",
        "user": {
          "login": "JoonDong2",
          "id": 34468861,
          "node_id": "MDQ6VXNlcjM0NDY4ODYx",
          "avatar_url": "https://avatars.githubusercontent.com/u/34468861?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JoonDong2",
          "html_url": "https://github.com/JoonDong2",
          "followers_url": "https://api.github.com/users/JoonDong2/followers",
          "following_url": "https://api.github.com/users/JoonDong2/following{/other_user}",
          "gists_url": "https://api.github.com/users/JoonDong2/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JoonDong2/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JoonDong2/subscriptions",
          "organizations_url": "https://api.github.com/users/JoonDong2/orgs",
          "repos_url": "https://api.github.com/users/JoonDong2/repos",
          "events_url": "https://api.github.com/users/JoonDong2/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JoonDong2/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-08-01T02:03:38Z",
        "updated_at": "2024-09-10T08:11:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "React version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Set the initial state to false.\r\n2. Change the state to true.\r\n3. Set the state to true once more.\r\n\r\nLink to code example: [codesandbox](https://codesandbox.io/p/sandbox/rerendering-6njfxk)\r\n\r\n```\r\nimport React, { useState } from \"react\";\r\n\r\nconst Child = () => {\r\n  console.log(\"Child\");\r\n  return null;\r\n};\r\n\r\nexport default function App() {\r\n  const [state, setState] = useState(false);\r\n  console.log(\"App\");\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          setState(true);\r\n        }}\r\n      >\r\n        click\r\n      </button>\r\n      <Child />\r\n    </>\r\n  );\r\n}\r\n```\r\n\r\n## The current behavior\r\n1. Print 'App' and 'Child' on the first rendering.\r\n2. Clicking the <button /> prints 'App' and 'Child'.\r\n3. Clicking the <button /> once more prints 'App'.\r\n\r\n## The expected behavior\r\n1. Print 'App' and 'Child' on the first rendering.\r\n2. Clicking the <button /> prints 'App' and 'Child'.\r\n3. Clicking the <button /> one more time results in no reaction.\r\n\r\nI think this issue occurred because the previous current(now alternate)'s `lanes` was not cleared after reconciliation.\r\n\r\nI confirmed that when the button was clicked a second time, the `lanes` was not `NoLanes`, so it did not compare with the previous state and immediately scheduled the rendering.\r\nhttps://github.com/facebook/react/blob/v18.3.1/packages/react-reconciler/src/ReactFiberHooks.new.js#L2257-L2287\r\n\r\nSince there were no updates during the rendering of the App component, it bailed out of rendering, so the children were not re-rendered.\r\nhttps://github.com/facebook/react/blob/v18.3.1/packages/react-reconciler/src/ReactFiberBeginWork.new.js#L1047-L1050\r\n\r\nHowever, if the `lanes` of the previous fiber had been cleared, such rendering would not have occurred.\r\n\r\nI thought \"If the state doesn't change, no re-rendering occurs\", but I'm confused by the above result.\r\n\r\nIs this a bug, or is there another reason for this behavior?",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30558/reactions",
          "total_count": 2,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30558/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30553",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30553/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30553/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30553/events",
        "html_url": "https://github.com/facebook/react/issues/30553",
        "id": 2441115929,
        "node_id": "I_kwDOAJy2Ks6RgHkZ",
        "number": 30553,
        "title": "[React 19] renderToReadableStream + bun.sh",
        "user": {
          "login": "MolikoDeveloper",
          "id": 58595683,
          "node_id": "MDQ6VXNlcjU4NTk1Njgz",
          "avatar_url": "https://avatars.githubusercontent.com/u/58595683?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/MolikoDeveloper",
          "html_url": "https://github.com/MolikoDeveloper",
          "followers_url": "https://api.github.com/users/MolikoDeveloper/followers",
          "following_url": "https://api.github.com/users/MolikoDeveloper/following{/other_user}",
          "gists_url": "https://api.github.com/users/MolikoDeveloper/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/MolikoDeveloper/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/MolikoDeveloper/subscriptions",
          "organizations_url": "https://api.github.com/users/MolikoDeveloper/orgs",
          "repos_url": "https://api.github.com/users/MolikoDeveloper/repos",
          "events_url": "https://api.github.com/users/MolikoDeveloper/events{/privacy}",
          "received_events_url": "https://api.github.com/users/MolikoDeveloper/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-31T23:15:42Z",
        "updated_at": "2024-07-31T23:15:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\n> Linux 5.15.0-116-generic x86_64 x86_64\r\n\r\n\r\n### to reproduce it.\r\n\r\n> install bun.sh\r\n\r\npackage.json\r\n```json\r\n{\r\n  \"name\": \"test\",\r\n  \"module\": \"index.tsx\",\r\n  \"type\": \"module\",\r\n  \"devDependencies\": {\r\n    \"@types/bun\": \"latest\",\r\n    \"@types/react-dom\": \"^18.3.0\",\r\n    \"@types/react\": \"18.3.3\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"typescript\": \"^5.5.4\"\r\n  },\r\n  \"dependencies\": {\r\n    \"react-router-dom\": \"^6.25.1\",\r\n    \"react-dom\": \"next\",\r\n    \"react\": \"next\"\r\n  }\r\n}\r\n```\r\n\r\ninstall all\r\n```bash\r\nbun i\r\n```\r\n\r\n*index.tsx*:\r\n```tsx\r\nimport { renderToReadableStream } from \"react-dom/server\";\r\n\r\nBun.serve({\r\n    port: 3090,\r\n    fetch: async (request, server) => {\r\n\r\n        const stream = await renderToReadableStream(\r\n            <h1>Render Test</h1>\r\n        );\r\n\r\n        return new Response(stream, { status: 200 });\r\n    }\r\n})\r\n```\r\n\r\n*.env file*:\r\n```env\r\nNODE_ENV=production\r\n```\r\n\r\n```bash\r\nbun index.tsx\r\n```\r\n\r\n## temporal fix.\r\n\r\nI was able to identify that in `react-dom\\cjs\\react-dom-server.bun.production.js` there is a type called REACT_ELEMENT_TYPE, which does not match the current node.$$type.\r\n\r\nTheir values are different:\r\n\r\n> REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\")\r\n\r\n> node.$$type = Symbol(\"react.element\")\r\n\r\ntemporal fix adding and modify:\r\n```js\r\nvar React = require(\"react\"),\r\nReactDom = require(\"react-dom),\r\n  REACT_ELEMENT_TYPE = Symbol.for(\"react.element\"),\r\n  REACT_TRANSITIONAL_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\r\n  ...\r\n  ```\r\n  \r\n  and:\r\n  \r\n\r\n```js\r\nfunction retryNode(request, task){\r\n...\r\n  if(null !== node){\r\n    if (\"object\" === typeof node) {\r\n      switch(node,$typeof){\r\n        case REACT_ELEMENT_TYPE:\r\n        case REACT_TRANSITIONAL_ELEMENT_TYPE: // same as REACT_ELEMENT_TYPE\r\n\r\n        default:\r\n          //throw errors here also, for easy read in the console.\r\n      }\r\n    }\r\n  }\r\n...\r\n}\r\n```",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30553/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30553/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30551",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30551/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30551/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30551/events",
        "html_url": "https://github.com/facebook/react/issues/30551",
        "id": 2440984029,
        "node_id": "I_kwDOAJy2Ks6RfnXd",
        "number": 30551,
        "title": "[React 19] revive `react-test-renderer`",
        "user": {
          "login": "AndyOGo",
          "id": 914443,
          "node_id": "MDQ6VXNlcjkxNDQ0Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/914443?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AndyOGo",
          "html_url": "https://github.com/AndyOGo",
          "followers_url": "https://api.github.com/users/AndyOGo/followers",
          "following_url": "https://api.github.com/users/AndyOGo/following{/other_user}",
          "gists_url": "https://api.github.com/users/AndyOGo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AndyOGo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AndyOGo/subscriptions",
          "organizations_url": "https://api.github.com/users/AndyOGo/orgs",
          "repos_url": "https://api.github.com/users/AndyOGo/repos",
          "events_url": "https://api.github.com/users/AndyOGo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AndyOGo/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-07-31T21:29:37Z",
        "updated_at": "2024-08-29T06:53:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nIdeally `react` is shipped with official test utilities instead of relying o third-party vendors.\r\n\r\nUnfortunately it was decided to deprecate`react-test-renderer`.\r\n\r\nAs a consequence it isn't easy anymore to:\r\n- write unit tests\r\n- test React components independently of the target platform ([React DOM](https://legacy.reactjs.org/docs/react-dom.html), [React Native](https://reactnative.dev/), or any other [**custom renderer**](https://github.com/chentsulin/awesome-react-renderer) which is out there)\r\n- test complex, deeply nested component trees\r\n- shallow render\r\n- make shallow snapshots\r\n- to run tests FAST (in memory)\r\n\r\n## Regressions\r\n\r\n`@testing-library/react` is an integration testing library, promotes testing anti-patterns and completely ditches unit tests.\r\nIt is **slow** and requires a DOM or a mock like `js-dom`.\r\n\r\nPlease refer to these resources for a comprehensive understanding of why unit tests are of high value:\r\n- https://martinfowler.com/articles/practical-test-pyramid.html#UnitTests\r\n\r\n### Other critical voices from the community\r\n\r\n- https://javascript.plainenglish.io/in-defense-of-shallow-rendering-5f627f7c155d\r\n- https://blog.hao.dev/my-struggles-with-react-testing-library\r\n\r\n## References\r\n\r\n> `react-test-renderer` is deprecated. A warning will fire whenever calling `ReactTestRenderer.create()` or `ReactShallowRender.render()`. The `react-test-renderer` package will remain available on NPM but will not be maintained and may break with new React features or changes to React’s internals.\r\nhttps://react.dev/warnings/react-test-renderer\r\n\r\n> `react-test-renderer` is deprecated and no longer maintained. It will be removed in a future version. As of React 19, you will see a console warning when invoking `ReactTestRenderer.create()`.\r\nhttps://www.npmjs.com/package/react-test-renderer/v/19.0.0-canary-8afa144bd-20240416?activeTab=readme#react-test-renderer-deprecated\r\n\r\n**Note:** that affects any code using `react-test-renderer` \r\nhttps://github.com/search?q=repo%3Ajestjs%2Fjest%20react-test-renderer&type=code\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30551/reactions",
          "total_count": 7,
          "+1": 6,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30551/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30543",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30543/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30543/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30543/events",
        "html_url": "https://github.com/facebook/react/issues/30543",
        "id": 2439388003,
        "node_id": "I_kwDOAJy2Ks6RZhtj",
        "number": 30543,
        "title": "Bug: How do I synchronize my render function?",
        "user": {
          "login": "parlay96",
          "id": 32978177,
          "node_id": "MDQ6VXNlcjMyOTc4MTc3",
          "avatar_url": "https://avatars.githubusercontent.com/u/32978177?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/parlay96",
          "html_url": "https://github.com/parlay96",
          "followers_url": "https://api.github.com/users/parlay96/followers",
          "following_url": "https://api.github.com/users/parlay96/following{/other_user}",
          "gists_url": "https://api.github.com/users/parlay96/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/parlay96/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/parlay96/subscriptions",
          "organizations_url": "https://api.github.com/users/parlay96/orgs",
          "repos_url": "https://api.github.com/users/parlay96/repos",
          "events_url": "https://api.github.com/users/parlay96/events{/privacy}",
          "received_events_url": "https://api.github.com/users/parlay96/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-31T07:55:48Z",
        "updated_at": "2024-08-02T06:20:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n18.3.1\r\n## Steps To Reproduce\r\n\r\n       // 创建dom, msg的包裹器\r\n        // 创建包裹容器\r\n        const __container = document.createElement(\"div\");\r\n        const root = createRoot(__container);\r\n        // 创建节点\r\n        const wrapper = createElement(ContainerWrapper);\r\n        // 渲染节点\r\n        root.render(wrapper);\r\n      \r\n        document.body.appendChild(__container);\r\n        // I cannot synchronize\r\n        // I don't want to render the __container node on the page. How should I handle it? How can I synchronize my render function?\r\n        setTimeout(() => {\r\n          document.body.appendChild(__container?.firstElementChild);\r\n          // 获取参数配置\r\n          const normalized = handleOptions({ ...params, appendTo: `#${wrapId}` });\r\n          return message({ ...normalized, type });\r\n        });\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\nnot have\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n\r\n\r\n## The expected behavior\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30543/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30543/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30527",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30527/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30527/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30527/events",
        "html_url": "https://github.com/facebook/react/issues/30527",
        "id": 2437869183,
        "node_id": "I_kwDOAJy2Ks6RTu5_",
        "number": 30527,
        "title": "> Ok, but, what if I need to change the title for every page? I'm still stuck. I'm using [react-meta-tags](https://www.npmjs.com/package/react-meta-tags) and it doesn't work when I paste my link on social networks.",
        "user": {
          "login": "yash-vaddi",
          "id": 131864130,
          "node_id": "U_kgDOB9wWQg",
          "avatar_url": "https://avatars.githubusercontent.com/u/131864130?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/yash-vaddi",
          "html_url": "https://github.com/yash-vaddi",
          "followers_url": "https://api.github.com/users/yash-vaddi/followers",
          "following_url": "https://api.github.com/users/yash-vaddi/following{/other_user}",
          "gists_url": "https://api.github.com/users/yash-vaddi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/yash-vaddi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/yash-vaddi/subscriptions",
          "organizations_url": "https://api.github.com/users/yash-vaddi/orgs",
          "repos_url": "https://api.github.com/users/yash-vaddi/repos",
          "events_url": "https://api.github.com/users/yash-vaddi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/yash-vaddi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-30T13:38:54Z",
        "updated_at": "2024-07-30T13:38:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "              > Ok, but, what if I need to change the title for every page? I'm still stuck. I'm using [react-meta-tags](https://www.npmjs.com/package/react-meta-tags) and it doesn't work when I paste my link on social networks.\r\n\r\nHi @looweb. Did you ever solve this issue?\r\n\r\n_Originally posted by @rbk in https://github.com/facebook/react/issues/17800#issuecomment-1100207922_\r\n            ",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30527/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30527/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30493",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30493/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30493/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30493/events",
        "html_url": "https://github.com/facebook/react/issues/30493",
        "id": 2433793968,
        "node_id": "I_kwDOAJy2Ks6REL-w",
        "number": 30493,
        "title": "[Compiler Bug]: eslint-plugin-react-compiler reports \"Hooks may not be referenced as normal values\" if property begins \"use\"",
        "user": {
          "login": "lukpsaxo",
          "id": 137174537,
          "node_id": "U_kgDOCC0eCQ",
          "avatar_url": "https://avatars.githubusercontent.com/u/137174537?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/lukpsaxo",
          "html_url": "https://github.com/lukpsaxo",
          "followers_url": "https://api.github.com/users/lukpsaxo/followers",
          "following_url": "https://api.github.com/users/lukpsaxo/following{/other_user}",
          "gists_url": "https://api.github.com/users/lukpsaxo/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/lukpsaxo/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/lukpsaxo/subscriptions",
          "organizations_url": "https://api.github.com/users/lukpsaxo/orgs",
          "repos_url": "https://api.github.com/users/lukpsaxo/repos",
          "events_url": "https://api.github.com/users/lukpsaxo/events{/privacy}",
          "received_events_url": "https://api.github.com/users/lukpsaxo/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-28T07:31:17Z",
        "updated_at": "2024-07-28T07:47:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEcEAdgGZoDmBZMEGBA5GPAPTHlWMDcAOifwQAPHPgIATBGQCGUADaEyUEnDxpSBALIBPAIJYsACix0sYAJQFg-AkVJhCYABbQ54gKpgEADQIBeO05KADppYKgvbz4SWxgEPFgY51cPSIIAfiYhRgJkJm0efgBffhAioA\n\n### Repro steps\n\nWe have a config object with a property starting \"use\" - its a boolean.\r\n\r\nIt seems very restrictive that we cannot have any properties beginning \"use\".\r\n\r\nI guess we could destructure outside the react component or make a abstracted function to get the boolean - is that the recommended solution? Or should react compiler be less restrictive in detecting hooks? It seems unlikely to be a hook if its a property name thats not on a import?\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n0.0.0-experimental-9ed098e-20240725",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30493/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30493/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30478",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30478/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30478/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30478/events",
        "html_url": "https://github.com/facebook/react/issues/30478",
        "id": 2432487896,
        "node_id": "I_kwDOAJy2Ks6Q_NHY",
        "number": 30478,
        "title": "TestUtils.Simulate alternatives",
        "user": {
          "login": "georgylobko",
          "id": 47106899,
          "node_id": "MDQ6VXNlcjQ3MTA2ODk5",
          "avatar_url": "https://avatars.githubusercontent.com/u/47106899?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/georgylobko",
          "html_url": "https://github.com/georgylobko",
          "followers_url": "https://api.github.com/users/georgylobko/followers",
          "following_url": "https://api.github.com/users/georgylobko/following{/other_user}",
          "gists_url": "https://api.github.com/users/georgylobko/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/georgylobko/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/georgylobko/subscriptions",
          "organizations_url": "https://api.github.com/users/georgylobko/orgs",
          "repos_url": "https://api.github.com/users/georgylobko/repos",
          "events_url": "https://api.github.com/users/georgylobko/events{/privacy}",
          "received_events_url": "https://api.github.com/users/georgylobko/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-26T15:35:55Z",
        "updated_at": "2024-07-26T15:35:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi team. \r\n\r\nWe're using `Simulate` from 'react-dom/test-utils' in our package, which is a dependency for other packages. However, `Simulate` is deprecated, and it's recommended to use @testing-library/react's fireEvent (https://react.dev/warnings/react-dom-test-utils). The problem is that we need to support React starting from version ^16.8, but @testing-library/react requires React ^18.0.0 as a peer dependency. Given this constraint, do you have any recommendations for what we should use as an alternative to Simulate?",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30478/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30478/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30459",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30459/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30459/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30459/events",
        "html_url": "https://github.com/facebook/react/issues/30459",
        "id": 2430004681,
        "node_id": "I_kwDOAJy2Ks6Q1u3J",
        "number": 30459,
        "title": "Bug: When input type=number, input 1-1 cannot trigger an onchange and cannot be set to an empty string",
        "user": {
          "login": "jzz2649",
          "id": 20366311,
          "node_id": "MDQ6VXNlcjIwMzY2MzEx",
          "avatar_url": "https://avatars.githubusercontent.com/u/20366311?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jzz2649",
          "html_url": "https://github.com/jzz2649",
          "followers_url": "https://api.github.com/users/jzz2649/followers",
          "following_url": "https://api.github.com/users/jzz2649/following{/other_user}",
          "gists_url": "https://api.github.com/users/jzz2649/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jzz2649/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jzz2649/subscriptions",
          "organizations_url": "https://api.github.com/users/jzz2649/orgs",
          "repos_url": "https://api.github.com/users/jzz2649/repos",
          "events_url": "https://api.github.com/users/jzz2649/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jzz2649/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-07-25T13:39:42Z",
        "updated_at": "2024-08-01T11:09:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: all\r\n\r\n## Steps To Reproduce\r\n\r\n1. Input 1-1\r\n2. Set the value to an empty string\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n```\r\nconst Test = () => {\r\n    const [value, setValue] = useState('')\r\n\r\n    return <input type=\"number\" value={value} onChange={e => {\r\n        console.log(e.target.value)\r\n        if (e.target.value === '') {\r\n                // Triggered when inputting 1-\r\n                setValue('')\r\n        } else {\r\n                setValue(e.target.value)\r\n        }\r\n    }} />\r\n}\r\n```\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\n1. Input 1-1 will not trigger an onchange\r\n2. setValue ('') will not reset 1-\r\n3. This seems to be a browser bug\r\n\r\n## The expected behavior\r\n1. Input 1-1 to trigger onchange\r\n2. setValue ('') reset 1-\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30459/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30459/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30454",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30454/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30454/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30454/events",
        "html_url": "https://github.com/facebook/react/issues/30454",
        "id": 2428997386,
        "node_id": "I_kwDOAJy2Ks6Qx48K",
        "number": 30454,
        "title": "Bug: useState,  state does not update inside websocket.onmessage rather the state value is preserved untill the next render ",
        "user": {
          "login": "nitesh-github143",
          "id": 111378038,
          "node_id": "U_kgDOBqN-dg",
          "avatar_url": "https://avatars.githubusercontent.com/u/111378038?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nitesh-github143",
          "html_url": "https://github.com/nitesh-github143",
          "followers_url": "https://api.github.com/users/nitesh-github143/followers",
          "following_url": "https://api.github.com/users/nitesh-github143/following{/other_user}",
          "gists_url": "https://api.github.com/users/nitesh-github143/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nitesh-github143/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nitesh-github143/subscriptions",
          "organizations_url": "https://api.github.com/users/nitesh-github143/orgs",
          "repos_url": "https://api.github.com/users/nitesh-github143/repos",
          "events_url": "https://api.github.com/users/nitesh-github143/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nitesh-github143/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-07-25T04:51:30Z",
        "updated_at": "2024-07-29T07:00:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n\r\n-->\r\n\r\nReact version:\r\n\r\n## Steps To Reproduce\r\n\r\n1.\r\n2.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n    useEffect(() => {\r\n    let preservedId;\r\n    ws.onmessage = (event) => {\r\n      const receivedMessage = JSON.parse(event.data);\r\n      console.log(\"receivedMessage\", receivedMessage);\r\n// getUser func returns id because the state is preservec so I have put the whole function with a dependency and when I receive the message id becomes null again\r\n      preservedId = getUser();\r\n      if (\r\n        !receivedMessage.status &&\r\n        receivedMessage.sender_id === preservedId\r\n      ) {\r\n        setActiveChat((prevMessages) => {\r\n          const filteredMessages = prevMessages.filter(\r\n            (msg) =>\r\n              msg?.message_identifier !== receivedMessage.message_identifier,\r\n          );\r\n          return [...filteredMessages, receivedMessage];\r\n        });\r\n      }\r\n    };\r\n  }, [newUserId]);\r\n-->\r\n\r\n## The current behavior\r\nstate is not updated inside ws.onmessage , state is preserved inside we.onmessage and the state is working perfectly fine outside ws.onmessage\r\n\r\n\r\n## The expected behavior\r\nstate should get updated\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30454/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30454/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30444",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30444/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30444/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30444/events",
        "html_url": "https://github.com/facebook/react/issues/30444",
        "id": 2427978182,
        "node_id": "I_kwDOAJy2Ks6QuAHG",
        "number": 30444,
        "title": "Bug: deleting structure via DOM API breaks state updates",
        "user": {
          "login": "hesxenon",
          "id": 10255566,
          "node_id": "MDQ6VXNlcjEwMjU1NTY2",
          "avatar_url": "https://avatars.githubusercontent.com/u/10255566?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/hesxenon",
          "html_url": "https://github.com/hesxenon",
          "followers_url": "https://api.github.com/users/hesxenon/followers",
          "following_url": "https://api.github.com/users/hesxenon/following{/other_user}",
          "gists_url": "https://api.github.com/users/hesxenon/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/hesxenon/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/hesxenon/subscriptions",
          "organizations_url": "https://api.github.com/users/hesxenon/orgs",
          "repos_url": "https://api.github.com/users/hesxenon/repos",
          "events_url": "https://api.github.com/users/hesxenon/events{/privacy}",
          "received_events_url": "https://api.github.com/users/hesxenon/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 127893911,
            "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
            "name": "Component: DOM",
            "color": "fef2c0",
            "default": false,
            "description": null
          },
          {
            "id": 710375792,
            "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
            "name": "Type: Discussion",
            "color": "fef2c0",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2024-07-24T16:08:51Z",
        "updated_at": "2024-08-20T07:22:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.2.0\r\n\r\n## Steps To Reproduce\r\n\r\n1. have a node with a nested structure that embeds state\r\n2. change that nodes innerHTML, e.g. by setting it empty\r\n3. update the state\r\n4. updated state does not restore DOM Nodes\r\n\r\nLink to code example:\r\n\r\nhttps://codesandbox.io/p/sandbox/react-webcomponents-69d8v8\r\n\r\n## The current behavior\r\nDOM stays empty, i.e. rerenders have no effect\r\n\r\n## The expected behavior\r\nDOM should be re-populated, i.e. react should take control again.\r\n\r\n## Context\r\nI can kind of understand why react \"breaks\" but the issue here is that by e.g. using webcomponents that integrate with forms and implement a \"reset\" behaviour the applied solution will most likely involve some kind of innerHTML setting. I wish react wouldn't just \"give up\" in such cases. Is there a workaround possible here?\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30444/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30444/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30440",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30440/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30440/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30440/events",
        "html_url": "https://github.com/facebook/react/issues/30440",
        "id": 2427466129,
        "node_id": "I_kwDOAJy2Ks6QsDGR",
        "number": 30440,
        "title": "Remove references to legacy class-based component architecture in error messages",
        "user": {
          "login": "ADTC",
          "id": 6047296,
          "node_id": "MDQ6VXNlcjYwNDcyOTY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6047296?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ADTC",
          "html_url": "https://github.com/ADTC",
          "followers_url": "https://api.github.com/users/ADTC/followers",
          "following_url": "https://api.github.com/users/ADTC/following{/other_user}",
          "gists_url": "https://api.github.com/users/ADTC/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ADTC/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ADTC/subscriptions",
          "organizations_url": "https://api.github.com/users/ADTC/orgs",
          "repos_url": "https://api.github.com/users/ADTC/repos",
          "events_url": "https://api.github.com/users/ADTC/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ADTC/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-24T12:30:49Z",
        "updated_at": "2024-08-11T10:23:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "We've moved to function-based components using hooks a very long time ago, yet we still see error messages such as these:\r\n\r\n```\r\nMaximum update depth exceeded. This can happen when a component repeatedly calls \r\nsetState inside componentWillUpdate or componentDidUpdate. React limits the \r\nnumber of nested updates to prevent infinite loops.\r\n```\r\n\r\nI don't even know how to debug and resolve an error like this, because we're not using class-based components. It's really very annoying, because we don't have a single instance of `setState`, `componentWillUpdate` or `componentDidUpdate` in our code. These are remnants of the legacy class-based component architecture.\r\n\r\nCopilot AI suggested something like this:\r\n\r\n```\r\nMaximum update depth exceeded. This can happen when a component repeatedly updates \r\nstate using the useState hook inside the useEffect hook. React limits the \r\nnumber of nested updates to prevent infinite loops.\r\n```\r\n\r\nor\r\n\r\n```\r\nMaximum update depth exceeded. This can happen when a component repeatedly updates \r\nstate using the useState hook directly inside the component body. React limits the \r\nnumber of nested updates to prevent infinite loops.\r\n```\r\n\r\nI'm not sure if either one is correct, but it's definitely a start.\r\n\r\nRelated:\r\n* #12811\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30440/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30440/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30418",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30418/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30418/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30418/events",
        "html_url": "https://github.com/facebook/react/issues/30418",
        "id": 2422103638,
        "node_id": "I_kwDOAJy2Ks6QXl5W",
        "number": 30418,
        "title": "[React 19] Omit the false value for custom element is an incorrect behaviour",
        "user": {
          "login": "PupilTong",
          "id": 12288479,
          "node_id": "MDQ6VXNlcjEyMjg4NDc5",
          "avatar_url": "https://avatars.githubusercontent.com/u/12288479?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/PupilTong",
          "html_url": "https://github.com/PupilTong",
          "followers_url": "https://api.github.com/users/PupilTong/followers",
          "following_url": "https://api.github.com/users/PupilTong/following{/other_user}",
          "gists_url": "https://api.github.com/users/PupilTong/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/PupilTong/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/PupilTong/subscriptions",
          "organizations_url": "https://api.github.com/users/PupilTong/orgs",
          "repos_url": "https://api.github.com/users/PupilTong/repos",
          "events_url": "https://api.github.com/users/PupilTong/events{/privacy}",
          "received_events_url": "https://api.github.com/users/PupilTong/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-07-22T07:00:59Z",
        "updated_at": "2024-08-05T13:32:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nThe false value could be selected by a attribute selector.\r\n\r\n```html\r\n<custom-element an-attr=\"false\"></custom-element>\r\n<style>\r\ncustom-element[an-attr=\"false\"]:defined{\r\n   background:pink;\r\n}\r\n</style>\r\n```\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30418/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30418/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30415",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30415/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30415/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30415/events",
        "html_url": "https://github.com/facebook/react/issues/30415",
        "id": 2421328623,
        "node_id": "I_kwDOAJy2Ks6QUorv",
        "number": 30415,
        "title": "Make pre-release version naming align with semver 2",
        "user": {
          "login": "pgsandstrom",
          "id": 1449130,
          "node_id": "MDQ6VXNlcjE0NDkxMzA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1449130?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pgsandstrom",
          "html_url": "https://github.com/pgsandstrom",
          "followers_url": "https://api.github.com/users/pgsandstrom/followers",
          "following_url": "https://api.github.com/users/pgsandstrom/following{/other_user}",
          "gists_url": "https://api.github.com/users/pgsandstrom/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/pgsandstrom/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/pgsandstrom/subscriptions",
          "organizations_url": "https://api.github.com/users/pgsandstrom/orgs",
          "repos_url": "https://api.github.com/users/pgsandstrom/repos",
          "events_url": "https://api.github.com/users/pgsandstrom/events{/privacy}",
          "received_events_url": "https://api.github.com/users/pgsandstrom/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-07-21T10:07:43Z",
        "updated_at": "2024-07-23T07:30:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nThe two latest pre-releases are:\r\n\r\n`19.0.0-rc-163365a0-20240717`\r\n`19.0.0-rc-01172397-20240716`\r\n\r\nAccording to semver 2 pre-release versions are supposed to be ordered by dot-separated string ordering:\r\n\r\nhttps://semver.org/\r\n> Precedence for two pre-release versions with the same major, minor, and patch version MUST be determined by comparing each dot separated identifier from left to right until a difference is found\r\n\r\n\r\nThe easiest fix would be to reverse the hash- and date-string in the pre-release versions to this:\r\n\r\n`19.0.0-rc-20240717-163365a0`\r\n`19.0.0-rc-20240716-01172397`\r\n\r\nThis would help us since some of our toolings rely on this ordering to determine the latest version.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30415/reactions",
          "total_count": 4,
          "+1": 4,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30415/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30414",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30414/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30414/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30414/events",
        "html_url": "https://github.com/facebook/react/issues/30414",
        "id": 2420946304,
        "node_id": "I_kwDOAJy2Ks6QTLWA",
        "number": 30414,
        "title": "Unexpected state behavior when updating nested state objects",
        "user": {
          "login": "Sivanujan1998",
          "id": 49446716,
          "node_id": "MDQ6VXNlcjQ5NDQ2NzE2",
          "avatar_url": "https://avatars.githubusercontent.com/u/49446716?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Sivanujan1998",
          "html_url": "https://github.com/Sivanujan1998",
          "followers_url": "https://api.github.com/users/Sivanujan1998/followers",
          "following_url": "https://api.github.com/users/Sivanujan1998/following{/other_user}",
          "gists_url": "https://api.github.com/users/Sivanujan1998/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Sivanujan1998/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Sivanujan1998/subscriptions",
          "organizations_url": "https://api.github.com/users/Sivanujan1998/orgs",
          "repos_url": "https://api.github.com/users/Sivanujan1998/repos",
          "events_url": "https://api.github.com/users/Sivanujan1998/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Sivanujan1998/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-07-20T15:34:03Z",
        "updated_at": "2024-08-08T21:15:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Title:\r\nUnexpected state behavior when updating nested state objects\r\n\r\nDescription:\r\nI'm experiencing an issue where state updates do not propagate correctly under certain conditions when updating nested objects in state. This seems to be a bug in React's state handling.\r\n\r\nSteps to Reproduce:\r\n\r\n1.Create a new React component with nested state objects.\r\n2.Update the nested state object using a setState function.\r\n3.Observe that the state update does not reflect correctly in the component.\r\n\r\nCode Examble\r\nimport React, { useState } from 'react';\r\n\r\nconst NestedStateComponent = () => {\r\n  const [state, setState] = useState({ nested: { value: 0 } });\r\n\r\n  const updateNestedState = () => {\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      nested: { value: prevState.nested.value + 1 }\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Value: {state.nested.value}</p>\r\n      <button onClick={updateNestedState}>Increment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NestedStateComponent;\r\n\r\nExpected Behavior:\r\nThe state.nested.value should increment by 1 every time the button is clicked.\r\n\r\nActual Behavior:\r\nThe state.nested.value does not update correctly, and the component does not re-render as expected.\r\n\r\nDependencies\r\n  \"dependencies\": {\r\n    \"@emotion/cache\": \"^11.11.0\",\r\n    \"@emotion/react\": \"^11.11.4\",\r\n    \"@emotion/styled\": \"^11.11.5\",\r\n    \"@hookform/resolvers\": \"^3.2.0\",\r\n    \"@iconify/react\": \"^4.1.0\",\r\n    \"@mui/icons-material\": \"^5.15.20\",\r\n    \"@mui/lab\": \"^5.0.0-alpha.139\",\r\n    \"@mui/material\": \"^5.15.20\",\r\n    \"@mui/x-date-pickers\": \"^7.8.0\",\r\n    \"@reduxjs/toolkit\": \"^2.2.5\",\r\n    \"apexcharts\": \"^3.49.2\",\r\n    \"autosuggest-highlight\": \"^3.3.4\",\r\n    \"axios\": \"^1.4.0\",\r\n    \"date-fns\": \"^2.30.0\",\r\n    \"framer-motion\": \"^10.15.1\",\r\n    \"history\": \"^5.3.0\",\r\n    \"lodash\": \"^4.17.21\",\r\n    \"mui-one-time-password-input\": \"^2.0.2\",\r\n    \"notistack\": \"^3.0.1\",\r\n    \"nprogress\": \"^0.2.0\",\r\n    \"numeral\": \"^2.0.6\",\r\n    \"prop-types\": \"^15.8.1\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-apexcharts\": \"^1.4.1\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-dropzone\": \"^14.2.3\",\r\n    \"react-helmet-async\": \"^1.3.0\",\r\n    \"react-hook-form\": \"^7.45.4\",\r\n    \"react-lazy-load-image-component\": \"^1.6.0\",\r\n    \"react-redux\": \"^9.1.2\",\r\n    \"react-router\": \"^6.14.2\",\r\n    \"react-router-dom\": \"^6.14.2\",\r\n    \"react-scripts\": \"^5.0.1\",\r\n    \"simplebar-react\": \"^3.2.4\",\r\n    \"stylis\": \"^4.2.0\",\r\n    \"stylis-plugin-rtl\": \"^2.0.2\",\r\n    \"yup\": \"^1.2.0\",\r\n    \"yup-phone-lite\": \"^2.0.1\"\r\n  },\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30414/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30414/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30408",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30408/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30408/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30408/events",
        "html_url": "https://github.com/facebook/react/issues/30408",
        "id": 2419264862,
        "node_id": "I_kwDOAJy2Ks6QMw1e",
        "number": 30408,
        "title": "`FALLBACK_THROTTLE_MS` slows tests down significantly - could it be configurable?",
        "user": {
          "login": "phryneas",
          "id": 4282439,
          "node_id": "MDQ6VXNlcjQyODI0Mzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4282439?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/phryneas",
          "html_url": "https://github.com/phryneas",
          "followers_url": "https://api.github.com/users/phryneas/followers",
          "following_url": "https://api.github.com/users/phryneas/following{/other_user}",
          "gists_url": "https://api.github.com/users/phryneas/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/phryneas/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/phryneas/subscriptions",
          "organizations_url": "https://api.github.com/users/phryneas/orgs",
          "repos_url": "https://api.github.com/users/phryneas/repos",
          "events_url": "https://api.github.com/users/phryneas/events{/privacy}",
          "received_events_url": "https://api.github.com/users/phryneas/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 710375792,
            "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
            "name": "Type: Discussion",
            "color": "fef2c0",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-07-19T16:01:18Z",
        "updated_at": "2024-07-23T11:43:33Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nHi there :wave:,\r\n\r\nwe encountered a massive slowdown in the Apollo Client React hooks test suite - especially on the suspense-related tests - when we started testing for React 19.\r\n\r\nOne file specifically went up from a 10s execution time to 80s.\r\n\r\nFurther discussion [on twitter](https://x.com/sebsilbermann/status/1807817802163569044) and [later in an issue in testing library](https://github.com/testing-library/react-testing-library/issues/1342) revealed that this slowdown relates to React 19 being more strict with the throttle of the Suspense fallback, and that every suspense fallback shown in a test now slows down the test by an additional 300ms.\r\n\r\nWhile I generally agree with testing close to the original implementation, in our case this massively slows down our local development and significantly increases the CI minutes used (it sums up over all tests to an additional 2 minutes for every CI run).\r\n\r\nChanging everything to mocked timers is something that would honestly be very painful (even if only on affected tests), and if it would really need to be done on a global scale as indicated by @eps1lon in that issue, I believe it would just be completely out of the question in many cases - it would require rewriting thousands of tests, even if not suspense-related.\r\n\r\nWould you be willing to make `FALLBACK_THROTTLE_MS` configurable, similar to `IS_REACT_ACT_ENVIRONMENT`?\r\n\r\nI [did patch the timeout for our test suite](https://github.com/apollographql/apollo-client/pull/11963), and could verify that it almost brings execution times back down to the original - I kept the timeout at a for tests more reasonable 10ms, so we go from 10s on React 18 to 15s on React 19 now.\r\n\r\nI would happily submit a PR if you would consider this.\r\n\r\n## Reproduction\r\n\r\nYou can see this happening in this reproduction (runnable repo here: https://github.com/phryneas/react-19-reproduction-slow-tests): \r\n\r\n```js\r\ntest(\"does not timeout\", async () => {\r\n  const initialPromise = Promise.resolve(\"test\");\r\n  console.time(\"executing component render\");\r\n  console.time(\"got past the `use` call\");\r\n  console.time(\"assertion succeeded\");\r\n\r\n  function Component() {\r\n    console.timeLog(\"executing component render\");\r\n    const renderResult = use(initialPromise);\r\n    console.timeLog(\"got past the `use` call\", renderResult);\r\n    return <div>{renderResult}</div>;\r\n  }\r\n\r\n  render(\r\n    <Suspense fallback={<div>loading</div>}>\r\n      <Component />\r\n    </Suspense>\r\n  );\r\n\r\n  await waitFor(() => {\r\n    screen.getByText(\"test\");\r\n    console.timeLog(\"assertion succeeded\");\r\n  });\r\n});\r\n```\r\n\r\nWhich logs\r\n\r\n```\r\n    executing component render: 4 ms\r\n\r\n    executing component render: 51 ms\r\n\r\n    got past the `use` call: 53 ms test\r\n\r\n    assertion succeeded: 340 ms\r\n```",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30408/reactions",
          "total_count": 3,
          "+1": 3,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30408/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30368",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30368/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30368/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30368/events",
        "html_url": "https://github.com/facebook/react/issues/30368",
        "id": 2415044140,
        "node_id": "I_kwDOAJy2Ks6P8qYs",
        "number": 30368,
        "title": "Bug: useFormStatus pending state is reset when component state is updated",
        "user": {
          "login": "jatwood",
          "id": 480595,
          "node_id": "MDQ6VXNlcjQ4MDU5NQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/480595?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jatwood",
          "html_url": "https://github.com/jatwood",
          "followers_url": "https://api.github.com/users/jatwood/followers",
          "following_url": "https://api.github.com/users/jatwood/following{/other_user}",
          "gists_url": "https://api.github.com/users/jatwood/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jatwood/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jatwood/subscriptions",
          "organizations_url": "https://api.github.com/users/jatwood/orgs",
          "repos_url": "https://api.github.com/users/jatwood/repos",
          "events_url": "https://api.github.com/users/jatwood/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jatwood/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-07-18T01:59:20Z",
        "updated_at": "2024-08-01T14:53:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "If you have a component that relies on the `pending` return value of `useFormStatus`, the `pending` state will incorrectly reset to `false` if the component is updated due to a `useState` update. This does not happen if the `useState` hook is placed in a child component. \r\n\r\nReact version: 19.0.0-rc-512b09b2-20240718\r\n\r\n## Steps To Reproduce\r\n\r\n[codesandbox.io/p/sandbox/react-useformstatus-pending-reset-on-unrelated-state-update-m59zw8](https://codesandbox.io/p/sandbox/react-useformstatus-pending-reset-on-unrelated-state-update-m59zw8)\r\n\r\n1. Create a react app that uses form actions (this uses NextJS starter code)\r\n2. Have the form action delay for a set period of time before resolving\r\n3. Create a child component that uses `useFormStatus().pending`. Have the component also use a `useState` hook that updates on an interval using `useEffect`. \r\n4. Place this child component as a child of the `<form />` element\r\n5. Verify that `useFormStatus().pending` is reset to false as soon as a call to `setState` happns\r\n\r\nExample component\r\n\r\n```\r\n\r\nexport default function SubmissionState() {\r\n  const formStatus = useFormStatus();\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    const id = setTimeout(() => {\r\n      if (!formStatus.pending) {\r\n        setCounter(0);\r\n        return;\r\n      }\r\n      setCounter(counter + 1);\r\n    }, 1000);\r\n    return () => clearTimeout(id);\r\n  }, [counter, formStatus.pending]);\r\n  return (\r\n    <div>\r\n      {formStatus.pending ? `Pending for ${counter} seconds` : \"Not pending\"}\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nthis example works as expected, `useFormStatus().pending` state matches the server actions state\r\n\r\n```\r\nfunction SubmissionStateBody({ pending }: { pending: boolean }) {\r\n  const [counter, setCounter] = useState(0);\r\n  useEffect(() => {\r\n    if (!pending) {\r\n      setCounter(0);\r\n      return;\r\n    }\r\n    const id = setTimeout(() => {\r\n      setCounter(counter + 1);\r\n    }, 1000);\r\n    return () => clearTimeout(id);\r\n  }, [counter, pending]);\r\n  return (\r\n    <div>{pending ? `Pending for ${counter} seconds` : \"Not pending\"}</div>\r\n  );\r\n}\r\n\r\nexport default function SubmissionStateCorrect() {\r\n  const formStatus = useFormStatus();\r\n  return <SubmissionStateBody pending={formStatus.pending} />;\r\n}\r\n``` \r\n\r\nLink to code example:\r\n\r\n[Github repro using nextjs starter template](https://github.com/jatwood/repro-use-form-issue)\r\n\r\n## The current behavior\r\n\r\nThe UI shows the submission as pending for the length of the server action.\r\n\r\n\r\n## The expected behavior\r\n\r\nThe UI shows the submission as not-pending as soon as the counter is updated. \r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30368/reactions",
          "total_count": 2,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30368/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30367",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30367/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30367/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30367/events",
        "html_url": "https://github.com/facebook/react/issues/30367",
        "id": 2414863800,
        "node_id": "I_kwDOAJy2Ks6P7-W4",
        "number": 30367,
        "title": "Bug:  div: `ref` is not a prop",
        "user": {
          "login": "SaintPepsi",
          "id": 16056759,
          "node_id": "MDQ6VXNlcjE2MDU2NzU5",
          "avatar_url": "https://avatars.githubusercontent.com/u/16056759?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SaintPepsi",
          "html_url": "https://github.com/SaintPepsi",
          "followers_url": "https://api.github.com/users/SaintPepsi/followers",
          "following_url": "https://api.github.com/users/SaintPepsi/following{/other_user}",
          "gists_url": "https://api.github.com/users/SaintPepsi/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SaintPepsi/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SaintPepsi/subscriptions",
          "organizations_url": "https://api.github.com/users/SaintPepsi/orgs",
          "repos_url": "https://api.github.com/users/SaintPepsi/repos",
          "events_url": "https://api.github.com/users/SaintPepsi/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SaintPepsi/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-07-17T23:55:23Z",
        "updated_at": "2024-08-02T13:17:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nUsing Vite & React we're getting the weirdest error i've seen in all my react career:\r\n```\r\nWarning: div: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\r\n```\r\n\r\nI'm clueless, how does react warn me that `ref` is not a prop for `<div>`?\r\n\r\nAccompanied is a whole bunch of other errors related to contexts:\r\n```\r\nWarning: _RichTextEditor: `key` is not a prop.\r\nWarning: Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?\r\nWarning: Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\r\n```\r\n\r\nReact version: `18.3.1`\r\n\r\n## Steps To Reproduce\r\n\r\nWe tried to reproduce it but it does not happen in a minimal example.\r\nPlease advice on tactics/methods to write a minimal reproducible to try and get this error. \r\n\r\nThe component giving this error is rendering a `createPortal` to the `document.body`:\r\n\r\n![image](https://github.com/user-attachments/assets/89bae1ed-ea65-4baa-bc08-b03e88194d03)\r\n\r\nLarge Node Tree With recursively rendered components and form elements just to show it's a complex application which I think is what contributes to why we can't replicated it.\r\n\r\n![image](https://github.com/user-attachments/assets/7dc300fa-33a9-4113-b598-5c7d1647fb29)\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example: WIP\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nVM18671:1 Warning: div: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\r\n\r\n## The expected behavior\r\nNo Error",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30367/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30367/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30363",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30363/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30363/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30363/events",
        "html_url": "https://github.com/facebook/react/issues/30363",
        "id": 2413917686,
        "node_id": "I_kwDOAJy2Ks6P4XX2",
        "number": 30363,
        "title": "Feature Request: ESLint hooks rule for accessing previous state when deriving new state ",
        "user": {
          "login": "Samuel-Therrien-Beslogic",
          "id": 84519004,
          "node_id": "MDQ6VXNlcjg0NTE5MDA0",
          "avatar_url": "https://avatars.githubusercontent.com/u/84519004?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Samuel-Therrien-Beslogic",
          "html_url": "https://github.com/Samuel-Therrien-Beslogic",
          "followers_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/followers",
          "following_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/following{/other_user}",
          "gists_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/subscriptions",
          "organizations_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/orgs",
          "repos_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/repos",
          "events_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Samuel-Therrien-Beslogic/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 1249821345,
            "node_id": "MDU6TGFiZWwxMjQ5ODIxMzQ1",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20ESLint%20Rules",
            "name": "Component: ESLint Rules",
            "color": "f7afdb",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-07-17T15:24:44Z",
        "updated_at": "2024-07-22T14:36:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/facebook/react/issues/21448\r\n> A very common mistake and source of bugs in React applications is not using the updater function when deriving new state from old state.\r\n> \r\n> When using class components, there is a handy [lint rule](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/no-access-state-in-setstate.md?rgh-link-date=2021-05-06T14%3A34%3A05Z) for this in the eslint-plugin-react project.\r\n> \r\n> However, their rule does not work for functional components that utilize useState, and they have [suggested](https://github.com/yannickcr/eslint-plugin-react/issues/2539#issuecomment-620879842) that [eslint-plugin-react-hooks](https://github.com/facebook/react/blob/master/packages/eslint-plugin-react-hooks/README.md?rgh-link-date=2021-05-06T14%3A34%3A05Z) would be a more appropriate home for an equivalent lint rule that _does_ work with hooks.\r\n> \r\n> I've seen this mistake made countless times, and I even fall victim to it every once in awhile, so having an officially sanctioned lint rule would be amazing!\r\n\r\nConversation was locked so we couldn't bump the issue. Note that I'd prefer that issue be re-opened and this one here closed to keep participants, followers, upvotes, creation date, etc.\r\n\r\nCC @martdavidson @palfrey @johncmunson, @dangerismycat, @mathieutu, @vlnguyen, @aldenquimby, @schyler-freewill, @Stephen2 ",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30363/reactions",
          "total_count": 4,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 4,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30363/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30291",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30291/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30291/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30291/events",
        "html_url": "https://github.com/facebook/react/issues/30291",
        "id": 2396180503,
        "node_id": "I_kwDOAJy2Ks6O0tAX",
        "number": 30291,
        "title": "Bug: effect runs with stale state values outside of Concurrent React",
        "user": {
          "login": "denis-sokolov",
          "id": 113721,
          "node_id": "MDQ6VXNlcjExMzcyMQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/113721?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/denis-sokolov",
          "html_url": "https://github.com/denis-sokolov",
          "followers_url": "https://api.github.com/users/denis-sokolov/followers",
          "following_url": "https://api.github.com/users/denis-sokolov/following{/other_user}",
          "gists_url": "https://api.github.com/users/denis-sokolov/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/denis-sokolov/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/denis-sokolov/subscriptions",
          "organizations_url": "https://api.github.com/users/denis-sokolov/orgs",
          "repos_url": "https://api.github.com/users/denis-sokolov/repos",
          "events_url": "https://api.github.com/users/denis-sokolov/events{/privacy}",
          "received_events_url": "https://api.github.com/users/denis-sokolov/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-08T17:29:30Z",
        "updated_at": "2024-07-17T06:59:10Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "```tsx\r\nconst [done, setDone] = useState(false);\r\nuseEffect(() => {\r\n  if (done) return;\r\n  setDone(true);\r\n  console.log(\"🤔 This runs more than once.\");\r\n});\r\n```\r\n\r\nI have held an assumption that a React effect will only run once the state change queue has been processed. In other words, a new run of a useEffect would only be kicked off once the state values are settled. This does not seem to be the case in the examples below.\r\n\r\nI understand that Concurrent React might throw a wrench in this model, but the examples below run on React 18.3, and no concurrent features are used. In particular, I can’t identify any low or high priority changes in the examples.\r\n\r\nI understand that state change batching exists. But I expected for the batching to finish before running effects.\r\n\r\nI fully admit, that it is likely my mental model of React here is wrong. However, if the effects are not guaranteed to run before the state changes are settled, then does that mean that we can not reason about the state of state values in effects at all and should be ready for anything? It seems too weak of a guarantee for common use, which is why I am hesitant to accept it as the simplest explanation.\r\n\r\nRegardless, any response will be highly appreciated!\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open [the minimal reproduction](https://codesandbox.io/s/effect-stale-state-4zzwns?file=/src/App.js).\r\n    <details><summary>Code backup</summary>\r\n      \r\n        import { useEffect, useState } from \"react\";\r\n     \r\n        export default function () {\r\n          const [done, setDone] = useState(false);\r\n          useEffect(() => {\r\n            if (done) return;\r\n            setDone(true);\r\n            console.log(\"%cMust run once\", \"color:red\");\r\n          });\r\n        \r\n          return <></>;\r\n        }\r\n    </details>\r\n2. Open the console.\r\n3. Actual behavior: “Must run once” is logged twice.\r\n4. Expected behavior: “Must run once” is logged once.\r\n\r\n### Note on the initial rerender\r\nThe minimal reproduction relies on the setup running the effect an extra time to begin with. I don’t understand why it does that, but it enables the demo. We can side-step and have a slightly longer demo that does not rely on the initial extra render:\r\n\r\n1. Open [the larger reproduction](https://codesandbox.io/s/effect-stale-state-multiple-542q4q?file=/src/App.js).\r\n    <details><summary>Code backup</summary>\r\n        import { useEffect, useReducer, useState } from \"react\";\r\n        \r\n        let fastRendersRemaining = 0;\r\n        \r\n        export default function () {\r\n          const [rerenderId, rerender] = useReducer((i) => i + 1, 0);\r\n        \r\n          useEffect(() => {\r\n            if (fastRendersRemaining === 0) return;\r\n            fastRendersRemaining -= 1;\r\n            queueMicrotask(rerender);\r\n          });\r\n        \r\n          const [done, setDone] = useState(true);\r\n          useEffect(() => {\r\n            // console.log('Current values:', { rerenderId, done });\r\n            if (done) return;\r\n            setDone(true);\r\n            console.log(\"%cMust run once\", \"color:red\");\r\n          });\r\n        \r\n          return (\r\n            <button\r\n              onClick={() => {\r\n                fastRendersRemaining = 5;\r\n                rerender();\r\n                setDone(false);\r\n              }}\r\n            >\r\n              Run demonstration\r\n            </button>\r\n          );\r\n        }\r\n\r\n    </details>\r\n2. Open the console.\r\n3. Click on “Run demonstration”.\r\n4. Actual behavior: “Must run once” is logged six times.\r\n5. Expected behavior: “Must run once” is logged once.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30291/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30291/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30163",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30163/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30163/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30163/events",
        "html_url": "https://github.com/facebook/react/issues/30163",
        "id": 2383559675,
        "node_id": "I_kwDOAJy2Ks6OEjv7",
        "number": 30163,
        "title": "Bug: Empty `style={}` object values cause hydration warnings in React 18.3.1 - Includes solution",
        "user": {
          "login": "nandastone",
          "id": 199204,
          "node_id": "MDQ6VXNlcjE5OTIwNA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/199204?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nandastone",
          "html_url": "https://github.com/nandastone",
          "followers_url": "https://api.github.com/users/nandastone/followers",
          "following_url": "https://api.github.com/users/nandastone/following{/other_user}",
          "gists_url": "https://api.github.com/users/nandastone/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nandastone/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nandastone/subscriptions",
          "organizations_url": "https://api.github.com/users/nandastone/orgs",
          "repos_url": "https://api.github.com/users/nandastone/repos",
          "events_url": "https://api.github.com/users/nandastone/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nandastone/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-07-01T11:15:32Z",
        "updated_at": "2024-07-30T13:45:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# Issue\r\n\r\nHydrating a React 18 application with a `style={}` prop object with empty values results in a hydration warning:\r\n\r\n```jsx\r\nfunction App() {\r\n  const style = {\r\n    color: \"red\",\r\n    // Empty style value i.e. from conditional assignment.\r\n    \"--empty-custom-property\": \"\",\r\n  };\r\n\r\n  return <p style={style}>Hello World</p>;\r\n}\r\n```\r\n\r\n![CleanShot 2024-07-01 at 21 07 54@2x](https://github.com/facebook/react/assets/199204/ec058002-4f15-4725-87d1-dd0a3beca074)\r\n\r\nRepro: https://github.com/nandastone/react-18-19-ssr-empty-style\r\n\r\nIn the example above, the client generates a style object containing a property with an empty string value. This does not match the expected ReactDOM behavior which discards style object properties with empty values:\r\n\r\n![CleanShot 2024-07-01 at 21 01 47@2x](https://github.com/facebook/react/assets/199204/996a4f8c-62f0-4b00-bbb1-2b714e0948c3)\r\n\r\nExample: https://codesandbox.io/p/sandbox/objective-tesla-nzsvwz?file=%2Fsrc%2FApp.js%3A8%2C1\r\n\r\n#  Culprit\r\n\r\nThe issue lies in a line in the development-mode hydration check, called during `diffHydratedProperties()`: [CSSPropertyOperations.js#L33](https://github.com/facebook/react/blob/v18.3.1/packages/react-dom/src/client/CSSPropertyOperations.js#L33)\r\n\r\nThis check does not match the stricter ReactDOM implementation that correctly discards properties with empty values: [dangerousStyleValue.js#L31](https://github.com/facebook/react/blob/v18.3.1/packages/react-dom/src/shared/dangerousStyleValue.js#L31)\r\n\r\n# Solution\r\n\r\nUpdate `createDangerousStringForStyles()` to match the ReactDOM implementation. This was addressed in React 19: [CSSPropertyOperations.js#L34](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/client/CSSPropertyOperations.js#L34).\r\n\r\nHowever, many applications (including mine) will be using React 18 for a while, so it would be good to fix this issue. Although the contributing guidelines suggest that all PRs should target `main`, is there a way to open a PR targeting the v18.3.1 tag?\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Render a component with a style prop where the object has a property with empty string value.\r\n2. Render the app using a React 18 server API e.g. `renderToPipeableStream()`.\r\n3. Hydrate the app.\r\n\r\nLink to code example:\r\n\r\nhttps://github.com/nandastone/react-18-19-ssr-empty-style\r\n\r\n1. Clone.\r\n2. `yarn`\r\n3. `yarn start`\r\n4. http://localhost:9000\r\n\r\nUnfortunately Codesandbox/Stackblitz were proving difficult to properly setup the SSR example.\r\n\r\n## The current behavior\r\n\r\nReceive hydration warning.\r\n\r\n## The expected behavior\r\n\r\nShould not receive hydration warning.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30163/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30163/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30141",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30141/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30141/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30141/events",
        "html_url": "https://github.com/facebook/react/issues/30141",
        "id": 2381936199,
        "node_id": "I_kwDOAJy2Ks6N-XZH",
        "number": 30141,
        "title": "Bug: useEffect is triggered even if the array as dependency variable wasn't changed.",
        "user": {
          "login": "enesgorkemgenc",
          "id": 93938698,
          "node_id": "U_kgDOBZlkCg",
          "avatar_url": "https://avatars.githubusercontent.com/u/93938698?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/enesgorkemgenc",
          "html_url": "https://github.com/enesgorkemgenc",
          "followers_url": "https://api.github.com/users/enesgorkemgenc/followers",
          "following_url": "https://api.github.com/users/enesgorkemgenc/following{/other_user}",
          "gists_url": "https://api.github.com/users/enesgorkemgenc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/enesgorkemgenc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/enesgorkemgenc/subscriptions",
          "organizations_url": "https://api.github.com/users/enesgorkemgenc/orgs",
          "repos_url": "https://api.github.com/users/enesgorkemgenc/repos",
          "events_url": "https://api.github.com/users/enesgorkemgenc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/enesgorkemgenc/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-29T19:37:57Z",
        "updated_at": "2024-07-02T13:47:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: all\r\n\r\n## Steps To Reproduce\r\n\r\n1. Declare a state variable as array like: useState([1, 2, 3]);\r\n2. Add a useEffect including the declared state variable in the dependency array.\r\n3. Update the state variable with the same value.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nIt might be happening because if state values are checked with '==' after using functions to set states, the comparison for arrays always returns false, triggering useEffect.\r\n\r\n```\r\n[1, 2, 3] == [1, 2, 3] is false:\r\n\"This condition will always return 'false' since JavaScript compares objects by reference, not value.\"\r\n```\r\n\r\nLink to code example:\r\n\r\n```\r\nconst [arrVar, setArrVar] = useState([]);\r\n\r\n useEffect(() => {\r\n    console.log(\"triggered\");\r\n    console.log(arrVar);\r\n}, [arrVar])\r\n\r\n//Click the button twice.\r\nreturn (\r\n    <button onClick={ (e) => {setArrVar([1, 2, 3])} }>update state</button>\r\n);\r\n```\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior\r\nuseEffect is triggered even if the array element in the dependency array doesn't change when updated.\r\n\r\n## The expected behavior\r\nIt shouldn't be triggered.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30141/reactions",
          "total_count": 4,
          "+1": 0,
          "-1": 4,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30141/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30119",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30119/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30119/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30119/events",
        "html_url": "https://github.com/facebook/react/issues/30119",
        "id": 2378537445,
        "node_id": "I_kwDOAJy2Ks6NxZnl",
        "number": 30119,
        "title": "[eslint-plugin-react-hooks] Missing type declarations",
        "user": {
          "login": "JstnMcBrd",
          "id": 28303477,
          "node_id": "MDQ6VXNlcjI4MzAzNDc3",
          "avatar_url": "https://avatars.githubusercontent.com/u/28303477?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/JstnMcBrd",
          "html_url": "https://github.com/JstnMcBrd",
          "followers_url": "https://api.github.com/users/JstnMcBrd/followers",
          "following_url": "https://api.github.com/users/JstnMcBrd/following{/other_user}",
          "gists_url": "https://api.github.com/users/JstnMcBrd/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/JstnMcBrd/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/JstnMcBrd/subscriptions",
          "organizations_url": "https://api.github.com/users/JstnMcBrd/orgs",
          "repos_url": "https://api.github.com/users/JstnMcBrd/repos",
          "events_url": "https://api.github.com/users/JstnMcBrd/events{/privacy}",
          "received_events_url": "https://api.github.com/users/JstnMcBrd/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-27T15:54:21Z",
        "updated_at": "2024-06-30T09:37:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<ins>Versions:</ins> all\r\n\r\n<ins>Severity:</ins> low\r\n\r\n## What\r\n\r\nWhen imported in a TypeScript environment, `eslint-plugin-react-hooks` throws a \"missing type declarations\" error.\r\n\r\n![image](https://github.com/facebook/react/assets/28303477/fbb4a4fb-2db6-4d1a-aeba-0e73add1e507)\r\n\r\n## Why\r\n\r\nThis is because `eslint-plugin-react-hooks` does not have any type declarations bundled in the package. These would usually be in an `index.d.ts` file.\r\n\r\nAlso, `eslint-plugin-react-hooks` does not have a corresponding `@types/...` package in the [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped) project for users to rely on.\r\n\r\n## Workaround\r\n\r\nUsers can follow the instructions in the error message and make a temporary module augmentation to declare their own types for the package.\r\n\r\nIn my personal project, I've done it this way:\r\n\r\n```ts\r\n// ./src/@types/eslint-plugin-react-hooks.d.ts\r\ndeclare module 'eslint-plugin-react-hooks' {\r\n\timport type { ESLint } from 'eslint';\r\n\tconst plugin: Omit<ESLint.Plugin, 'configs'> & {\r\n\t\t// eslint-plugin-react-hooks does not use FlatConfig yet\r\n\t\tconfigs: Record<string, ESLint.ConfigData>;\r\n\t};\r\n\texport default plugin;\r\n}\r\n```\r\n\r\nBut this will not automatically stay up-to-date with the package and is not guaranteed to be correct. Is it also incomplete and does not contain detailed information about the different configs in the plugin.\r\n\r\n## How to fix\r\n\r\nThere are several ways.\r\n\r\n1. Usually the preferred solution is just to write everything in TypeScript and let it auto-generate declaration files for you. But I understand if a complete rewrite is not on the table :)\r\n\r\n2. You could add a `@types/eslint-plugin-react-hooks` package in the [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped) repo. But then your types would be defined in a completely different place from your actual code, and if you ever decide to migrate to TypeScript in the future, the old `@types/...` package would need to be deprecated. Sounds messy.\r\n\r\n3. Best solution, in my opinion. Just add a `index.d.ts` file to the package that declare the type exports of the package. Then define it as the type declarations in `package.json`. Easy peasy.\r\n\r\n```diff\r\n// package.json\r\n+  \"main\": \"index.js\",\r\n+  \"types\": \"index.d.ts\",\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"index.js\",\r\n+    \"index.d.ts\",\r\n    \"cjs\"\r\n  ],\r\n```\r\n\r\nI would be happy to do this myself. I just wanted to submit an issue first to confirm that the maintainers would approve.\r\n\r\n## Steps To Reproduce\r\n\r\n1. Install `typescript`, `eslint-plugin-react-hooks`\r\n2. Create a `.ts` file\r\n3. Import `eslint-plugin-react-hooks`\r\n\r\n## Code example\r\n\r\n`package.json`\r\n```json\r\n{\r\n  \"scripts\": {\r\n    \"build\": \"tsc\"\r\n  },\r\n  \"dependencies\": {\r\n    \"eslint-plugin-react-hooks\": \"^4.6.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"typescript\": \"^5.5.2\"\r\n  }\r\n}\r\n```\r\n\r\n`index.ts`\r\n```ts\r\nimport reactHooksPlugin from 'eslint-plugin-react-hooks';\r\n```\r\n\r\n(You'll need a `tsconfig.json` file too, but the settings are irrelevant to this example)\r\n\r\n## The current behavior\r\n\r\nTypeScript build error.\r\n\r\n## The expected behavior\r\n\r\nNo errors.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30119/reactions",
          "total_count": 16,
          "+1": 14,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 1,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30119/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30114",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30114/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30114/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30114/events",
        "html_url": "https://github.com/facebook/react/issues/30114",
        "id": 2377270163,
        "node_id": "I_kwDOAJy2Ks6NskOT",
        "number": 30114,
        "title": "[DevTools Bug] getCommitTree(): Invalid commit \"1\" for root \"445\". There are only \"1\" commits.",
        "user": {
          "login": "Targter",
          "id": 126644386,
          "node_id": "U_kgDOB4xwog",
          "avatar_url": "https://avatars.githubusercontent.com/u/126644386?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Targter",
          "html_url": "https://github.com/Targter",
          "followers_url": "https://api.github.com/users/Targter/followers",
          "following_url": "https://api.github.com/users/Targter/following{/other_user}",
          "gists_url": "https://api.github.com/users/Targter/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Targter/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Targter/subscriptions",
          "organizations_url": "https://api.github.com/users/Targter/orgs",
          "repos_url": "https://api.github.com/users/Targter/repos",
          "events_url": "https://api.github.com/users/Targter/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Targter/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-06-27T06:27:24Z",
        "updated_at": "2024-06-27T06:27:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nhttps://abhayyportfolio.netlify.app/\n\n### Repro steps\n\nI am just checking my website performance by the use of profiler \n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\nreact-devtools-extensions\n\n### DevTools version (automated)\n\n5.2.0-1717ab0171\n\n### Error message (automated)\n\ngetCommitTree(): Invalid commit \"1\" for root \"445\". There are only \"1\" commits.\n\n### Error call stack (automated)\n\n```text\nat getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1150777)\r\n    at fe.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1154452)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1396842)\r\n    at renderWithHooks (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:76682)\r\n    at updateFunctionComponent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:103097)\r\n    at beginWork (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:116771)\r\n    at performUnitOfWork (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:175653)\r\n    at workLoopSync (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:175521)\r\n    at renderRootSync (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:175252)\r\n    at recoverFromConcurrentError (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:171121)\n```\n\n\n### Error component stack (automated)\n\n```text\nat CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1396643)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1291561)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1528595\r\n    at ua (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1309094)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1311805)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1312002\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1311805)\r\n    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1387831)\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1379486)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1203530)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1231781)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1316268)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:1:1536331)\n```\n\n\n### GitHub query string (automated)\n\n```text\nhttps://api.github.com/search/issues?q=getCommitTree(): Invalid commit  for root . There are only  commits. in:title is:issue is:open is:public label:\"Component: Developer Tools\" repo:facebook/react\n```\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30114/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30114/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30056",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30056/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30056/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30056/events",
        "html_url": "https://github.com/facebook/react/issues/30056",
        "id": 2368933541,
        "node_id": "I_kwDOAJy2Ks6NMw6l",
        "number": 30056,
        "title": "[React 19] Different behaviors with `preload` method",
        "user": {
          "login": "ahce",
          "id": 12452003,
          "node_id": "MDQ6VXNlcjEyNDUyMDAz",
          "avatar_url": "https://avatars.githubusercontent.com/u/12452003?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ahce",
          "html_url": "https://github.com/ahce",
          "followers_url": "https://api.github.com/users/ahce/followers",
          "following_url": "https://api.github.com/users/ahce/following{/other_user}",
          "gists_url": "https://api.github.com/users/ahce/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ahce/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ahce/subscriptions",
          "organizations_url": "https://api.github.com/users/ahce/orgs",
          "repos_url": "https://api.github.com/users/ahce/repos",
          "events_url": "https://api.github.com/users/ahce/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ahce/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 620368407,
            "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
            "name": "Resolution: Needs More Information",
            "color": "fffde7",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-23T23:16:07Z",
        "updated_at": "2024-06-25T21:40:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\n- react & react-dom version: `19.0.0-rc-3563387fe3-20240621`\r\n- node version: `20.14.0`\r\n\r\nWhen using react's preload method, the preload link tag is not created in certain cases.\r\nIt works correctly with two link tags (`OnlyLinkTags` component).\r\n\r\n### Code example\r\n\r\n```js\r\nconst fs = require('node:fs');\r\nconst { createElement } = require('react');\r\nconst { preload, preinit } = require('react-dom');\r\nconst { renderToString } = require('react-dom/server');\r\n\r\nconst CSS = '/some.css';\r\nconst LINK_PROPS = {\r\n  rel: 'stylesheet',\r\n  href: CSS,\r\n};\r\n\r\n/**\r\n * Doesn't create the preload link tag\r\n */\r\nconst PreloadAndPreinit = () => {\r\n  preload(CSS, { as: 'style' });\r\n  preinit(CSS, { as: 'style' });\r\n\r\n  return null;\r\n};\r\n\r\n/**\r\n * Doesn't create the preload link tag\r\n */\r\nconst PreloadAndLinkWithPrecedence = () => {\r\n  preload(CSS, { as: 'style' });\r\n\r\n  return createElement('link', { ...LINK_PROPS, precedence: 'custom' });\r\n};\r\n\r\n/**\r\n * Creates the preload link tag correctly into the head\r\n * The stylesheet link tag stays in the body, because it doesn't have precedence\r\n */\r\nconst PreloadAndLinkWithoutPrecedence = () => {\r\n  preload(CSS, { as: 'style' });\r\n\r\n  return createElement('link', LINK_PROPS);\r\n};\r\n\r\n/**\r\n * Moves both tags into the head\r\n */\r\nconst OnlyLinkTags = () => [\r\n  createElement('link', {\r\n    key: 'preload',\r\n    rel: 'preload',\r\n    as: 'style',\r\n    href: CSS,\r\n  }),\r\n  createElement('link', { ...LINK_PROPS, key: 'link', precedence: 'custom' }),\r\n];\r\n\r\n[\r\n  PreloadAndPreinit,\r\n  PreloadAndLinkWithPrecedence,\r\n  PreloadAndLinkWithoutPrecedence,\r\n  OnlyLinkTags,\r\n].forEach((Component) => {\r\n  fs.writeFileSync(\r\n    `_${Component.name}.html`,\r\n    renderToString(\r\n      createElement(\r\n        'html',\r\n        null,\r\n        createElement('head'),\r\n        createElement('body', null, createElement(Component)),\r\n      ),\r\n    ),\r\n  );\r\n});\r\n```\r\n\r\n### Outputs:\r\n\r\n#### PreloadAndPreinit:\r\n\r\n**Current:**\r\n```html\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"/some.css\" data-precedence=\"default\" />\r\n  </head>\r\n  <body></body>\r\n</html>\r\n```\r\n\r\n**Expected:**\r\n```html\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"/some.css\" data-precedence=\"default\" />\r\n    <link rel=\"preload\" as=\"style\" href=\"/some.css\" />\r\n  </head>\r\n  <body></body>\r\n</html>\r\n```\r\n\r\n#### PreloadAndLinkWithPrecedence:\r\n\r\n**Current:**\r\n```html\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"/some.css\" data-precedence=\"custom\" />\r\n  </head>\r\n  <body></body>\r\n</html>\r\n```\r\n\r\n**Expected:**\r\n```html\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"/some.css\" data-precedence=\"default\" />\r\n    <link rel=\"preload\" as=\"style\" href=\"/some.css\" />\r\n  </head>\r\n  <body></body>\r\n</html>\r\n```\r\n\r\n#### PreloadAndLinkWithoutPrecedence:\r\n\r\n**Current:**\r\n```html\r\n<html>\r\n  <head>\r\n    <link rel=\"preload\" href=\"/some.css\" as=\"style\" />\r\n  </head>\r\n  <body>\r\n    <link rel=\"stylesheet\" href=\"/some.css\" />\r\n  </body>\r\n</html>\r\n```\r\n\r\n**Expected:**\r\n\r\n`The same as current.`\r\n\r\n#### OnlyLinkTags:\r\n\r\n**Current:**\r\n```html\r\n<html>\r\n  <head>\r\n    <link rel=\"stylesheet\" href=\"/some.css\" data-precedence=\"custom\" />\r\n    <link rel=\"preload\" as=\"style\" href=\"/some.css\" />\r\n  </head>\r\n  <body></body>\r\n</html>\r\n```\r\n\r\n**Expected:**\r\n\r\n`The same as current.`",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30056/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30056/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30049",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30049/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30049/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30049/events",
        "html_url": "https://github.com/facebook/react/issues/30049",
        "id": 2368150387,
        "node_id": "I_kwDOAJy2Ks6NJxtz",
        "number": 30049,
        "title": "[Compiler Bug]:  healthcheck do not check next.js StrictMode",
        "user": {
          "login": "coleea",
          "id": 7471674,
          "node_id": "MDQ6VXNlcjc0NzE2NzQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7471674?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/coleea",
          "html_url": "https://github.com/coleea",
          "followers_url": "https://api.github.com/users/coleea/followers",
          "following_url": "https://api.github.com/users/coleea/following{/other_user}",
          "gists_url": "https://api.github.com/users/coleea/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/coleea/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/coleea/subscriptions",
          "organizations_url": "https://api.github.com/users/coleea/orgs",
          "repos_url": "https://api.github.com/users/coleea/repos",
          "events_url": "https://api.github.com/users/coleea/events{/privacy}",
          "received_events_url": "https://api.github.com/users/coleea/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-23T02:21:47Z",
        "updated_at": "2024-06-24T12:27:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://github.com/coleea/bug-report-next15-server-action\n\n### Repro steps\n\njust run command `npx react-compiler-healthcheck@latest`.\r\nthen, react-compiler-healthcheck does not check StrictMode even though Next.js is actually StrictMode.\r\n\r\nNext.js is StrictMode by default under these two conditions are met\r\n\r\n1) Next.js version 13.4+ \r\n2) App router\r\n\r\nYou can check this : https://rc.nextjs.org/docs/app/api-reference/next-config-js/reactStrictMode\r\n\r\nSo, It needs extra three steps to check whether StrictMode or Not.\r\n1) check package.json if Next.js version is over 13.4 or not.\r\n2) If so, Check if `reactStrictMode: false` is not set.\r\n3) check if project is App-Router-based.\r\n\r\nIf three conditions are met, this project is based on StrictMode even though `reactStrictMode: true` is not set on `next.config.mjs` file.\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc.0",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30049/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30049/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened",
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30041",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30041/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30041/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30041/events",
        "html_url": "https://github.com/facebook/react/issues/30041",
        "id": 2367747893,
        "node_id": "I_kwDOAJy2Ks6NIPc1",
        "number": 30041,
        "title": "[React 19] requestFormReset reports TypeError Cannot read properties of null (reading 'queue') on repeated form submissions",
        "user": {
          "login": "evisong",
          "id": 651208,
          "node_id": "MDQ6VXNlcjY1MTIwOA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/651208?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/evisong",
          "html_url": "https://github.com/evisong",
          "followers_url": "https://api.github.com/users/evisong/followers",
          "following_url": "https://api.github.com/users/evisong/following{/other_user}",
          "gists_url": "https://api.github.com/users/evisong/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/evisong/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/evisong/subscriptions",
          "organizations_url": "https://api.github.com/users/evisong/orgs",
          "repos_url": "https://api.github.com/users/evisong/repos",
          "events_url": "https://api.github.com/users/evisong/events{/privacy}",
          "received_events_url": "https://api.github.com/users/evisong/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-22T11:14:36Z",
        "updated_at": "2024-08-21T09:13:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nHi, React team,\r\n\r\nI've recently been trying the new form actions in React 19, I'm trying to reproduce a race condition with multiple form submissions in a short time. However, I occasionally get the error `TypeError\r\nCannot read properties of null (reading 'queue')` after a few consecutive submissions.\r\n\r\nAfter some investigations, I'm able to create the minimal reproducing steps below:\r\n\r\n1. Open [codesandbox.io/p/sandbox/confident-sky-8vr69k](https://codesandbox.io/p/sandbox/confident-sky-8vr69k)\r\n```jsx\r\nfunction App() {\r\n  const formAction = async () => {\r\n    await new Promise((resolve) => setTimeout(resolve, 3000));\r\n  };\r\n\r\n  return (\r\n    <form action={formAction}>\r\n      <input type=\"text\" name=\"name\" />\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n2. Input \"1\" in the text field\r\n3. Submit form\r\n4. Within 3 seconds (before the Client Action resolved), submit the form again\r\n\r\nExpected behavior:\r\nForm fields resetted.\r\n\r\nActual behavior:\r\nThe page breaks reporting a TypeError below:\r\n```\r\nTypeError: Cannot read properties of null (reading 'queue')\r\nrequestFormReset$1\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:7001:74\r\neval\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:6956:15\r\nstartTransition\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:6908:27\r\nstartHostTransition\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:6948:7\r\nlistener\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:16008:21\r\nprocessDispatchQueue\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:16066:17\r\neval\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:16665:9\r\nbatchedUpdates$1\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:2689:40\r\ndispatchEventForPluginEventSystem\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:16221:7\r\ndispatchEvent\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:20127:11\r\ndispatchDiscreteEvent\r\nhttps://gwprwq.csb.app/node_modules/react-dom/cjs/react-dom-client.development.js:20095:11\r\n```\r\n\r\nAm I missing anything? Thanks.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30041/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30041/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/30031",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/30031/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/30031/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/30031/events",
        "html_url": "https://github.com/facebook/react/issues/30031",
        "id": 2366865413,
        "node_id": "I_kwDOAJy2Ks6NE4AF",
        "number": 30031,
        "title": "Feature request: Expose additional profiling tools for library testing",
        "user": {
          "login": "phryneas",
          "id": 4282439,
          "node_id": "MDQ6VXNlcjQyODI0Mzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4282439?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/phryneas",
          "html_url": "https://github.com/phryneas",
          "followers_url": "https://api.github.com/users/phryneas/followers",
          "following_url": "https://api.github.com/users/phryneas/following{/other_user}",
          "gists_url": "https://api.github.com/users/phryneas/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/phryneas/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/phryneas/subscriptions",
          "organizations_url": "https://api.github.com/users/phryneas/orgs",
          "repos_url": "https://api.github.com/users/phryneas/repos",
          "events_url": "https://api.github.com/users/phryneas/events{/privacy}",
          "received_events_url": "https://api.github.com/users/phryneas/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 710375792,
            "node_id": "MDU6TGFiZWw3MTAzNzU3OTI=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Discussion",
            "name": "Type: Discussion",
            "color": "fef2c0",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-06-21T16:24:03Z",
        "updated_at": "2024-07-23T11:40:41Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi there!\r\nI did bring this up recently in a tangentially-related PR discussion, and @sebmarkbage pointed out that this would do better as it's own issue, so here goes :)\r\n\r\nWe found that for testing a library, the \"eventual consistency\" style of RTL-testing doesn't really work, and we need different tools.\r\n\r\nWhile the test is waiting for a consistent result, we could inadvertedly rerender 20 times with inconsistent return values in-between, and our tests wouldn't catch it.\r\nWhile that is usually fine in UIs, having that happen in a library... well, every single accidental rerender we perform trickles down to thousands of applications, and an inconsistent render would cause tons of userland bugs.\r\n\r\nSo, as a result, most of our newer tests use the <Profiler> component and every time a React render happened, we take a snapshot - depending of the test, we sometimes snapshot a DOM, sometimes we snapshot hook return values, sometimes other things.\r\n\r\nEspecially in our Suspense hooks tests, it has been proven invaluable that we also track which components actively participated in a specific render. Tracking those is a bit fiddly at the moment, but we make do. (Keep in mind, we're testing a hook library, so every test defines a bunch of components and then we test how they interact - we can just add something like useTrackRender() to each component.)\r\nThen, our tests consume all these snapshots in an async-iterator-like pattern, so we can make assumptions on every single render.\r\n\r\nExamples on how those tests look:\r\n\r\n* https://github.com/apollographql/apollo-client/blob/25ff067b36bd4ec3833a2d71f74c8aed75e2944f/src/react/hooks/__tests__/useQuery.test.tsx#L5187-L5216\r\n* https://github.com/apollographql/apollo-client/blob/6b39e3f19ba0944b38c8b2822945dc7ca847731c/src/react/hooks/__tests__/useSuspenseQuery.test.tsx#L361-L415\r\n* https://github.com/apollographql/apollo-client/blob/6b39e3f19ba0944b38c8b2822945dc7ca847731c/src/react/hooks/__tests__/useLoadableQuery.test.tsx#L307-L356\r\n\r\n \r\nJust to be clear again: we know that we're very close to \"testing implementation details\" with something like that, and I'd never recommend anyone to test an actual application like that. But for a library, this style of testing is an amazing tool - and we're fine with the drawback that we have some tests that have to test for different \"correct\" behaviour depending on the React version we're testing against.\r\n\r\nSince you are currently adding more apis to access internals like stack traces during testing, I was wondering if it would be a good time to ask for additional Profiler tooling.\r\nRight now, it is next to impossible for any tooling except for the React Devtools to get the information of a Profiler recording (there are too many internals involved, and on top of that, a lot of interprocess communication that would not be necessary in a testing scenario) - but for us, getting that data would be invaluable for that style of testing.\r\n\r\nCould we get something like a `react-dom/test` `renderWithProfilerRecording` (or even better, `renderToProfilerIterator`) API?\r\n\r\nGetting information like\r\n* how many rerenders happened\r\n* which components caused which rerender\r\n* which components participated in which rerender\r\n\r\n would be incredibly powerful to guarantee an optimal library experience.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/30031/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/30031/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29955",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29955/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29955/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29955/events",
        "html_url": "https://github.com/facebook/react/issues/29955",
        "id": 2363210464,
        "node_id": "I_kwDOAJy2Ks6M27rg",
        "number": 29955,
        "title": "[React 19] Inconsistent \"cache\" api with Async Operations in react-server",
        "user": {
          "login": "nestarz",
          "id": 5360876,
          "node_id": "MDQ6VXNlcjUzNjA4NzY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5360876?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nestarz",
          "html_url": "https://github.com/nestarz",
          "followers_url": "https://api.github.com/users/nestarz/followers",
          "following_url": "https://api.github.com/users/nestarz/following{/other_user}",
          "gists_url": "https://api.github.com/users/nestarz/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nestarz/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nestarz/subscriptions",
          "organizations_url": "https://api.github.com/users/nestarz/orgs",
          "repos_url": "https://api.github.com/users/nestarz/repos",
          "events_url": "https://api.github.com/users/nestarz/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nestarz/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-19T22:37:48Z",
        "updated_at": "2024-06-21T11:31:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "**Description:**\r\n\r\nWhen running the provided code with `node`, I encounter an issue where the cache is inconsistent depending on whether an async operation is present.\r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Run the following code with `node`:\r\n\r\n```typescript\r\nconst { renderToReadableStream } = require(\"react-server-dom-webpack/server.edge\");\r\nconst { cache, createElement } = require(\"react\");\r\n\r\nconst getId = cache(() => ({ id: Math.random() }));\r\n\r\nconst A = async () => {\r\n    await new Promise(setImmediate);\r\n    const id = getId();\r\n    console.log(id);\r\n    return null;\r\n};\r\n\r\nconst B = async () => {\r\n    const id = getId();\r\n    console.log(id);\r\n    return createElement(A, {}, null);\r\n};\r\n\r\nrenderToReadableStream(createElement(B, {}, null), null);\r\n```\r\n\r\n2. Observe the console output. The `id` values logged in `A` and `B` are different.\r\n3. Modify the code to remove the `await new Promise(setImmediate);` line from `A`:\r\n\r\n```typescript\r\nconst A = async () => {\r\n  const id = getId();\r\n  console.log(id);\r\n  return null;\r\n};\r\n```\r\n\r\n4. Run the modified code with `node` again.\r\n5. Observe the console output. The `id` values logged in `A` and `B` are now the same.\r\n\r\n**Expected Behavior:**\r\n\r\nThe `id` values should be consistent regardless of the presence of async operations during the render.\r\n\r\n**Actual Behavior:**\r\n\r\nThe `id` values are different when an async operation is present in the render method.\r\n\r\n**Reproduction Code:**\r\n\r\nYou can run the code using the following command:\r\n\r\n```\r\nnpm run start\r\n```\r\n\r\nor a codesandbox: https://codesandbox.io/p/github/nestarz/react-19-cache-issue/main?import=true\r\nand the github repo: https://github.com/nestarz/react-19-cache-issue\r\n\r\n**Additional Information:**\r\n\r\nIt seems there might be an issue with the request context propagation when async operations are involved during the render process. This leads to inconsistent behavior which could cause unpredictable bugs.\r\n\r\n**Environment:**\r\n- `node` v20.8.1\r\n```json\r\n{\r\n  \"name\": \"test\",\r\n  \"version\": \"1.0.0\",\r\n  \"description\": \"\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"start\": \"node --conditions react-server index.js\",\r\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\r\n  },\r\n  \"author\": \"\",\r\n  \"license\": \"ISC\",\r\n  \"dependencies\": {\r\n    \"react\": \"^19.0.0-rc-e684ca66ab-20240619\",\r\n    \"react-server-dom-webpack\": \"^19.0.0-rc-e684ca66ab-20240619\"\r\n  }\r\n}\r\n```\r\n\r\nIt impacts the consistency and reliability of cache in async rendering scenarios, and it's critical when used as an alternative to server context, is this normal ? Thank you!",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29955/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29955/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29953",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29953/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29953/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29953/events",
        "html_url": "https://github.com/facebook/react/issues/29953",
        "id": 2362934171,
        "node_id": "I_kwDOAJy2Ks6M14Ob",
        "number": 29953,
        "title": "Bug:  DoS vulnerability in ws dependency",
        "user": {
          "login": "Dan-C-Reed",
          "id": 92409710,
          "node_id": "U_kgDOBYIPbg",
          "avatar_url": "https://avatars.githubusercontent.com/u/92409710?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Dan-C-Reed",
          "html_url": "https://github.com/Dan-C-Reed",
          "followers_url": "https://api.github.com/users/Dan-C-Reed/followers",
          "following_url": "https://api.github.com/users/Dan-C-Reed/following{/other_user}",
          "gists_url": "https://api.github.com/users/Dan-C-Reed/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Dan-C-Reed/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Dan-C-Reed/subscriptions",
          "organizations_url": "https://api.github.com/users/Dan-C-Reed/orgs",
          "repos_url": "https://api.github.com/users/Dan-C-Reed/repos",
          "events_url": "https://api.github.com/users/Dan-C-Reed/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Dan-C-Reed/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 1775957182,
            "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
            "name": "Resolution: Stale",
            "color": "e6e6e6",
            "default": false,
            "description": "Automatically closed due to inactivity"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-19T18:26:16Z",
        "updated_at": "2024-09-17T19:04:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`react-devtools-core` has `ws` as a dependency and in release 8.17.1 `ws` have issued a fix to a DoS vulnerability ([link](https://github.com/websockets/ws/releases/tag/8.17.1)). Would it be possible to upgrade to use this version of `ws`?\r\n\r\n(Apologies if I have filed this in the incorrect place, but I was unclear on where these issues should be raised.)\r\n\r\nReact version: React DevTools 5.3.0\r\n\r\n## Steps To Reproduce\r\n\r\nLink to code example:\r\n\r\n[Link](https://github.com/websockets/ws/releases/tag/8.17.1)\r\n\r\n## The current behavior\r\nNA\r\n\r\n## The expected behavior\r\nNA",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29953/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29953/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29922",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29922/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29922/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29922/events",
        "html_url": "https://github.com/facebook/react/issues/29922",
        "id": 2359414152,
        "node_id": "I_kwDOAJy2Ks6Moc2I",
        "number": 29922,
        "title": "Bug: Hundreds render of Suspense child with hydration error",
        "user": {
          "login": "SuperOleg39",
          "id": 15360667,
          "node_id": "MDQ6VXNlcjE1MzYwNjY3",
          "avatar_url": "https://avatars.githubusercontent.com/u/15360667?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/SuperOleg39",
          "html_url": "https://github.com/SuperOleg39",
          "followers_url": "https://api.github.com/users/SuperOleg39/followers",
          "following_url": "https://api.github.com/users/SuperOleg39/following{/other_user}",
          "gists_url": "https://api.github.com/users/SuperOleg39/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/SuperOleg39/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/SuperOleg39/subscriptions",
          "organizations_url": "https://api.github.com/users/SuperOleg39/orgs",
          "repos_url": "https://api.github.com/users/SuperOleg39/repos",
          "events_url": "https://api.github.com/users/SuperOleg39/events{/privacy}",
          "received_events_url": "https://api.github.com/users/SuperOleg39/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 620368407,
            "node_id": "MDU6TGFiZWw2MjAzNjg0MDc=",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Needs%20More%20Information",
            "name": "Resolution: Needs More Information",
            "color": "fffde7",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2024-06-18T09:38:39Z",
        "updated_at": "2024-08-30T11:13:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\n## React version: 18.2\r\n\r\n## Description\r\n\r\nHello!\r\n\r\nFound a few problem cases with Suspense, one quite exotic, one easy to reproduce, and in our project I get both at the same time.\r\n\r\n### First case - **hundreds render of Suspense child with hydration error**.\r\n\r\nIf wrapped in Suspese component cause hydration error, React will render this component hungreds or event thousands times.\r\n\r\nExample:\r\n\r\n```tsx\r\nfunction MissmatchCmp() {\r\n  return <p>Missmatch Component {typeof window === 'undefined' ? 1 : 2}</p>\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Suspense>\r\n        <MissmatchCmp />\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n```\r\n\r\n<img width=\"996\" alt=\"Снимок экрана 2024-06-18 в 12 13 41\" src=\"https://github.com/facebook/react/assets/15360667/0137d5a0-7382-4751-8eb6-207c3f19e2b6\">\r\n\r\n### Second case - **Looped render of class component with `setState` in constructor wrapped in Suspense**\r\n\r\nOf course, `setState` in counstructor sounds like a bad pattern, but we have it in some big legacy class component.\r\n\r\nExample:\r\n\r\n```tsx\r\nclass CmpWithSetState extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // emulate state change after http call\r\n    setTimeout(() => {\r\n      this.setState({ foo: \"bar\" });\r\n    // with increased timout loop can be prevented\r\n    }, 25);\r\n  }\r\n\r\n  render() {\r\n    return <p>CmpWithSetState</p>\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Suspense>\r\n        <CmpWithSetState />\r\n      </Suspense>\r\n    </>\r\n  )\r\n}\r\n```\r\n\r\n<img width=\"997\" alt=\"Снимок экрана 2024-06-18 в 12 22 21\" src=\"https://github.com/facebook/react/assets/15360667/47eae0d5-5238-4443-a9e5-26c92d9c3b31\">\r\n\r\n### Bingo case - **Both of previous examples in same component are guaranteed to cause a loop**\r\n\r\n<img width=\"993\" alt=\"Снимок экрана 2024-06-18 в 12 28 16\" src=\"https://github.com/facebook/react/assets/15360667/492062d5-9e94-462e-8e7d-f72a853362da\">\r\n\r\n[profiling-data.18.06.2024.12-28-19.json.zip](https://github.com/user-attachments/files/15883664/profiling-data.18.06.2024.12-28-19.json.zip)\r\n\r\n## Steps To Reproduce\r\n\r\n1. Clone repo `https://github.com/SuperOleg39/react-ssr-perf-test`\r\n2. Switch to branch `react-bug-suspense-child`\r\n3. Run application build and server - `cd react-18-stream && yarn && yarn start` (use Node.js 16)\r\n4. Open application page at `http://localhost:4000`\r\n\r\nLink to code example:\r\n\r\nhttps://github.com/SuperOleg39/react-ssr-perf-test/pull/1\r\n\r\n## The current behavior\r\n\r\nComponents which are not really suspended, rendered multiple times, like React wait for promise to resolve.\r\n\r\nAlso looks like React treats this components both as one when check if they are suspended or not.\r\n\r\n## The expected behavior\r\n\r\nExpect the same behaviour as without `Suspense` boundary.\r\n\r\nWe use `Suspense` for our components mostly to prevent server rendering failure if one of this components failed.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29922/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29922/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29915",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29915/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29915/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29915/events",
        "html_url": "https://github.com/facebook/react/issues/29915",
        "id": 2355876957,
        "node_id": "I_kwDOAJy2Ks6Ma9Rd",
        "number": 29915,
        "title": "[React 19] useEffect does not re-fire on hot reload with React 19 and vite",
        "user": {
          "login": "gkiely",
          "id": 1948935,
          "node_id": "MDQ6VXNlcjE5NDg5MzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1948935?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gkiely",
          "html_url": "https://github.com/gkiely",
          "followers_url": "https://api.github.com/users/gkiely/followers",
          "following_url": "https://api.github.com/users/gkiely/following{/other_user}",
          "gists_url": "https://api.github.com/users/gkiely/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gkiely/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gkiely/subscriptions",
          "organizations_url": "https://api.github.com/users/gkiely/orgs",
          "repos_url": "https://api.github.com/users/gkiely/repos",
          "events_url": "https://api.github.com/users/gkiely/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gkiely/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-16T17:05:39Z",
        "updated_at": "2024-07-22T14:35:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In prior versions of react, saving a file will trigger the components useEffect hooks to run. This does not work for react 19.\r\nThis applies to both [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) and [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react)\r\n\r\nRepo: https://github.com/gkiely/swc-issue\r\n\r\nSteps to reproduce:\r\n- npm i\r\n- npm run dev\r\n- open repo and press save in App.tsx\r\n- console.log will not fire after pressing save\r\n- npm i react@latest react-dom@latest  (installs latest react 18)\r\n- npm run dev\r\n- press save in App.tsx\r\n- console.log will fire\r\n\r\nVideo reproduction:\r\nhttps://www.loom.com/share/b493602e3f7244d2948c5bb871531881?sid=c9bdec15-5b87-4375-a659-6c63804cb032\r\n\r\n\r\nNotes:\r\nI previously opened a ticket here but it is perhaps an issue with react 19: https://github.com/vitejs/vite-plugin-react/issues/335 ",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29915/reactions",
          "total_count": 3,
          "+1": 3,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29915/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29914",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29914/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29914/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29914/events",
        "html_url": "https://github.com/facebook/react/issues/29914",
        "id": 2355864519,
        "node_id": "I_kwDOAJy2Ks6Ma6PH",
        "number": 29914,
        "title": "Bug: Expected Static Flag Was Missing ",
        "user": {
          "login": "alexkahndev",
          "id": 140863288,
          "node_id": "U_kgDOCGVnOA",
          "avatar_url": "https://avatars.githubusercontent.com/u/140863288?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/alexkahndev",
          "html_url": "https://github.com/alexkahndev",
          "followers_url": "https://api.github.com/users/alexkahndev/followers",
          "following_url": "https://api.github.com/users/alexkahndev/following{/other_user}",
          "gists_url": "https://api.github.com/users/alexkahndev/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/alexkahndev/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/alexkahndev/subscriptions",
          "organizations_url": "https://api.github.com/users/alexkahndev/orgs",
          "repos_url": "https://api.github.com/users/alexkahndev/repos",
          "events_url": "https://api.github.com/users/alexkahndev/events{/privacy}",
          "received_events_url": "https://api.github.com/users/alexkahndev/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 1775957182,
            "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
            "name": "Resolution: Stale",
            "color": "e6e6e6",
            "default": false,
            "description": "Automatically closed due to inactivity"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-16T16:32:11Z",
        "updated_at": "2024-09-14T17:05:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a Server Side Rendered React app I'm using Bun to run. Something about the state of my form is causing a static flag was missing error. I dont notice any problems in my application as of now. I am writing this since it says please notify the React team in the error log\r\n\r\n```\r\nGamePageIndex.1718554801619.js:227  Warning: Internal React error: Expected static flag was missing. Please notify the React team.\r\n    at HP (http://localhost:3000/indexes/GamePageIndex.1718554801619.js:349:29726)\r\n    at div\r\n    at CP (http://localhost:3000/indexes/GamePageIndex.1718554801619.js:349:31993)\r\n    at div\r\n    at main\r\n    at body\r\n    at html\r\n    at LP (http://localhost:3000/indexes/GamePageIndex.1718554801619.js:349:32856)\r\n```\r\n\r\nand in the index file the error points to this (bundled) code \r\n\r\n```\r\nconsole.error = function() {\r\n    const c = [...arguments].join(\"\");\r\n    if ((c == null ? void 0 : c.startsWith(\"Warning:\")) && c.includes(\"useContext\")) {\r\n        console.error = lI;\r\n        return\r\n    }\r\n    return lI.apply(this, arguments) // Error on this line\r\n}\r\n;\r\n```\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Build a TSX component that contains the html tag as the outermost tag and then in the body create a form tag that uses react useState to control changes\r\n2. Server Side render these pages using Bun and Elysia\r\n3. I dont know how to reproduce the bug further than this it just appeared in the midst of me coding with no real information on it hence i think it might just be a regression\r\n\r\n\r\nLink to code example:\r\n\r\nI can not provide an example at this time only reporting because it says to in the error log so i figured you would like to know\r\n\r\n## The current behavior\r\n\r\n\r\n## The expected behavior\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29914/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29914/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29908",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29908/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29908/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29908/events",
        "html_url": "https://github.com/facebook/react/issues/29908",
        "id": 2355140554,
        "node_id": "I_kwDOAJy2Ks6MYJfK",
        "number": 29908,
        "title": "Bug: \"Should not already be working\" Error Provides No Information (Not Even the Name Indicates What's Wrong)",
        "user": {
          "login": "jwalkerinterpres",
          "id": 152227747,
          "node_id": "U_kgDOCRLPow",
          "avatar_url": "https://avatars.githubusercontent.com/u/152227747?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jwalkerinterpres",
          "html_url": "https://github.com/jwalkerinterpres",
          "followers_url": "https://api.github.com/users/jwalkerinterpres/followers",
          "following_url": "https://api.github.com/users/jwalkerinterpres/following{/other_user}",
          "gists_url": "https://api.github.com/users/jwalkerinterpres/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jwalkerinterpres/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jwalkerinterpres/subscriptions",
          "organizations_url": "https://api.github.com/users/jwalkerinterpres/orgs",
          "repos_url": "https://api.github.com/users/jwalkerinterpres/repos",
          "events_url": "https://api.github.com/users/jwalkerinterpres/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jwalkerinterpres/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 1775957182,
            "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
            "name": "Resolution: Stale",
            "color": "e6e6e6",
            "default": false,
            "description": "Automatically closed due to inactivity"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-15T18:55:25Z",
        "updated_at": "2024-09-13T19:04:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version:\r\n18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\n1. Write a test in React Testing Library\r\n2. Run it\r\n3. Get an error \"Should not already be working\" when testing library clicks on something (even a button with no `onClick`)\r\n4. Have no clue what's going on or how to resolve\r\n\r\n## Link to code example:\r\n\r\nUnfortunately the code involves like ten component files, a test file, some test helper files, etc. which I can't include here.  Really, my code example isn't important to the ticket, but for reference the key bit is:\r\n\r\n    import userEvent, { UserEvent } from '@testing-library/user-event';\r\n    // ... test stuff ...\r\n    const user = userEvent.setup()\r\n    const applyButton = getByText('Apply');\r\n    // Log applyButton, confirm we did find an element\r\n    user.click(applyButton)\r\n\r\nWhich results in:\r\n\r\n> ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\r\n> Error: Should not already be working.\r\n>  ❯ performConcurrentWorkOnRoot node_modules/react-dom/cjs/react-dom.development.js:25742:11\r\n>  ❯ flushActQueue node_modules/react/cjs/react.development.js:2667:24\r\n>  ❯ act node_modules/react/cjs/react.development.js:2582:11\r\n>  ❯ node_modules/@testing-library/react/dist/act-compat.js:47:25\r\n>  ❯ renderRoot node_modules/@testing-library/react/dist/pure.js:180:26\r\n>  ❯ render node_modules/@testing-library/react/dist/pure.js:271:10\r\n>  ❯ renderHook node_modules/@testing-library/react/dist/pure.js:318:7\r\n>  ❯ Proxy.default src/myFile.test.tsx:7:41\r\n\r\nbecause of some unknown code being tested (if I knew what code I'd happily paste it here ... but then I wouldn't need to file this ticket).\r\n\r\nIn general , when React tells you something is wrong, it always tell you **_what_** is wrong, to the best of its ability.  With many React errors you not only get a helpful error message, but there's even a link to a webpage with further info :)\r\n\r\nWith this error, the message tells you nothing useful, and even Googling tells you almost nothing (it has something to do with blocking actions inside `useEffect`?) \r\n\r\nReact should (more politely) say:\r\n\r\n>Hey dummy, you did X: that's wrong.  Let me make sure you understand why X is wrong, and also how you can fix it\"\r\n\r\nA \"react error documentation link\" would certainly be nice, but even just an improved error message would be helpful.\r\n\r\n## The current behavior\r\n\r\n> Error: Should not already be working.\r\n\r\nWith an unhelpful stacktrace that doesn't mention any of the files actually involved:\r\n\r\n ❯ performConcurrentWorkOnRoot node_modules/react-dom/cjs/react-dom.development.js:25742:11\r\n ❯ flushActQueue node_modules/react/cjs/react.development.js:2667:24\r\n ❯ act node_modules/react/cjs/react.development.js:2582:11\r\n ❯ node_modules/@testing-library/react/dist/act-compat.js:47:25\r\n ❯ renderRoot node_modules/@testing-library/react/dist/pure.js:180:26\r\n ❯ render node_modules/@testing-library/react/dist/pure.js:271:10\r\n ❯ renderHook node_modules/@testing-library/react/dist/pure.js:318:7\r\n\r\n## The expected behavior\r\n\r\nThis is an example; if I actually understood what this error meant, I'd write a PR with the new message, instead of this ticket.\r\n\r\n> Error: You attempted to call a blocking action (eg. window.alert) inside a useEffect callback.  You must take this action out of the normal flow, for instance by putting it inside a setTimeout callback.\r\n\r\n(And then, ideally, you'd get a stack trace that takes you to the `useEffect` that caused this problem.)",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29908/reactions",
          "total_count": 3,
          "+1": 3,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29908/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29907",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29907/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29907/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29907/events",
        "html_url": "https://github.com/facebook/react/issues/29907",
        "id": 2354938570,
        "node_id": "I_kwDOAJy2Ks6MXYLK",
        "number": 29907,
        "title": "[Compiler]: Type inference information does not propagate past phi nodes",
        "user": {
          "login": "meetesh06",
          "id": 12695814,
          "node_id": "MDQ6VXNlcjEyNjk1ODE0",
          "avatar_url": "https://avatars.githubusercontent.com/u/12695814?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/meetesh06",
          "html_url": "https://github.com/meetesh06",
          "followers_url": "https://api.github.com/users/meetesh06/followers",
          "following_url": "https://api.github.com/users/meetesh06/following{/other_user}",
          "gists_url": "https://api.github.com/users/meetesh06/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/meetesh06/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/meetesh06/subscriptions",
          "organizations_url": "https://api.github.com/users/meetesh06/orgs",
          "repos_url": "https://api.github.com/users/meetesh06/repos",
          "events_url": "https://api.github.com/users/meetesh06/events{/privacy}",
          "received_events_url": "https://api.github.com/users/meetesh06/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 121709921,
            "node_id": "MDU6TGFiZWwxMjE3MDk5MjE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Feature%20Request",
            "name": "Type: Feature Request",
            "color": "c7def8",
            "default": false,
            "description": null
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-06-15T15:27:25Z",
        "updated_at": "2024-06-15T18:27:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEAwhALYAOhCmOAFMJQIwC+AlEcADrFEA2CHEQDa-CAEMAJnkwBzADREwQgDKSZ8gLpEAvESgqAyjgk4E9NBP4r2vIgKGiIOABYIYSlTgDybjzr6hggmZhZWNgh2mPaOwpDkCABqEjAA3LF4aET0LJw8fA4Jyal6ymoasnIZfKxECJFcsUUUJTBl3n7u6bGsvLGCwjAIYB2tKT18wziwxMNgNX2YIKxAA\n\n### Repro steps\n\nThe following output is obtained after the InferTypes pass.\r\n\r\n```javascript\r\n...\r\nbb1 (block):\r\n  predecessor blocks: bb2 bb3\r\n  someVar$51:TFunction<BuiltInSetState>: phi(bb2: someVar$46, bb3: someVar$49)\r\n  [19] <unknown> $52 = LoadLocal <unknown> someVar$51\r\n  [20] <unknown> $54 = StoreLocal Let <unknown> res$53 = <unknown> $52\r\n  [21] <unknown> $55 = LoadLocal <unknown> res$53\r\n  [22] Return <unknown> $55\r\n```\r\n\r\nI would expect the type (`TFunction<BuiltInSetState>`) of `someVar$51` phi node to propagate at instruction 19 but it does not happen.\r\n\r\nI was able to figure out why it happens. During SSA generation the phi node's identifier has a `typeId` which is different than the identifier at instruction 19.\r\n\r\nI tried to fix this by adding the following patch (to be run right after enterSSA pass) which just makes sure in such cases we always use the same `typeId`: \r\n\r\n```javascript\r\n  // Ensure PHI node types are the same as their uses\r\n  let ssaTypeRemap: Map<IdentifierId, Type> = new Map()\r\n  for (const [_, block] of func.body.blocks) {\r\n    block.phis.forEach(p => {\r\n      ssaTypeRemap.set(p.id.id, p.type);\r\n    })\r\n  }\r\n  for (const [_, block] of func.body.blocks) {\r\n    for (const instr of block.instructions) {\r\n      mapInstructionOperands(instr, (place) => {\r\n        if (ssaTypeRemap.has(place.identifier.id)) {\r\n          place.identifier.type = ssaTypeRemap.get(place.identifier.id)!;\r\n        }\r\n        return place;\r\n      });\r\n    }\r\n    mapTerminalOperands(block.terminal, (place) => {\r\n      if (ssaTypeRemap.has(place.identifier.id)) {\r\n        place.identifier.type = ssaTypeRemap.get(place.identifier.id)!;\r\n      }\r\n      return place;\r\n    });\r\n  }\r\n```\r\nWith this patch however 6 testcases fail:\r\n\r\n```bash\r\nFailures:\r\n\r\nFAIL: phi-type-inference-property-store\r\n >> Unexpected error during test: \r\nExpected fixture `phi-type-inference-property-store` to succeed but it failed with error:\r\n\r\nInvariant: Invalid mutable range for scope. Scope @3 has range [0:18] but the valid range is [1:22]\r\nFAIL: phi-type-inference-array-push\r\n >> Unexpected error during test: \r\nExpected fixture `phi-type-inference-array-push` to succeed but it failed with error:\r\n\r\nInvariant: Invalid mutable range for scope. Scope @3 has range [0:19] but the valid range is [1:23]\r\nFAIL: obj-literal-mutated-after-if-else\r\n >> Unexpected error during test: \r\nExpected fixture `obj-literal-mutated-after-if-else` to succeed but it failed with error:\r\n\r\nInvariant: Invalid mutable range for scope. Scope @2 has range [0:16] but the valid range is [1:18]\r\nFAIL: mutable-lifetime-loops\r\n >> Unexpected error during test: \r\nExpected fixture `mutable-lifetime-loops` to succeed but it failed with error:\r\n\r\n/mutable-lifetime-loops.ts: cycle detected\r\nFAIL: for-in-statement-continue\r\n >> Unexpected error during test: \r\nExpected fixture `for-in-statement-continue` to succeed but it failed with error:\r\n\r\n/for-in-statement-continue.ts: cycle detected\r\nFAIL: alias-while\r\n >> Unexpected error during test: \r\nExpected fixture `alias-while` to succeed but it failed with error:\r\n\r\n/alias-while.ts: cycle detected\r\nFAIL: meta-isms/repro-cx-assigned-to-temporary\r\n```\r\n1. The mutable range inference pass gets a weird range (I am not sure how starting location can be zero, I guessed that the mutable range must start at atleast instruction idx + 1).\r\n\r\n2. inference fails with a cycle detected.\r\n\r\nI would appreciate some insights, thank you.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29907/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29907/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29905",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29905/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29905/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29905/events",
        "html_url": "https://github.com/facebook/react/issues/29905",
        "id": 2354653353,
        "node_id": "I_kwDOAJy2Ks6MWSip",
        "number": 29905,
        "title": "[React 19] When multiple components call `use` inside a `Suspense`, it crosses the boundary of `Suspense` and stops rendering of other `Suspense` as well",
        "user": {
          "login": "yatsuna827",
          "id": 45278736,
          "node_id": "MDQ6VXNlcjQ1Mjc4NzM2",
          "avatar_url": "https://avatars.githubusercontent.com/u/45278736?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/yatsuna827",
          "html_url": "https://github.com/yatsuna827",
          "followers_url": "https://api.github.com/users/yatsuna827/followers",
          "following_url": "https://api.github.com/users/yatsuna827/following{/other_user}",
          "gists_url": "https://api.github.com/users/yatsuna827/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/yatsuna827/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/yatsuna827/subscriptions",
          "organizations_url": "https://api.github.com/users/yatsuna827/orgs",
          "repos_url": "https://api.github.com/users/yatsuna827/repos",
          "events_url": "https://api.github.com/users/yatsuna827/events{/privacy}",
          "received_events_url": "https://api.github.com/users/yatsuna827/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-15T08:28:44Z",
        "updated_at": "2024-07-22T14:37:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\n```tsx\r\nimport { Suspense, use, useState } from \"react\";\r\n\r\nconst f = async (wait) => {\r\n  await new Promise((resolve) => setTimeout(resolve, wait));\r\n  return new Date();\r\n};\r\n\r\nconst App = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Expected />\r\n      <Unexpected />\r\n    </>\r\n  );\r\n};\r\n\r\nconst Expected = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div>👍</div>\r\n      <button onClick={() => setOpen(!open)}>{open ? \"close\" : \"open\"}</button>\r\n      {open && <List wait={[1000, 2000, 3000, 4000, 5000]} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Unexpected = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div>🤔</div>\r\n      <button onClick={() => setOpen(!open)}>{open ? \"close\" : \"open\"}</button>\r\n      {open && <List wait={[1000, 2000, 3000, 3000, 5000]} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst List = ({ wait }) => {\r\n  const [t1] = useState(f(wait[0]));\r\n  const [t2] = useState(f(wait[1]));\r\n  const [t3] = useState(f(wait[2]));\r\n  const [t4] = useState(f(wait[3]));\r\n  const [t5] = useState(f(wait[4]));\r\n\r\n  return (\r\n    <>\r\n      <Suspense fallback={<div>Loading No.1 ...</div>}>\r\n        <Item time={t1} />\r\n      </Suspense>\r\n      <Suspense fallback={<div>Loading No.2 ...</div>}>\r\n        <Item time={t2} />\r\n      </Suspense>\r\n      <Suspense fallback={<div>Loading No.3 ...</div>}>\r\n        <Item time={t3} />\r\n      </Suspense>\r\n      <Suspense fallback={<div>Loading No.4 & No.5 ...</div>}>\r\n        <Item time={t4} />\r\n        <Item time={t5} />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Item = ({ time }) => {\r\n  const t = use(time);\r\n\r\n  console.log(\"render item\");\r\n\r\n  return <div>{t.toISOString()}</div>;\r\n};\r\n\r\nexport default App;\r\n\r\n```\r\nhttps://codesandbox.io/p/sandbox/use-and-suspense-hlcjk6\r\n\r\nThe two components `<Expected>`👍 and `<Unexpected>`🤔 are expected to behave in the same way. That is, No.1 to No.3 should be displayed one second apart, and No.4 and No.5 should be displayed two seconds after No.3 is displayed.\r\n\r\nThere is a difference in the waiting time for No.4 between `<Expected>` and `<Unexpected>`, being 4 seconds or 3 seconds, but since they are wrapped together in `<Suspense>` with No.5, they should be throttled and displayed after 5 seconds.\r\n\r\nHowever, in `<Unexpected>`, not only that, but No.3, which should belong to a different `<Suspense>` scope, is also displayed after 5 seconds. This seems to break the behavior of `<Suspense>`.\r\n\r\n---\r\n\r\nPlease note that this is a different issue from the one being discussed in https://github.com/facebook/react/pull/26380. I am issuing a Promise outside of Suspense and passing it as props.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29905/reactions",
          "total_count": 5,
          "+1": 5,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29905/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29902",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29902/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29902/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29902/events",
        "html_url": "https://github.com/facebook/react/issues/29902",
        "id": 2354185535,
        "node_id": "I_kwDOAJy2Ks6MUgU_",
        "number": 29902,
        "title": "[React 19] Using spread with binary conditional in JSX causes error in dev env for case of using legacy JSX transform",
        "user": {
          "login": "undeletable",
          "id": 6094468,
          "node_id": "MDQ6VXNlcjYwOTQ0Njg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6094468?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/undeletable",
          "html_url": "https://github.com/undeletable",
          "followers_url": "https://api.github.com/users/undeletable/followers",
          "following_url": "https://api.github.com/users/undeletable/following{/other_user}",
          "gists_url": "https://api.github.com/users/undeletable/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/undeletable/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/undeletable/subscriptions",
          "organizations_url": "https://api.github.com/users/undeletable/orgs",
          "repos_url": "https://api.github.com/users/undeletable/repos",
          "events_url": "https://api.github.com/users/undeletable/events{/privacy}",
          "received_events_url": "https://api.github.com/users/undeletable/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2024-06-14T22:22:54Z",
        "updated_at": "2024-09-16T10:05:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\n### Prerequisites\r\n- React app which compiles with legacy JSX transform\r\n- Add a JSX element with spread operator with binary conditional, e.g.:\r\n```\r\n      <button\r\n        {...(isCountButtonActive && {\r\n          onClick: () => setCount(currentCount => currentCount + 1)\r\n        })}\r\n      >\r\n        Increment count\r\n      </button>\r\n```\r\n- Run app in dev mode\r\n\r\n### Result\r\n\r\nError is thrown when conditional is evaluated to `false`:\r\n```\r\nUncaught TypeError: Cannot use 'in' operator to search for '__self' in false\r\n    at exports.createElement (chunk-Y64RAOT6.js?v=f4a3421f:775:86)\r\n    at App (App.jsx:3:13)\r\n    at callComponentInDEV (react-dom_client.js?v=f4a3421f:785:18)\r\n    at renderWithHooks (react-dom_client.js?v=f4a3421f:3510:24)\r\n    at updateFunctionComponent (react-dom_client.js?v=f4a3421f:4521:21)\r\n    at beginWork (react-dom_client.js?v=f4a3421f:5096:20)\r\n    at runWithFiberInDEV (react-dom_client.js?v=f4a3421f:864:18)\r\n    at performUnitOfWork (react-dom_client.js?v=f4a3421f:7688:83)\r\n    at workLoopSync (react-dom_client.js?v=f4a3421f:7580:43)\r\n    at renderRootSync (react-dom_client.js?v=f4a3421f:7561:13)\r\n```\r\nCode fragment where it's thrown:\r\n```\r\n        if (null != config) for (propName in didWarnAboutOldJSXRuntime || !(\"__self\" in config) || \"key\" in config || (didWarnAboutOldJSXRuntime = true, warn(\"Your app (or one of its dependencies) is using an outdated JSX transform. Update to the modern JSX transform for faster performance: https://react.dev/link/new-jsx-transform\")), hasValidRef(config), hasValidKey(config) && (checkKeyStringCoercion(config.key), typeString = \"\" + config.key), config) hasOwnProperty.call(config, propName) && \"key\" !== propName && \"__self\" !== propName && \"__source\" !== propName && (i[propName] = config[propName]);\r\n```\r\n\r\n### Reproduction\r\n\r\nhttps://github.com/undeletable/jsx-spread-with-react-19-rc\r\nClick 'Toggle count button state' to reproduce",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29902/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29902/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29900",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29900/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29900/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29900/events",
        "html_url": "https://github.com/facebook/react/issues/29900",
        "id": 2353897575,
        "node_id": "I_kwDOAJy2Ks6MTaBn",
        "number": 29900,
        "title": "[Compiler Bug]: Constants or properties named `use*` trigger compiler errors re: hooks",
        "user": {
          "login": "aaronmw",
          "id": 1236267,
          "node_id": "MDQ6VXNlcjEyMzYyNjc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1236267?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/aaronmw",
          "html_url": "https://github.com/aaronmw",
          "followers_url": "https://api.github.com/users/aaronmw/followers",
          "following_url": "https://api.github.com/users/aaronmw/following{/other_user}",
          "gists_url": "https://api.github.com/users/aaronmw/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/aaronmw/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/aaronmw/subscriptions",
          "organizations_url": "https://api.github.com/users/aaronmw/orgs",
          "repos_url": "https://api.github.com/users/aaronmw/repos",
          "events_url": "https://api.github.com/users/aaronmw/events{/privacy}",
          "received_events_url": "https://api.github.com/users/aaronmw/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-14T18:39:33Z",
        "updated_at": "2024-06-16T04:10:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhHCA7MAXABFMBAYQENCxcBeXAbQB0NdcByAcQgEsMBzXbCPgAsEuHBBgJmAGgZNmABQ5wA1l15QADkJGqAJmGmyWAdRLY4gtbgAqANWYMAugwbosebJbABJMAGUSADMEACEoPGpgIwJiMgQwZFojOQAjcKEOCkzcDAhsB0ZcZwwAXxcMBAAPDXE8XQRAkigAGzxAqAw4bA5MXABZAE8AQQ0NAAoASlwowolsWEYAHgA+ZOmY0nIAOgBbEnGNuKpl3DG1pkXdDgA3XGUEAcpgQ8IS1cKmT-XCTYQyj8+iwA9Fdru8vhMJv81sBPJlfAFgmFsFsXvFdvsxmjjqdzrhLjc7g8nmi3nimM8fnF-l8LiCbuDPpCafige9-iASkA\r\n\r\n### Repro steps\r\n\r\nTry to reference an object or property with a name starting with `use*`. Seems it could at least narrow its scope to functions named `use*`?\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n^19.0.0-rc-f994737d14-20240522",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29900/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29900/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29898",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29898/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29898/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29898/events",
        "html_url": "https://github.com/facebook/react/issues/29898",
        "id": 2353373256,
        "node_id": "I_kwDOAJy2Ks6MRaBI",
        "number": 29898,
        "title": "[React 19] Disabling prerendering siblings of suspended components breaking common pattern",
        "user": {
          "login": "ehellman",
          "id": 586152,
          "node_id": "MDQ6VXNlcjU4NjE1Mg==",
          "avatar_url": "https://avatars.githubusercontent.com/u/586152?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ehellman",
          "html_url": "https://github.com/ehellman",
          "followers_url": "https://api.github.com/users/ehellman/followers",
          "following_url": "https://api.github.com/users/ehellman/following{/other_user}",
          "gists_url": "https://api.github.com/users/ehellman/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ehellman/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ehellman/subscriptions",
          "organizations_url": "https://api.github.com/users/ehellman/orgs",
          "repos_url": "https://api.github.com/users/ehellman/repos",
          "events_url": "https://api.github.com/users/ehellman/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ehellman/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2024-06-14T13:19:59Z",
        "updated_at": "2024-08-25T13:42:34Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\nI'm creating this issue to continue the discussion that spawned in the already merged PR (#26380)\r\n\r\nSeveral community members have raised concerns about this change and it has gained traction on both X and Reddit as well, I think it is important to prioritize this discussion as it can be a dealbreaker whether or not a project will upgrade to React 19 at all of this is not addressed.\r\n\r\n### The problem\r\n\r\nThis change causes sibling components of suspended components to not prerender, meaning that it will cause performance problems when using a very common pattern where you do data fetching near to where the data is actually used. It makes requests that would before be performed in parallel due to prerendering triggering them, into waterfall requests instead. Here's screenshots from @matiasngf and part of their description from [the pull request comment](https://github.com/facebook/react/pull/26380#issuecomment-2166178673):\r\n\r\n> First, we recorded the current approach; it takes about 2.5 seconds to load the .glb models:\r\n\r\n<img width=\"479\" alt=\"image\" src=\"https://github.com/facebook/react/assets/586152/b1caa7e0-5938-4ad5-9751-ee248776ab80\">\r\n\r\n> Then, we installed the canary version of react; Same .glb models, takes about 3.5 seconds to load:\r\n\r\n<img width=\"483\" alt=\"image\" src=\"https://github.com/facebook/react/assets/586152/0e5083f8-fdd3-46d9-92ce-851dc6b4b985\">\r\n\r\nI included the above example in the issue body because it is a great illustration of the problem. Their comment also include links to both their current site that doesn't have the problem and also a version of their site with an updated React with the problem present.\r\n\r\n### Discussions around potential fixes\r\n\r\nThere are several ways to approach this, but I think @matiasperz were [spot on when suggesting that this entire change be opt-in](https://github.com/facebook/react/pull/26380#issuecomment-2166342228). The changed logic seems like the part that should be opt-in, and the default behavior should be the way things worked before the change.\r\n\r\nSomething along the lines of:\r\n`strategy={\"parallel\" | \"sequential\"}` where it is clear how suspended components will behave.\r\n\r\n### Conclusion\r\n\r\nWhile not exactly a breaking change in the literal sense, I would personally consider this a breaking change and worse, one that it is not possible to easily migrate away from without changing the entire data fetching pattern for your application. The other option being just eating the performance loss but no one is realistically going to do that.\r\n\r\nMoving data fetching up is not a good recommendation, since it goes against an extremely common and well-liked pattern in the community and the great thing about React has always been that we can choose our own patterns and develop amazing applications in several different ways. But changes like this, if you cannot opt-out of them (or in this case opt-in, because considering the effects it will have the sensible default should be the previous behavior) would break this very fundamental value of React.\r\n\r\nLet's please continue to discuss this to find a good path forward.",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29898/reactions",
          "total_count": 314,
          "+1": 219,
          "-1": 0,
          "laugh": 0,
          "hooray": 4,
          "confused": 0,
          "heart": 61,
          "rocket": 22,
          "eyes": 8
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29898/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29895",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29895/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29895/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29895/events",
        "html_url": "https://github.com/facebook/react/issues/29895",
        "id": 2352937421,
        "node_id": "I_kwDOAJy2Ks6MPvnN",
        "number": 29895,
        "title": "[DevTools Bug]: Open in editor , Path not found error ",
        "user": {
          "login": "a-c-sreedhar-reddy",
          "id": 16081083,
          "node_id": "MDQ6VXNlcjE2MDgxMDgz",
          "avatar_url": "https://avatars.githubusercontent.com/u/16081083?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/a-c-sreedhar-reddy",
          "html_url": "https://github.com/a-c-sreedhar-reddy",
          "followers_url": "https://api.github.com/users/a-c-sreedhar-reddy/followers",
          "following_url": "https://api.github.com/users/a-c-sreedhar-reddy/following{/other_user}",
          "gists_url": "https://api.github.com/users/a-c-sreedhar-reddy/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/a-c-sreedhar-reddy/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/a-c-sreedhar-reddy/subscriptions",
          "organizations_url": "https://api.github.com/users/a-c-sreedhar-reddy/orgs",
          "repos_url": "https://api.github.com/users/a-c-sreedhar-reddy/repos",
          "events_url": "https://api.github.com/users/a-c-sreedhar-reddy/events{/privacy}",
          "received_events_url": "https://api.github.com/users/a-c-sreedhar-reddy/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-14T09:22:54Z",
        "updated_at": "2024-06-18T12:47:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nI am using a local app\n\n### Repro steps\n\n1. Open devtools\r\n2. Select a component\r\n3. Click open in editor\r\n4. \r\n```\r\nThe path '/data:application/json;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6IkFBa0VNLG1CQVFRLGNBUlI7MkJBbEVOO0FBQWUsTUFBUSxjQUFpQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUN4QyxTQUFTQSxZQUFZO0FBRXJCLFNBQVNDLG1CQUFtQjtBQUU1QixTQUFTQyxPQUFPQyxNQUFNQyxtQkFBbUI7QUFFekMsU0FBU0Msa0JBQWtCQyxzQkFBc0I7QUFDakQsU0FBU0Qsa0JBQWtCRSxlQUFlO0FBQzFDLFNBQVNGLGtCQUFrQkcscUJBQXFCO0FBVWhELE1BQU1DLHNCQUFzQkMsT0FBT1AsTUFBTTtBQUFBLEVBQ3ZDUSxRQUFRO0FBQUEsRUFFUkMsU0FBUztBQUFBLEVBQ1RDLFlBQVk7QUFBQSxFQUVaQyxRQUFRO0FBQUEsRUFFUkMsVUFBVTtBQUFBLElBQ1JDLE9BQU87QUFBQSxNQUNMQyxTQUFTO0FBQUEsUUFDUEgsUUFBUTtBQUFBLE1BQ1Y7QUFBQSxNQUNBSSxVQUFVO0FBQUEsUUFDUkosUUFBUTtBQUFBLE1BQ1Y7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUNGLENBQUM7QUFBRUssS0FsQkdWO0FBb0JDLGFBQU1XLGFBQXFDQyxHQUFHckI7QUFBQUEsRUFBSXNCLE1BQUFEO0FBQUFBLElBQ3ZELENBQUMsRUFBRUUsTUFBTUwsVUFBVU0sY0FBY0MsWUFBNkIsTUFBTTtBQUFBSixTQUFBO0FBQ2xFLFlBQU1LLGtCQUFrQkEsTUFBTTtBQUM1QixZQUFJUixVQUFVO0FBQ1o7QUFBQSxRQUNGO0FBRUFPLHNCQUFjO0FBQUEsTUFDaEI7QUFFQSxZQUFNRSxzQkFBc0JBLENBQzFCQyxVQUNHO0FBQ0hBLGNBQU1DLGVBQWU7QUFDckIsWUFBSVgsVUFBVTtBQUNaO0FBQUEsUUFDRjtBQUNBLFlBQUlVLE1BQU1FLFdBQVdGLE1BQU1HLFdBQVcsR0FBRztBQUN2Q0MsaUJBQU9DLEtBQUssS0FBSyxRQUFRO0FBQUEsUUFDM0I7QUFBQSxNQUNGO0FBRUEsWUFBTUMsV0FBV2pDLFlBQVk7QUFFN0IsWUFBTWtDLGtCQUFrQkgsT0FBT0ksY0FBYztBQUU3QyxhQUNFLG1DQUNFO0FBQUEsUUFBQztBQUFBO0FBQUEsVUFDQyxTQUFTVjtBQUFBQSxVQUNULGFBQWFDO0FBQUFBLFVBQ2IsT0FBT1QsV0FBVyxhQUFhO0FBQUEsVUFFL0IsaUNBQUMsZUFDRU0seUJBQ0MsdUJBQUMsV0FBUSxPQUFNLFFBQU8sUUFBTyxVQUE3QjtBQUFBO0FBQUE7QUFBQTtBQUFBLGlCQUFtQyxJQUNqQ1UsV0FDRix1QkFBQyxpQkFBYyxRQUFPLFVBQXRCO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBQTRCLElBQzFCQyxrQkFDRjtBQUFBLFlBQUM7QUFBQTtBQUFBLGNBQ0MsS0FBSztBQUFBLGdCQUNIdkIsU0FBUztBQUFBLGdCQUNUeUIsZ0JBQWdCO0FBQUEsZ0JBQ2hCeEIsWUFBWTtBQUFBLGdCQUNaeUIsS0FBSztBQUFBLGNBQ1A7QUFBQSxjQUVBO0FBQUEsdUNBQUMsV0FBUSxRQUFRLElBQUksT0FBTyxNQUE1QjtBQUFBO0FBQUE7QUFBQTtBQUFBLHVCQUErQjtBQUFBLGdCQUMvQjtBQUFBLGtCQUFDO0FBQUE7QUFBQSxvQkFDQyxLQUFLO0FBQUEsc0JBQ0hDLE9BQU87QUFBQSxzQkFDUEMsWUFBWTtBQUFBLHNCQUNaQyxVQUFVO0FBQUEsc0JBQ1ZDLFlBQVk7QUFBQSxzQkFDWkMsWUFBWTtBQUFBLHNCQUVaQyxVQUFVO0FBQUEsb0JBQ1o7QUFBQSxvQkFBRTtBQUFBO0FBQUEsa0JBVEo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGdCQVlBO0FBQUE7QUFBQTtBQUFBLFlBckJGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxVQXNCQSxJQUVBLHVCQUFDLGtCQUFlLFFBQU8sVUFBdkI7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFBNkIsS0E5QmpDO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBZ0NBO0FBQUE7QUFBQSxRQXJDRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFzQ0EsS0F2Q0Y7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQXdDQTtBQUFBLElBRUo7QUFBQSxJQUFDO0FBQUE7QUFBQTtBQUFBLGNBL0NrQjNDLFdBQVc7QUFBQTtBQUFBO0FBZ0RoQyxHQUFDO0FBQUEsVUFoRG9CQSxXQUFXO0FBQUE7QUFnRDlCNEMsTUF0RVd6QjtBQXdFYixlQUFlQTtBQUFXLElBQUFELElBQUFHLEtBQUF1QjtBQUFBQyxhQUFBM0IsSUFBQTtBQUFBMkIsYUFBQXhCLEtBQUE7QUFBQXdCLGFBQUFELEtBQUEiLCJuYW1lcyI6WyJtZW1vIiwidXNlSXNNb2JpbGUiLCJUZXh0UyIsIlZpZXciLCJWaWV3VkNlbnRlciIsIlJlYWN0Q29tcG9uZW50IiwiRGVza3RvcExvZ29TVkciLCJMb2dvU1ZHIiwiTW9iaWxlTG9nb1NWRyIsIkhlYWRlckxvZ29Db250YWluZXIiLCJzdHlsZWQiLCJoZWlnaHQiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImN1cnNvciIsInZhcmlhbnRzIiwic3RhdGUiLCJlbmFibGVkIiwiZGlzYWJsZWQiLCJfYyIsIkhlYWRlckxvZ28iLCJfcyIsIl9jMiIsInR5cGUiLCJzaG93SWNvbk9ubHkiLCJvbkxvZ29DbGljayIsImhhbmRsZUxvZ29DbGljayIsImhhbmRsZUxvZ29Nb3VzZURvd24iLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwibWV0YUtleSIsImJ1dHRvbiIsIndpbmRvdyIsIm9wZW4iLCJpc01vYmlsZSIsImlzVjIwUHJvbXB0UGFnZSIsImlubmVyV2lkdGgiLCJqdXN0aWZ5Q29udGVudCIsImdhcCIsImNvbG9yIiwiZm9udEZhbWlseSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImxpbmVIZWlnaHQiLCJ0ZXh0V3JhcCIsIl9jMyIsIiRSZWZyZXNoUmVnJCJdLCJzb3VyY2VzIjpbIkhlYWRlckxvZ28udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0eWxlZCB9IGZyb20gXCJAc3RpdGNoZXMvcmVhY3RcIjtcbmltcG9ydCB7IG1lbW8gfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgdXNlSXNNb2JpbGUgfSBmcm9tIFwiaG9va3MvdXNlSXNNb2JpbGVcIjtcblxuaW1wb3J0IHsgVGV4dFMsIFZpZXcsIFZpZXdWQ2VudGVyIH0gZnJvbSBcImNvbXBvbmVudHMvQ29yZVwiO1xuXG5pbXBvcnQgeyBSZWFjdENvbXBvbmVudCBhcyBEZXNrdG9wTG9nb1NWRyB9IGZyb20gXCJpY29ucy9kZXNrdG9wLWxvZ28uc3ZnXCI7XG5pbXBvcnQgeyBSZWFjdENvbXBvbmVudCBhcyBMb2dvU1ZHIH0gZnJvbSBcImljb25zL2xvZ28uc3ZnXCI7XG5pbXBvcnQgeyBSZWFjdENvbXBvbmVudCBhcyBNb2JpbGVMb2dvU1ZHIH0gZnJvbSBcImljb25zL21vYmlsZS1sb2dvLnN2Z1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEhlYWRlckxvZ29Qcm9wcyB7XG4gIHR5cGU6IFwiYmx1ZVwiIHwgXCJwdXJwbGVcIjtcbiAgb25Mb2dvQ2xpY2s/OiAoKSA9PiB2b2lkO1xuICBvbkxvZ29Db21tYW5kQ2xpY2s/OiAoKSA9PiB2b2lkO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIHNob3dJY29uT25seT86IGJvb2xlYW47XG59XG5cbmNvbnN0IEhlYWRlckxvZ29Db250YWluZXIgPSBzdHlsZWQoVmlldywge1xuICBoZWlnaHQ6IFwiMTAwJVwiLFxuXG4gIGRpc3BsYXk6IFwiZmxleFwiLFxuICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxuXG4gIGN1cnNvcjogXCJwb2ludGVyXCIsXG5cbiAgdmFyaWFudHM6IHtcbiAgICBzdGF0ZToge1xuICAgICAgZW5hYmxlZDoge1xuICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgICAgfSxcbiAgICAgIGRpc2FibGVkOiB7XG4gICAgICAgIGN1cnNvcjogXCJub3QtYWxsb3dlZFwiLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufSk7XG5cbmV4cG9ydCBjb25zdCBIZWFkZXJMb2dvOiBSZWFjdC5GQzxIZWFkZXJMb2dvUHJvcHM+ID0gbWVtbyhcbiAgKHsgdHlwZSwgZGlzYWJsZWQsIHNob3dJY29uT25seSwgb25Mb2dvQ2xpY2sgfTogSGVhZGVyTG9nb1Byb3BzKSA9PiB7XG4gICAgY29uc3QgaGFuZGxlTG9nb0NsaWNrID0gKCkgPT4ge1xuICAgICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgb25Mb2dvQ2xpY2s/LigpO1xuICAgIH07XG5cbiAgICBjb25zdCBoYW5kbGVMb2dvTW91c2VEb3duID0gKFxuICAgICAgZXZlbnQ6IFJlYWN0Lk1vdXNlRXZlbnQ8SFRNTERpdkVsZW1lbnQsIE1vdXNlRXZlbnQ+LFxuICAgICkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoZXZlbnQubWV0YUtleSB8fCBldmVudC5idXR0b24gPT09IDEpIHtcbiAgICAgICAgd2luZG93Lm9wZW4oXCIvXCIsIFwiX2JsYW5rXCIpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBpc01vYmlsZSA9IHVzZUlzTW9iaWxlKCk7XG5cbiAgICBjb25zdCBpc1YyMFByb21wdFBhZ2UgPSB3aW5kb3cuaW5uZXJXaWR0aCA+PSA2NDA7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPEhlYWRlckxvZ29Db250YWluZXJcbiAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVMb2dvQ2xpY2t9XG4gICAgICAgICAgb25Nb3VzZURvd249e2hhbmRsZUxvZ29Nb3VzZURvd259XG4gICAgICAgICAgc3RhdGU9e2Rpc2FibGVkID8gXCJkaXNhYmxlZFwiIDogXCJlbmFibGVkXCJ9XG4gICAgICAgID5cbiAgICAgICAgICA8Vmlld1ZDZW50ZXI+XG4gICAgICAgICAgICB7c2hvd0ljb25Pbmx5ID8gKFxuICAgICAgICAgICAgICA8TG9nb1NWRyB3aWR0aD1cIjI1cHhcIiBoZWlnaHQ9XCIyNXB4XCIgLz5cbiAgICAgICAgICAgICkgOiBpc01vYmlsZSA/IChcbiAgICAgICAgICAgICAgPE1vYmlsZUxvZ29TVkcgaGVpZ2h0PVwiMjdweFwiIC8+XG4gICAgICAgICAgICApIDogaXNWMjBQcm9tcHRQYWdlID8gKFxuICAgICAgICAgICAgICA8Vmlld1xuICAgICAgICAgICAgICAgIGNzcz17e1xuICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICBnYXA6IDgsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxMb2dvU1ZHIGhlaWdodD17MjB9IHdpZHRoPXsyMH0gLz5cbiAgICAgICAgICAgICAgICA8VGV4dFNcbiAgICAgICAgICAgICAgICAgIGNzcz17e1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogXCIkd2hpdGVcIixcbiAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJJbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTgsXG4gICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDcwMCxcbiAgICAgICAgICAgICAgICAgICAgbGluZUhlaWdodDogXCIyNHB4XCIsXG5cbiAgICAgICAgICAgICAgICAgICAgdGV4dFdyYXA6IFwibm93cmFwXCIsXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIGludmlkZW8gQUlcbiAgICAgICAgICAgICAgICA8L1RleHRTPlxuICAgICAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICA8RGVza3RvcExvZ29TVkcgaGVpZ2h0PVwiMzdweFwiIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvVmlld1ZDZW50ZXI+XG4gICAgICAgIDwvSGVhZGVyTG9nb0NvbnRhaW5lcj5cbiAgICAgIDwvPlxuICAgICk7XG4gIH0sXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXJMb2dvO1xuIl0sImZpbGUiOiIvVXNlcnMvYS1jLXNyZWVkaGFyLXJlZGR5L2ludmlkZW8vaXYtcHJvL2l2LXByby13ZWIvd2ViL3NyYy9jb21wb25lbnRzL0hlYWRlci9IZWFkZXJMb2dvLnRzeCJ9/HeaderLogo.tsx:41' does not exist on this computer.\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29895/reactions",
          "total_count": 2,
          "+1": 2,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29895/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29892",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29892/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29892/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29892/events",
        "html_url": "https://github.com/facebook/react/issues/29892",
        "id": 2352017609,
        "node_id": "I_kwDOAJy2Ks6MMPDJ",
        "number": 29892,
        "title": "[Compiler Bug]: Compiler incorrectly removes memoization of an expensive operation in useMemo",
        "user": {
          "login": "issacgerges",
          "id": 44379112,
          "node_id": "MDQ6VXNlcjQ0Mzc5MTEy",
          "avatar_url": "https://avatars.githubusercontent.com/u/44379112?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/issacgerges",
          "html_url": "https://github.com/issacgerges",
          "followers_url": "https://api.github.com/users/issacgerges/followers",
          "following_url": "https://api.github.com/users/issacgerges/following{/other_user}",
          "gists_url": "https://api.github.com/users/issacgerges/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/issacgerges/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/issacgerges/subscriptions",
          "organizations_url": "https://api.github.com/users/issacgerges/orgs",
          "repos_url": "https://api.github.com/users/issacgerges/repos",
          "events_url": "https://api.github.com/users/issacgerges/events{/privacy}",
          "received_events_url": "https://api.github.com/users/issacgerges/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-13T20:40:41Z",
        "updated_at": "2024-07-31T11:17:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\r\n\r\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEUYCAsgJ4ASEEA1gBQCGAlEcADrFFyFg4iaOkQC8JMuQQBbCI0btRAPg7ci63v0GRpCHAAs8mAOZiiCAB4AHBJjB4AbghasA3Go0w9sYsyIBqIh09QxN3HgBfABoiAG1mAF1WDy8cHyE6cIiQCKA\r\n\r\n### Repro steps\r\n\r\nThe compiler seems to incorrectly erase memoization of possibly expensive operations using `useMemo` in some cases.\r\n\r\nCompare the compiler output of the two similar examples, in the first all memoization will be replaced, in the 2nd it will be correctly added in\r\n\r\n```\r\n// all memoization is removed, incorrectly\r\nfunction useMyHook(a) {\r\n  const foo = useMemo(() => {\r\n    const something = expensive(a);\r\n    return a + something;\r\n  }, [a])\r\n  return foo;\r\n}\r\n\r\n```\r\n\r\n```\r\n// memoization is preserved/added, correctly\r\nfunction useMyHook(a) {\r\n  const foo = useMemo(() => {\r\n    const something = expensive(a);\r\n    return something;\r\n  }, [a])\r\n  return foo;\r\n}\r\n\r\n```\r\n\r\nI believe this is a byproduct of how memoization is dependent on the `return` value.\r\n\r\nAnother side effect of that decision (although already a rule break) is that someone incorrectly using `useMemo` instead of `useEffect` would likely force that effect to run every render (regardless of their deps array that would normally prevent it)\r\n\r\n\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\nv17.0.2",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29892/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29892/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29890",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29890/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29890/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29890/events",
        "html_url": "https://github.com/facebook/react/issues/29890",
        "id": 2351729699,
        "node_id": "I_kwDOAJy2Ks6MLIwj",
        "number": 29890,
        "title": "Bug: onPointerDown not called when rendered in 'display: contents' root",
        "user": {
          "login": "V3RON",
          "id": 8137511,
          "node_id": "MDQ6VXNlcjgxMzc1MTE=",
          "avatar_url": "https://avatars.githubusercontent.com/u/8137511?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/V3RON",
          "html_url": "https://github.com/V3RON",
          "followers_url": "https://api.github.com/users/V3RON/followers",
          "following_url": "https://api.github.com/users/V3RON/following{/other_user}",
          "gists_url": "https://api.github.com/users/V3RON/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/V3RON/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/V3RON/subscriptions",
          "organizations_url": "https://api.github.com/users/V3RON/orgs",
          "repos_url": "https://api.github.com/users/V3RON/repos",
          "events_url": "https://api.github.com/users/V3RON/events{/privacy}",
          "received_events_url": "https://api.github.com/users/V3RON/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 127893911,
            "node_id": "MDU6TGFiZWwxMjc4OTM5MTE=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
            "name": "Component: DOM",
            "color": "fef2c0",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2024-06-13T17:45:37Z",
        "updated_at": "2024-07-01T13:43:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`onPointerDown` listeners are not called in iOS Safari when a React application is rendered within an element that has the `display: contents` CSS rule. This issue seems to be specific to iOS, as it works fine on macOS and Windows.\r\n\r\nThis bug was discovered through a report in the Astro framework. A user noted that a React component became unclickable after a View Transition, which Astro emulates using JavaScript. Upon investigation, I traced the issue to elements with the `display: contents` rule.\r\n\r\nThe issue may be related to the `trapClickOnNonInteractiveElement` hack. When a fake `pointerdown` listener is added, the bug disappears and everything works correctly. However, I haven't found any documentation on this behavior, so this is just a hypothesis.\r\n\r\nReact version: 18.3.1\r\n\r\n## Steps To Reproduce\r\n\r\nRender React component with <button onPointerDown={() => console.log('called')}>Click me</button> in an element with `display: contents` applied. Try clicking the button in iOS Safari.\r\n\r\nSee [this page](https://v3ron.github.io/react-pointer-down-ios-bug/) for reproduction.\r\nSee [this repository](https://github.com/V3RON/react-pointer-down-ios-bug) for source code.\r\n\r\n## The current behavior\r\n\r\n`onPointerDown` listener is not called\r\n\r\n## The expected behavior\r\n\r\n`onPointerDown` listener should be called\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29890/reactions",
          "total_count": 7,
          "+1": 7,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29890/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29855",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29855/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29855/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29855/events",
        "html_url": "https://github.com/facebook/react/issues/29855",
        "id": 2346386091,
        "node_id": "I_kwDOAJy2Ks6L2wKr",
        "number": 29855,
        "title": "[React 19] `use` is significantly slower in some scenarios than throwing a Promise",
        "user": {
          "login": "phryneas",
          "id": 4282439,
          "node_id": "MDQ6VXNlcjQyODI0Mzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4282439?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/phryneas",
          "html_url": "https://github.com/phryneas",
          "followers_url": "https://api.github.com/users/phryneas/followers",
          "following_url": "https://api.github.com/users/phryneas/following{/other_user}",
          "gists_url": "https://api.github.com/users/phryneas/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/phryneas/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/phryneas/subscriptions",
          "organizations_url": "https://api.github.com/users/phryneas/orgs",
          "repos_url": "https://api.github.com/users/phryneas/repos",
          "events_url": "https://api.github.com/users/phryneas/events{/privacy}",
          "received_events_url": "https://api.github.com/users/phryneas/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2024-06-11T13:04:51Z",
        "updated_at": "2024-07-24T16:16:40Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nThis is something I noticed when I applied the Apollo Client test suite to React 19 - we had one test that was timing out.\r\n\r\nI first thought that the test was broken, but it turns out it was just really slow. \r\n\r\nCranking the test that finished in React 18 in under 200 milliseconds to a timeout of 10 **seconds** for React 19 made it pass (6 seconds would still consistently fail, 7 seconds started to pass on localhost).\r\n\r\nFurther I noticed that if we use our [`__use`](https://github.com/apollographql/apollo-client/blob/8e3edd4f5e5191453ba3ca1a1cc4fc4a02b936e8/src/react/hooks/internal/__use.ts#L15-L26) polyfill that throws a Promise instead of `use`, the test finishes in under 500 milliseconds - still slower than React 18, but *significantly* faster than React 19 with native `use`.\r\n\r\nThis is the test in question:\r\n\r\nhttps://github.com/apollographql/apollo-client/blob/8e3edd4f5e5191453ba3ca1a1cc4fc4a02b936e8/src/react/hooks/__tests__/useSuspenseQuery.test.tsx#L9519-L9615\r\n\r\nI'd be happy to work with you on further identifying the root cause for this, but I'll be moving houses in a few days, and I just don't have the time to create an isolated reproduction for this within the next 1-2 weeks, I'm really sorry.\r\n\r\nStill, I assume this might be important for you, so I'll at least open a ticket to let you know :)",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29855/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29855/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29849",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29849/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29849/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29849/events",
        "html_url": "https://github.com/facebook/react/issues/29849",
        "id": 2345313884,
        "node_id": "I_kwDOAJy2Ks6LyqZc",
        "number": 29849,
        "title": "Bug:  Changes to marker references post-render are not updating in Safari",
        "user": {
          "login": "TheBenevolentJoker",
          "id": 114942190,
          "node_id": "U_kgDOBtng7g",
          "avatar_url": "https://avatars.githubusercontent.com/u/114942190?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/TheBenevolentJoker",
          "html_url": "https://github.com/TheBenevolentJoker",
          "followers_url": "https://api.github.com/users/TheBenevolentJoker/followers",
          "following_url": "https://api.github.com/users/TheBenevolentJoker/following{/other_user}",
          "gists_url": "https://api.github.com/users/TheBenevolentJoker/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/TheBenevolentJoker/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/TheBenevolentJoker/subscriptions",
          "organizations_url": "https://api.github.com/users/TheBenevolentJoker/orgs",
          "repos_url": "https://api.github.com/users/TheBenevolentJoker/repos",
          "events_url": "https://api.github.com/users/TheBenevolentJoker/events{/privacy}",
          "received_events_url": "https://api.github.com/users/TheBenevolentJoker/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-11T03:43:05Z",
        "updated_at": "2024-09-14T18:05:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 18.0.0\r\n## Steps To Reproduce\r\n\r\n1. Ensure you are using the most recent version of Safari, which is currently Version 17.5 (19618.2.12.11.6). The issue described does not manifest in Chrome or Firefox.\r\n2. Construct an SVG layout that includes two distinct markers along with a path element.\r\n3. Modify the marker-end attribute of the path element, switching from the first marker to the second, through a rendering cycle. This can be initiated by a state change (as demonstrated in my example, using setState).\r\n4. Observe that the rendering cycle, which should alter the marker end color to blue (as per my code example), fails to update the marker end.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29849/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29849/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29832",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29832/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29832/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29832/events",
        "html_url": "https://github.com/facebook/react/issues/29832",
        "id": 2344210075,
        "node_id": "I_kwDOAJy2Ks6Luc6b",
        "number": 29832,
        "title": "[Compiler Bug]: Mutating a ref passed as argument from a hook warns",
        "user": {
          "login": "oliviertassinari",
          "id": 3165635,
          "node_id": "MDQ6VXNlcjMxNjU2MzU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3165635?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/oliviertassinari",
          "html_url": "https://github.com/oliviertassinari",
          "followers_url": "https://api.github.com/users/oliviertassinari/followers",
          "following_url": "https://api.github.com/users/oliviertassinari/following{/other_user}",
          "gists_url": "https://api.github.com/users/oliviertassinari/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/oliviertassinari/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/oliviertassinari/subscriptions",
          "organizations_url": "https://api.github.com/users/oliviertassinari/orgs",
          "repos_url": "https://api.github.com/users/oliviertassinari/repos",
          "events_url": "https://api.github.com/users/oliviertassinari/events{/privacy}",
          "received_events_url": "https://api.github.com/users/oliviertassinari/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-10T15:29:09Z",
        "updated_at": "2024-08-12T13:01:02Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhASwLYAcIwC4AEAVAQIZgEBKCpchAZjBBgQOQw12sDcAOgHYCEADxz4C9KPzpoI-AlDAJqYNAC8EACVL8AJgBsEACgEECeUjADmCPMiqc8AOgCyUCwCND1egHkPAFYIdAA8mgAqLgAyACJoAG4AooYYCPyEAD4E-FD6+gB8ADQCAJQEwKYEcHJghB6WBAC8DrTOisoI9GGRsQnJCKnp+UY5eSV8gvItdE7tifT0wXhGRmWN+eWVZpLSeLLyHKoa-kF0RgjxaXYELtBKiZfpBFnh0HAAFg9XZRVTZmb1GBOOCwDjpJy1ACehicAHc0Lo8O8mgReCAAIwABiwwjRE3+-ws1lswNBVwheGhCDhCKRKLRWJxeK2BAAvgIWboICDBs5SLpdF90lE0LU0ggYEZWBg7gMIJdWIUCId1AgTkslcACFhyKpLvZ6KR9Eo2eMWRw8LB5KsmhtfgSzFyeeSODLLkK8CKxfwJVKZe03QhFcqEEc1YElma-mz8WylQBtIk2PAAXSjZgtVs20d0MFIVisaH4VnseBgUAQxSmrIm7P4IFZQA\r\n\r\n### Repro steps\r\n\r\n```jsx\r\nimport * as React from 'react';\r\n\r\nexport function useResizeHandle(\r\n  target: React.MutableRefObject<HTMLDivElement | null>,\r\n) {\r\n  const bar = React.useRef<HTMLDivElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    function resizeObject(event: MouseEvent | TouchEvent) {\r\n      bar.current.style.width = \"10px\";\r\n      target.current.style.width = \"10px\";\r\n// ~~ InvalidReact: Mutating component props or hook arguments is not allowed. Consider using a local variable instead. Found mutation of `target`\r\n    }\r\n\r\n    document.addEventListener('mousemove', resizeObject, { passive: false });\r\n    return () => {\r\n      document.removeEventListener('mousemove', resizeObject);\r\n    };\r\n  }, [target]);\r\n  return {\r\n    dragging: true,\r\n  };\r\n}\r\n```\r\n\r\nThis seems like the same as #29196 but in reverse.\r\n\r\nFrom what @josephsavona said:\r\n\r\n> we will likely need to explore a heuristic for understanding which values may be refs, based on the ecosystem convention of \"ref\" or \"-Ref\".\r\n\r\nThis could make sense. I could see myself doing:\r\n\r\n```diff\r\n export function useResizeHandle(\r\n-  target: React.MutableRefObject<HTMLDivElement | null>,\r\n+  targetRef: React.MutableRefObject<HTMLDivElement | null>,\r\n ) {\r\n```\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\nv19",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29832/reactions",
          "total_count": 4,
          "+1": 4,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29832/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29826",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29826/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29826/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29826/events",
        "html_url": "https://github.com/facebook/react/issues/29826",
        "id": 2342881094,
        "node_id": "I_kwDOAJy2Ks6LpYdG",
        "number": 29826,
        "title": "Unable to select color using voice access commands.",
        "user": {
          "login": "msftedad",
          "id": 93735775,
          "node_id": "U_kgDOBZZLXw",
          "avatar_url": "https://avatars.githubusercontent.com/u/93735775?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/msftedad",
          "html_url": "https://github.com/msftedad",
          "followers_url": "https://api.github.com/users/msftedad/followers",
          "following_url": "https://api.github.com/users/msftedad/following{/other_user}",
          "gists_url": "https://api.github.com/users/msftedad/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/msftedad/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/msftedad/subscriptions",
          "organizations_url": "https://api.github.com/users/msftedad/orgs",
          "repos_url": "https://api.github.com/users/msftedad/repos",
          "events_url": "https://api.github.com/users/msftedad/events{/privacy}",
          "received_events_url": "https://api.github.com/users/msftedad/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-10T05:23:10Z",
        "updated_at": "2024-09-10T09:05:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\n  Please provide a clear and concise description of what the bug is. Include\r\n  screenshots if needed. Please test using the latest version of the relevant\r\n  React packages to make sure your issue has not already been fixed.\r\n-->\r\n\r\nReact version: 16.8.0\r\n\r\n**Pre-Requisites**\r\nSettings->Accessibility->Voice Access\r\n\r\n## Steps To Reproduce\r\n\r\n1. Open [React Select (react-select.com)](https://react-select.com/home).\r\n2. Navigate to the welcome 'Getting Started' page.\r\n3. Expand 'Multi' dropdown.\r\n4. Give command as 'Click <<color name>> and observe.\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n## The current behavior \r\nNo action is performed upon announcing category color. Voice Access displayed as left clicked <category name>.\r\n\r\n[voice access-numbers-react.webm](https://github.com/facebook/react/assets/93735775/1a45a68a-f2e7-4e35-b127-f57f3d46061d)\r\n\r\n[react-voice acess.webm](https://github.com/facebook/react/assets/93735775/916f0ef3-64e5-4090-ab57-d5ad4c04128d)\r\n\r\n## The expected behavior\r\nCategory should be select properly with voice access command.\r\n\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29826/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29826/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29776",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29776/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29776/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29776/events",
        "html_url": "https://github.com/facebook/react/issues/29776",
        "id": 2337544850,
        "node_id": "I_kwDOAJy2Ks6LVBqS",
        "number": 29776,
        "title": " DevTools Components Hide components filter should hide the component it owns",
        "user": {
          "login": "ricardo-reis-1970",
          "id": 40762989,
          "node_id": "MDQ6VXNlcjQwNzYyOTg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/40762989?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ricardo-reis-1970",
          "html_url": "https://github.com/ricardo-reis-1970",
          "followers_url": "https://api.github.com/users/ricardo-reis-1970/followers",
          "following_url": "https://api.github.com/users/ricardo-reis-1970/following{/other_user}",
          "gists_url": "https://api.github.com/users/ricardo-reis-1970/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/ricardo-reis-1970/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/ricardo-reis-1970/subscriptions",
          "organizations_url": "https://api.github.com/users/ricardo-reis-1970/orgs",
          "repos_url": "https://api.github.com/users/ricardo-reis-1970/repos",
          "events_url": "https://api.github.com/users/ricardo-reis-1970/events{/privacy}",
          "received_events_url": "https://api.github.com/users/ricardo-reis-1970/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929153,
            "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
            "name": "Type: Enhancement",
            "color": "84b6eb",
            "default": false,
            "description": null
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-06-06T07:30:34Z",
        "updated_at": "2024-06-07T08:25:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I go to the Components tab of the React DevTools, I have an option to hide components in:\r\n```\r\nSettings > Components > Hide components where...\r\n```\r\n\r\nIn this I can hide a component based on its name. The issue is that among many others I have a component called `Period` that has a ton of components underneath it because it uses `React Datepicker`. I add a rule like:\r\n```\r\n^ name matches Period\r\n```\r\nbut all it hides is the entry for my component. I obviously expected to hide it together with all its descendants, but instead the very single line called `Period` vanishes from the tree, and now the tons of subcomponents (Datepicker, remember?) are all there as if hanging directly from the `Period`'s parent component.\r\n\r\nReact version: 18.2.0\r\nDevTools version: [5.2.0-1717ab0171](https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#520)\r\n\r\n## Steps To Reproduce\r\n\r\n1. create a React page with any component hierarchy with more than 2 levels\r\n2. in React DevTools > Components, go to `Settings > Components > Hide components where...`\r\n3. filter out a component by name\r\n4. now you'll see that the component that you filtered out disappeared, but its descendants are still all there, attached to the component's parent.\r\n\r\nLink to code example:\r\n\r\nMy code is corporate and therefore cannot be shared. However, the description I gave and the steps to reproduce are quite unmistakable. This is not a circumstance bug on my code.\r\n\r\n## The current behavior\r\nCurrently, if I want to hide a component and all its descendants, I would need to add these one by one to the filters, which becomes highly impractical very soon.\r\n\r\nFurthermore, in hiding components under the component I'm trying to hide, I might be hiding components elsewhere with the same name that I need not hide.\r\n\r\n## The expected behavior\r\nI'm not sure what purpose this serves, but this is really not practical. There should at the very least be an option for physical filter and logical filter, where physical would be \"every instance of this name\" and logical would be \"every instance of this name AND its descendants\".\r\n\r\nOther improvements would be selecting components to be collapsed by default (like filtering out, but with the option to see them).\r\n\r\nFinally, not sure this is intended, but filtering is case insensitive. JavaScript is not.\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29776/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29776/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29757",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29757/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29757/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29757/events",
        "html_url": "https://github.com/facebook/react/issues/29757",
        "id": 2333914689,
        "node_id": "I_kwDOAJy2Ks6LHLZB",
        "number": 29757,
        "title": "Refs merging/combining",
        "user": {
          "login": "FrameMuse",
          "id": 53980482,
          "node_id": "MDQ6VXNlcjUzOTgwNDgy",
          "avatar_url": "https://avatars.githubusercontent.com/u/53980482?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/FrameMuse",
          "html_url": "https://github.com/FrameMuse",
          "followers_url": "https://api.github.com/users/FrameMuse/followers",
          "following_url": "https://api.github.com/users/FrameMuse/following{/other_user}",
          "gists_url": "https://api.github.com/users/FrameMuse/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/FrameMuse/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/FrameMuse/subscriptions",
          "organizations_url": "https://api.github.com/users/FrameMuse/orgs",
          "repos_url": "https://api.github.com/users/FrameMuse/repos",
          "events_url": "https://api.github.com/users/FrameMuse/events{/privacy}",
          "received_events_url": "https://api.github.com/users/FrameMuse/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929153,
            "node_id": "MDU6TGFiZWw0MDkyOTE1Mw==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Enhancement",
            "name": "Type: Enhancement",
            "color": "84b6eb",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-04T16:17:01Z",
        "updated_at": "2024-06-07T11:51:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nI wanted to use `ref` from `props` while also creating a local `ref` as a fallback, but I got into this problem https://github.com/facebook/react/issues/17200.\r\n\r\nI know this could be resolved with a little code, though I think this behavior should belong natively to React. There is even a package for that https://www.npmjs.com/package/react-merge-refs with ~1 million downloads/week, which confirms necessity of this for the React users.\r\n\r\nI would propose something like\r\n```tsx\r\nfunction Component(props: { ref?: Ref<HTMLDivElement> }) {\r\n  const fallbackRef = useRef<HTMLDivElement>(null)\r\n  return <div ref={[props.ref, fallbackRef]} />\r\n}\r\n```\r\nor at least this for fallback cases\r\n```tsx\r\nfunction Component(props: { ref?: Ref<HTMLDivElement> }) {\r\n  const elementRef = useRef<HTMLDivElement>(props.ref)\r\n  return <div ref={elementRef} />\r\n}\r\n```\r\nor hook/helper to resolve `ref`s concurrency\r\n```tsx\r\nfunction Component(props: { ref?: Ref<HTMLDivElement> }) {\r\n  const elementRef = useRef<HTMLDivElement>(null)\r\n  const combinedRef = useCombinedRef([props.ref, elementRef])\r\n\r\n  return <div ref={combinedRef} />\r\n}\r\n```\r\n```tsx\r\nfunction Component(props: { ref?: Ref<HTMLDivElement> }) {\r\n  const elementRef = useRef<HTMLDivElement>(null)\r\n  return <div ref={combineRefs([props.ref, elementRef])} />\r\n}\r\n```\r\n\r\nWhat do you think? Am I going too far with it? 😅\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29757/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29757/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29755",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29755/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29755/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29755/events",
        "html_url": "https://github.com/facebook/react/issues/29755",
        "id": 2333668858,
        "node_id": "I_kwDOAJy2Ks6LGPX6",
        "number": 29755,
        "title": "[Compiler Bug]: Runtime error with Higher Order Components",
        "user": {
          "login": "NickBlow",
          "id": 6502020,
          "node_id": "MDQ6VXNlcjY1MDIwMjA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6502020?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/NickBlow",
          "html_url": "https://github.com/NickBlow",
          "followers_url": "https://api.github.com/users/NickBlow/followers",
          "following_url": "https://api.github.com/users/NickBlow/following{/other_user}",
          "gists_url": "https://api.github.com/users/NickBlow/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/NickBlow/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/NickBlow/subscriptions",
          "organizations_url": "https://api.github.com/users/NickBlow/orgs",
          "repos_url": "https://api.github.com/users/NickBlow/repos",
          "events_url": "https://api.github.com/users/NickBlow/events{/privacy}",
          "received_events_url": "https://api.github.com/users/NickBlow/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-06-04T14:19:13Z",
        "updated_at": "2024-08-18T12:41:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://codesandbox.io/p/devbox/vite-react-forked-w7lfc7?file=%2Fsrc%2FApp.tsx&workspaceId=5309445f-fc83-4685-b2a0-3050725a1482\n\n### Repro steps\n\nWe're just going through our codebase and fixing issues that we're getting when enabling the compiler.\r\n\r\nNot sure if this is something we are doing wrong, or a compiler issue.\r\n\r\nWe get 'TypeError: Cannot read properties of null (reading 'useMemoCache')' when running something similar to the following code in NextJS (minimal repro):\r\n\r\nPassing in a string as ElementType seems to be something that's fairly commonly recommended (https://www.aleksandrhovhannisyan.com/blog/dynamic-tag-name-props-in-react/ is the first result on Google for me).\r\n\r\n```\r\nimport React, { ElementType, FC } from \"react\";\r\n\r\nfunction TagChangingHOC(Tag: ElementType): FC<{text: string}> {\r\n    return function({text}) {\r\n        return <Tag>{text}</Tag>\r\n    }\r\n}\r\n\r\nconst DivTag = TagChangingHOC('div');\r\nconst SpanTag = TagChangingHOC('span');\r\n\r\nexport default function MyApp() {\r\n    return (<> <DivTag text=\"foo\"/> <SpanTag text=\"bar\"/> </>)\r\n}\r\n```\r\n\r\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAHQHaYGZQ3AFwEsIMACAFQEMBzAYQAsqMaiWAJAeToApqaAlGWCYyZGAgKxyufMVJkewMgQQAPAmQC+QkeTHjJ0sgB5+APmCqNWkwHoLo7Zi2ZMcUmE0ARIgDd+MgBeSlpGZlYObh4AcgATfxiBAG53T00AZQAHZkCQ-nCWNhouXhiwHIwk1KwMdSyIGE04hGwqKAAbTVlCEnIAWQBPAEEsrJ5dJwkpGHIeE3NTXwDaFXUCILQQbAgILbtFk2zc1esNrYAjKhh9w4OBF0wQLSA\r\n\r\n\r\nI'm very happy to accept an alternative solution if this is too much of an edge case.\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc.0",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29755/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29755/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29719",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29719/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29719/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29719/events",
        "html_url": "https://github.com/facebook/react/issues/29719",
        "id": 2329781410,
        "node_id": "I_kwDOAJy2Ks6K3aSi",
        "number": 29719,
        "title": "[Bug] : SSR Suspense renders dollar sign ($) in the dom ",
        "user": {
          "login": "sarathjasrin",
          "id": 13378125,
          "node_id": "MDQ6VXNlcjEzMzc4MTI1",
          "avatar_url": "https://avatars.githubusercontent.com/u/13378125?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sarathjasrin",
          "html_url": "https://github.com/sarathjasrin",
          "followers_url": "https://api.github.com/users/sarathjasrin/followers",
          "following_url": "https://api.github.com/users/sarathjasrin/following{/other_user}",
          "gists_url": "https://api.github.com/users/sarathjasrin/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/sarathjasrin/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/sarathjasrin/subscriptions",
          "organizations_url": "https://api.github.com/users/sarathjasrin/orgs",
          "repos_url": "https://api.github.com/users/sarathjasrin/repos",
          "events_url": "https://api.github.com/users/sarathjasrin/events{/privacy}",
          "received_events_url": "https://api.github.com/users/sarathjasrin/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 1775957182,
            "node_id": "MDU6TGFiZWwxNzc1OTU3MTgy",
            "url": "https://api.github.com/repos/facebook/react/labels/Resolution:%20Stale",
            "name": "Resolution: Stale",
            "color": "e6e6e6",
            "default": false,
            "description": "Automatically closed due to inactivity"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-06-02T17:32:34Z",
        "updated_at": "2024-09-15T16:04:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi I have tried to render a simple component via SSR. Which prints **$** sign because of that Hydration is failing.\r\n\r\nReact version: 18.3.2\r\n\r\n## Steps To Reproduce\r\n\r\n1. **App Component**\r\n\r\n```\r\nimport React, { useEffect } from 'react'\r\n\r\ninterface Props {}\r\n\r\nconst App: React.FC<Props> = () => {\r\n  useEffect(() => {\r\n    console.log('App component mounted')\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h1>Hello, React</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n```\r\n2. **express router**\r\n\r\n```\r\nrouter.get('*', (req, res) => {\r\n      const Component = this.loadComponent(req.path)\r\n\r\n      fs.readFile(\r\n        path.resolve('./src/public/index.html'),\r\n        'utf8',\r\n        // eslint-disable-next-line consistent-return\r\n        (error, data) => {\r\n          if (error) {\r\n            console.error(error)\r\n            return res.status(500).send('An error occurred')\r\n          }\r\n\r\n          let didError = false\r\n\r\n          const stream = renderToPipeableStream(\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <Component />\r\n            </Suspense>,\r\n            {\r\n              onShellReady() {\r\n                res.statusCode = didError ? 500 : 200\r\n                res.setHeader('Content-type', 'text/html')\r\n\r\n                const initialHtml = data.replace(\r\n                  '<div id=\"root\"></div>',\r\n                  '<div id=\"root\">',\r\n                )\r\n                res.write(initialHtml)\r\n                console.log(initialHtml)\r\n\r\n                stream.pipe(res)\r\n              },\r\n              onShellError() {\r\n                res.statusCode = 500\r\n                res.send('<!doctype html><p>Loading...</p>')\r\n              },\r\n              onAllReady() {\r\n                // If everything is ready, we end the stream\r\n                if (!didError) {\r\n                  res.end('</div></body></html>')\r\n                }\r\n              },\r\n              onError(err) {\r\n                didError = true\r\n                console.error(err)\r\n              },\r\n            },\r\n          )\r\n        },\r\n      )\r\n    })\r\n\r\n```\r\n## The current behavior\r\n\r\n![image](https://github.com/facebook/react/assets/13378125/b78b65c2-1f62-44a5-ae7e-41571f1e4d26)\r\n\r\n$RC is appended in the dom which inserts the $ sign\r\n\r\n![image](https://github.com/facebook/react/assets/13378125/ad058d64-ffe5-4672-95b9-1d219f0b9a49)\r\n\r\n\r\n<!--\r\n  Your bug will get fixed much faster if we can run your code and it doesn't\r\n  have dependencies other than React. Issues without reproduction steps or\r\n  code examples may be immediately closed as not actionable.\r\n-->\r\n\r\nLink to code example:\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\n\r\n## The expected behavior\r\n\r\nShould print **Hello, React** only once without any additional characters .\r\n",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29719/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29719/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29692",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29692/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29692/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29692/events",
        "html_url": "https://github.com/facebook/react/issues/29692",
        "id": 2328310588,
        "node_id": "I_kwDOAJy2Ks6KxzM8",
        "number": 29692,
        "title": "[React 19] Will React support write web components as Lit does someday?",
        "user": {
          "login": "jefer94",
          "id": 3018142,
          "node_id": "MDQ6VXNlcjMwMTgxNDI=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3018142?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jefer94",
          "html_url": "https://github.com/jefer94",
          "followers_url": "https://api.github.com/users/jefer94/followers",
          "following_url": "https://api.github.com/users/jefer94/following{/other_user}",
          "gists_url": "https://api.github.com/users/jefer94/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/jefer94/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/jefer94/subscriptions",
          "organizations_url": "https://api.github.com/users/jefer94/orgs",
          "repos_url": "https://api.github.com/users/jefer94/repos",
          "events_url": "https://api.github.com/users/jefer94/events{/privacy}",
          "received_events_url": "https://api.github.com/users/jefer94/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-05-31T17:41:51Z",
        "updated_at": "2024-09-15T15:04:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I mean, this question is important to know if we must wait for a new release or work with it someday, so many UI frameworks are integrated with React and this should help a lot, there should  be a small wrapper around the native API that should improve the productivity ",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29692/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29692/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29677",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29677/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29677/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29677/events",
        "html_url": "https://github.com/facebook/react/issues/29677",
        "id": 2326995304,
        "node_id": "I_kwDOAJy2Ks6KsyFo",
        "number": 29677,
        "title": "[Compiler Bug]: healthcheck vs eslint",
        "user": {
          "login": "mbiggs-gresham",
          "id": 34435305,
          "node_id": "MDQ6VXNlcjM0NDM1MzA1",
          "avatar_url": "https://avatars.githubusercontent.com/u/34435305?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mbiggs-gresham",
          "html_url": "https://github.com/mbiggs-gresham",
          "followers_url": "https://api.github.com/users/mbiggs-gresham/followers",
          "following_url": "https://api.github.com/users/mbiggs-gresham/following{/other_user}",
          "gists_url": "https://api.github.com/users/mbiggs-gresham/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mbiggs-gresham/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mbiggs-gresham/subscriptions",
          "organizations_url": "https://api.github.com/users/mbiggs-gresham/orgs",
          "repos_url": "https://api.github.com/users/mbiggs-gresham/repos",
          "events_url": "https://api.github.com/users/mbiggs-gresham/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mbiggs-gresham/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-31T05:32:01Z",
        "updated_at": "2024-05-31T23:13:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nn/a\n\n### Repro steps\n\nI've ran the healthcheck against my app which states that 72 out of 80 components have been compiled. The documentation states the higher the better. I don't have any eslint violations (there were 2 but those have been fixed). The app is working with some good improvements, so thanks!\r\n\r\n```\r\n% npx react-compiler-healthcheck@latest\r\n\r\nSuccessfully compiled 72 out of 80 components.\r\nStrictMode usage found.\r\nFound no usage of incompatible libraries.\r\n```\r\n\r\nSo how do i find the remaining components? Should there not be a minimum of 8 eslint violations or is that not how it works? What's the recommended approach to getting all 80 optimised?\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-38e3b23483-20240529",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29677/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29677/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29659",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29659/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29659/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29659/events",
        "html_url": "https://github.com/facebook/react/issues/29659",
        "id": 2324166284,
        "node_id": "I_kwDOAJy2Ks6Kh_aM",
        "number": 29659,
        "title": "[React 19] custom element property vs. event handler for props beginning with \"on\"",
        "user": {
          "login": "cjpillsbury",
          "id": 2389566,
          "node_id": "MDQ6VXNlcjIzODk1NjY=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2389566?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/cjpillsbury",
          "html_url": "https://github.com/cjpillsbury",
          "followers_url": "https://api.github.com/users/cjpillsbury/followers",
          "following_url": "https://api.github.com/users/cjpillsbury/following{/other_user}",
          "gists_url": "https://api.github.com/users/cjpillsbury/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/cjpillsbury/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/cjpillsbury/subscriptions",
          "organizations_url": "https://api.github.com/users/cjpillsbury/orgs",
          "repos_url": "https://api.github.com/users/cjpillsbury/repos",
          "events_url": "https://api.github.com/users/cjpillsbury/events{/privacy}",
          "received_events_url": "https://api.github.com/users/cjpillsbury/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-05-29T20:09:32Z",
        "updated_at": "2024-08-21T15:49:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nPer discussion in issue #11347 and in PR #22184, the current implementation of custom element support in React 19 does the following:\r\n\r\n1. checks if the react prop name begins with `on`\r\n2. checks if the react prop value is of type `function`\r\n\r\nIf both conditions hold, it will `addEventListener` for an event based off of the remaining name, also using naming conventions to check if the suffix is `Capture` to determine whether or not to use capture phase for the event.\r\n\r\n**Example:**\r\n```jsx\r\n<my-custom-element\r\n  // This will listen for events of type `\"customevent\"`\r\n  oncustomevent={(evt) => console.log(evt.type)}\r\n  // This will listen for events of type `\"customevent\"` and will `useCapture`(See: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#usecapture)\r\n  oncustomeventCapture={(evt) => console.log(event.eventPhase, event.type)}\r\n/>\r\n```\r\n\r\nIn the aforementioned discussions, there was some debate on how to approach events, namely:\r\n\r\n> I originally proposed that we do the same thing as preact here (forward everything starting with \"on\" to addEventListener), but if I remember correctly Sebastian felt strongly that we shouldn't reserve everything starting with \"on\" for event listeners. Jason Miller also felt strongly about this the other way, so maybe it's something that I can revisit/discuss more after merging this PR - maybe more users will chime in if they get to test it out.\r\n- https://github.com/facebook/react/pull/22184#issuecomment-987510813 from @josepharhar \r\n\r\nReferencing this, @jfbrennan called out, among other things, the relevant bits of the [HTML Standard](https://html.spec.whatwg.org/dev/webappapis.html#event-handler-attributes)\r\n(See: https://github.com/facebook/react/issues/11347#issuecomment-1767301646)\r\n\r\nI **believe** there is a simple path forward to strike a balance here while still having support that is \"idiomatically React\"\r\n\r\n## Proposal\r\n\r\nPrefer the \"in heuristic\" even for properties that meet the two conditions mentioned above over adding an event listener.\r\n\r\n### Motivation\r\n\r\n- For cases that conform to the HTML standard for custom element properties/IDL attributes, a property intended to handle events should behave the same as the current implementation: namely, if I (or react-dom) set `myCustomElement.oncustomevent = (evt) => console.log(evt.type);`, this should add an event listener \"under the hood\"\r\n- For cases where custom element authors have built properties that _**happen**_ to begin with `\"on\"` and _**happen**_ to accept functions as values, these will still work as expected, e.g. if there is a property on `my-custom-element` named `\"onto\"` it will get set as expected, even if the value is a function, so, e.g.\r\n```jsx\r\n<my-custom-element\r\n  // This will be set as the value of property `\"onto\"`, even though it begins with `\"on\"` and its value is of type `function`\r\n  onto={(value) => console.log(value)}\r\n/>\r\n```\r\n### Current workarounds\r\n\r\n- Use hooks (e.g. `useRef()` + `useEffect()`, etc.) to set these properties\r\n- Expect web component authors to have a 2nd property whose name **_does not_** begin with `\"on\"` that mirrors the functionality of the property whose name _**does**_ begin with `\"on\"`.\r\n\r\n### Relevant code\r\n\r\nhttps://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/client/DOMPropertyOperations.js#L194-L222\r\n\r\n<!--\r\n  Please provide a CodeSandbox (https://codesandbox.io/s/new), a link to a\r\n  repository on GitHub, or provide a minimal code example that reproduces the\r\n  problem. You may provide a screenshot of the application if you think it is\r\n  relevant to your bug report. Here are some tips for providing a minimal\r\n  example: https://stackoverflow.com/help/mcve.\r\n-->\r\n\r\ncc @jakearchibald @rickhanlonii for visibility",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29659/reactions",
          "total_count": 1,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29659/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29651",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29651/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29651/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29651/events",
        "html_url": "https://github.com/facebook/react/issues/29651",
        "id": 2323812060,
        "node_id": "I_kwDOAJy2Ks6Kgo7c",
        "number": 29651,
        "title": "[DevTools Bug]: Unable to edit props",
        "user": {
          "login": "alDuncanson",
          "id": 25286675,
          "node_id": "MDQ6VXNlcjI1Mjg2Njc1",
          "avatar_url": "https://avatars.githubusercontent.com/u/25286675?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/alDuncanson",
          "html_url": "https://github.com/alDuncanson",
          "followers_url": "https://api.github.com/users/alDuncanson/followers",
          "following_url": "https://api.github.com/users/alDuncanson/following{/other_user}",
          "gists_url": "https://api.github.com/users/alDuncanson/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/alDuncanson/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/alDuncanson/subscriptions",
          "organizations_url": "https://api.github.com/users/alDuncanson/orgs",
          "repos_url": "https://api.github.com/users/alDuncanson/repos",
          "events_url": "https://api.github.com/users/alDuncanson/events{/privacy}",
          "received_events_url": "https://api.github.com/users/alDuncanson/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-29T17:03:30Z",
        "updated_at": "2024-08-05T12:22:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nhttps://react.dev/\n\n### Repro steps\n\n## Steps to reproduce\r\n1. Navigate to the website (i.e. [React Dev](https://react.dev/))\r\n2. Open React Developer Tools\r\n3. Select an element in the page to inspect the component\r\n4. Try to edit the props, they appear to be read-only\r\n\r\n## Demo\r\n\r\n> attempt to edit props not working\r\n\r\n![Kapture 2024-05-29 at 12 59 10](https://github.com/facebook/react/assets/25286675/dbd8aca8-0cd4-470d-b5ab-75437f857418)\r\n\r\n## Extension info\r\n\r\n<img width=\"418\" alt=\"image\" src=\"https://github.com/facebook/react/assets/25286675/fdee9f6a-feb3-480f-ac03-038ca403f1ea\">\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29651/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29651/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29648",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29648/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29648/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29648/events",
        "html_url": "https://github.com/facebook/react/issues/29648",
        "id": 2323758084,
        "node_id": "I_kwDOAJy2Ks6KgbwE",
        "number": 29648,
        "title": "[Compiler Bug]: Stripping curly braces breaks character escapes (breaks JSX spec 1.5.1)",
        "user": {
          "login": "coravacav",
          "id": 40219946,
          "node_id": "MDQ6VXNlcjQwMjE5OTQ2",
          "avatar_url": "https://avatars.githubusercontent.com/u/40219946?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/coravacav",
          "html_url": "https://github.com/coravacav",
          "followers_url": "https://api.github.com/users/coravacav/followers",
          "following_url": "https://api.github.com/users/coravacav/following{/other_user}",
          "gists_url": "https://api.github.com/users/coravacav/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/coravacav/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/coravacav/subscriptions",
          "organizations_url": "https://api.github.com/users/coravacav/orgs",
          "repos_url": "https://api.github.com/users/coravacav/repos",
          "events_url": "https://api.github.com/users/coravacav/events{/privacy}",
          "received_events_url": "https://api.github.com/users/coravacav/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2024-05-29T16:37:36Z",
        "updated_at": "2024-06-20T22:33:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [X] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAgHgBwjALgAgBMEAzAQygBsCSoA7OXASwjvwAkIBbBACgEp8wADpt8MBLlhteo-PPwAeAHxyF8xQGVuCAMLdsdBHQK4MuALzAA5AEFhogKLWAvvgD0qseq079XQ2NTcwthEHsnMI8vH081fgBuURdREBcgA\n\n### Repro steps\n\n1. Use a string with a newline character (`\\n`) passed as a prop to a component with curly braces `prop={\"text\\ntext\"}`\r\n2. Observe that react compiler outputs `prop=\"text\\ntext\"` instead of `prop={\"text\\ntext\"}`\r\n\r\nThis is incorrect behavior. The newline character is no longer properly treated as a newline but rather as the raw text `\\n`.\r\n\r\nYou can see this behavior be correctly also incorrectly handled in the second component, where `prop=\"text\\ntext\"` becomes `prop=\"text\\\\ntext\"`, resulting in the wrong text being displayed on the screen.\r\n\r\nJSX rules specifically don't allow this kind of conversion, noted in [1.5.1 of the spec](https://facebook.github.io/jsx/#sec-jsx-string-characters)\r\n\r\n> Historically, string characters within [JSXAttributeValue](https://facebook.github.io/jsx/#prod-JSXAttributeValue) and [JSXText](https://facebook.github.io/jsx/#prod-JSXText) are extended to allow the presence of [HTML character references](https://facebook.github.io/jsx/#sec-HTMLCharacterReference) to make copy-pasting between HTML and JSX easier, at the cost of not supporting \\ [EscapeSequence](https://tc39.es/ecma262/#prod-annexB-EscapeSequence) of ECMAScript's [StringLiteral](https://tc39.es/ecma262/#prod-StringLiteral).\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-6f23540c7d-20240528",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29648/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29648/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29647",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29647/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29647/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29647/events",
        "html_url": "https://github.com/facebook/react/issues/29647",
        "id": 2323235762,
        "node_id": "I_kwDOAJy2Ks6KecOy",
        "number": 29647,
        "title": "[DevTools Bug]: devtools does not works on null origin(sandbox)",
        "user": {
          "login": "mochiya98",
          "id": 37928585,
          "node_id": "MDQ6VXNlcjM3OTI4NTg1",
          "avatar_url": "https://avatars.githubusercontent.com/u/37928585?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/mochiya98",
          "html_url": "https://github.com/mochiya98",
          "followers_url": "https://api.github.com/users/mochiya98/followers",
          "following_url": "https://api.github.com/users/mochiya98/following{/other_user}",
          "gists_url": "https://api.github.com/users/mochiya98/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/mochiya98/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/mochiya98/subscriptions",
          "organizations_url": "https://api.github.com/users/mochiya98/orgs",
          "repos_url": "https://api.github.com/users/mochiya98/repos",
          "events_url": "https://api.github.com/users/mochiya98/events{/privacy}",
          "received_events_url": "https://api.github.com/users/mochiya98/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-05-29T12:44:16Z",
        "updated_at": "2024-05-29T12:44:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nnone\n\n### Repro steps\n\n## How to reproduce?\r\nUsing the development version of React on a local server with sandbox specified in the Content-Security-Policy header reproduces this problem.\r\nFor example, in webpack-dev-server, apply the following configuration: \r\n```ts\r\n  devServer: {\r\n    headers: {\r\n      \"Content-Security-Policy\": \"sandbox allow-scripts\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  },\r\n```\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29647/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29647/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29640",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29640/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29640/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29640/events",
        "html_url": "https://github.com/facebook/react/issues/29640",
        "id": 2322802665,
        "node_id": "I_kwDOAJy2Ks6Kcyfp",
        "number": 29640,
        "title": "[Compiler Bug]: react native reanimated shared value mutation",
        "user": {
          "login": "AlirezaHadjar",
          "id": 57192409,
          "node_id": "MDQ6VXNlcjU3MTkyNDA5",
          "avatar_url": "https://avatars.githubusercontent.com/u/57192409?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/AlirezaHadjar",
          "html_url": "https://github.com/AlirezaHadjar",
          "followers_url": "https://api.github.com/users/AlirezaHadjar/followers",
          "following_url": "https://api.github.com/users/AlirezaHadjar/following{/other_user}",
          "gists_url": "https://api.github.com/users/AlirezaHadjar/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/AlirezaHadjar/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/AlirezaHadjar/subscriptions",
          "organizations_url": "https://api.github.com/users/AlirezaHadjar/orgs",
          "repos_url": "https://api.github.com/users/AlirezaHadjar/repos",
          "events_url": "https://api.github.com/users/AlirezaHadjar/events{/privacy}",
          "received_events_url": "https://api.github.com/users/AlirezaHadjar/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2024-05-29T09:16:03Z",
        "updated_at": "2024-06-03T20:27:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://github.com/AlirezaHadjar/react-compiler-shared-value-bug\n\n### Repro steps\n\nHi, \r\nI'm using polyfill in react native to get the compiler working and noticing that the compiler is complaining about reanimated shared value mutations which is a very common pattern in [react native](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/your-first-animation/#using-a-shared-value).\r\n\r\n```tsx\r\n  const onPress = () => {\r\n    translateX.value = withTiming((Math.random() - 0.5) * 100);\r\n  };\r\n```\r\n![Screenshot 2024-05-29 at 12 40 14 PM](https://github.com/facebook/react/assets/57192409/dc33fd69-0637-4575-801d-5b31977f350a)\r\n\r\nAnd the health-check command also confirms that `App.tsx` is not compiled.\r\n\r\n![Screenshot 2024-05-29 at 12 42 33 PM](https://github.com/facebook/react/assets/57192409/c4d685ba-b775-4e12-a5ce-c68f1ed68fc1)\r\n\r\nSteps to build the project:\r\n1. yarn install\r\n2. yarn ios\r\n\r\n@josephsavona this is the issue that we discussed on [Twitter](https://x.com/alireza_hadjar/status/1795575101670519124?s=46&t=HIMTmQZ1qNgFDe3f7YV9kQ)\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n18.2",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29640/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29640/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29639",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29639/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29639/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29639/events",
        "html_url": "https://github.com/facebook/react/issues/29639",
        "id": 2322761867,
        "node_id": "I_kwDOAJy2Ks6KcoiL",
        "number": 29639,
        "title": "[Compiler Bug]: Health check --src option only works with one file (so a glob needs to be quoted)",
        "user": {
          "login": "guillaumebrunerie",
          "id": 787865,
          "node_id": "MDQ6VXNlcjc4Nzg2NQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/787865?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/guillaumebrunerie",
          "html_url": "https://github.com/guillaumebrunerie",
          "followers_url": "https://api.github.com/users/guillaumebrunerie/followers",
          "following_url": "https://api.github.com/users/guillaumebrunerie/following{/other_user}",
          "gists_url": "https://api.github.com/users/guillaumebrunerie/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/guillaumebrunerie/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/guillaumebrunerie/subscriptions",
          "organizations_url": "https://api.github.com/users/guillaumebrunerie/orgs",
          "repos_url": "https://api.github.com/users/guillaumebrunerie/repos",
          "events_url": "https://api.github.com/users/guillaumebrunerie/events{/privacy}",
          "received_events_url": "https://api.github.com/users/guillaumebrunerie/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-05-29T08:57:33Z",
        "updated_at": "2024-06-08T15:02:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [X] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nAny project with several component files (e.g. https://github.com/guillaumebrunerie/LD55)\n\n### Repro steps\n\nRunning the compiler health check with a normal glob only checks the first file it finds:\r\n```\r\n> npx react-compiler-healthcheck --src src/**/*.{tsx,ts}\r\nSuccessfully compiled 1 out of 1 components.\r\n```\r\nThis is a bit surprising as most command line utilities handle multiple input files, here we need to quote the glob to have it work as intended:\r\n```\r\n> npx react-compiler-healthcheck --src \"src/**/*.{tsx,ts}\"\r\nSuccessfully compiled 379 out of 399 components.\r\n```\r\n\r\nI would suggest making the first one work as well, that is the `--src` argument should accept an arbitrary number of files and process all of them.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n-",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29639/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29639/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29588",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29588/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29588/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29588/events",
        "html_url": "https://github.com/facebook/react/issues/29588",
        "id": 2316663440,
        "node_id": "I_kwDOAJy2Ks6KFXqQ",
        "number": 29588,
        "title": "[DevTools Bug]: version 5.2.0  icon opien in editor cannot click , color is gray",
        "user": {
          "login": "YingchenWang999",
          "id": 56105589,
          "node_id": "MDQ6VXNlcjU2MTA1NTg5",
          "avatar_url": "https://avatars.githubusercontent.com/u/56105589?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/YingchenWang999",
          "html_url": "https://github.com/YingchenWang999",
          "followers_url": "https://api.github.com/users/YingchenWang999/followers",
          "following_url": "https://api.github.com/users/YingchenWang999/following{/other_user}",
          "gists_url": "https://api.github.com/users/YingchenWang999/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/YingchenWang999/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/YingchenWang999/subscriptions",
          "organizations_url": "https://api.github.com/users/YingchenWang999/orgs",
          "repos_url": "https://api.github.com/users/YingchenWang999/repos",
          "events_url": "https://api.github.com/users/YingchenWang999/events{/privacy}",
          "received_events_url": "https://api.github.com/users/YingchenWang999/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 710573595,
            "node_id": "MDU6TGFiZWw3MTA1NzM1OTU=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools",
            "name": "Component: Developer Tools",
            "color": "fbca04",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2024-05-25T03:47:26Z",
        "updated_at": "2024-05-25T03:47:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Website or app\n\nhttps://github.com/YingchenWang999/react-demo\n\n### Repro steps\n\ncd  react-demo   \r\nnpm run dev \r\n open in chrome \r\nopen reactdevtools \r\nset open in editor url  is vscode \r\nchoose seletor component \r\n\r\nsee \r\n\r\n<img width=\"1509\" alt=\"image\" src=\"https://github.com/facebook/react/assets/56105589/07538d58-2fb1-4745-a4a6-969fbd22b7b4\">\r\n\r\n\n\n### How often does this bug happen?\n\nEvery time\n\n### DevTools package (automated)\n\n_No response_\n\n### DevTools version (automated)\n\n_No response_\n\n### Error message (automated)\n\n_No response_\n\n### Error call stack (automated)\n\n_No response_\n\n### Error component stack (automated)\n\n_No response_\n\n### GitHub query string (automated)\n\n_No response_",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29588/reactions",
          "total_count": 1,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29588/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29587",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29587/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29587/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29587/events",
        "html_url": "https://github.com/facebook/react/issues/29587",
        "id": 2316594759,
        "node_id": "I_kwDOAJy2Ks6KFG5H",
        "number": 29587,
        "title": "[Compiler Bug]: useMemo returns a result that contains a ref that needs to be declared as a dependency",
        "user": {
          "login": "Y-Hui",
          "id": 33365376,
          "node_id": "MDQ6VXNlcjMzMzY1Mzc2",
          "avatar_url": "https://avatars.githubusercontent.com/u/33365376?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Y-Hui",
          "html_url": "https://github.com/Y-Hui",
          "followers_url": "https://api.github.com/users/Y-Hui/followers",
          "following_url": "https://api.github.com/users/Y-Hui/following{/other_user}",
          "gists_url": "https://api.github.com/users/Y-Hui/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/Y-Hui/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/Y-Hui/subscriptions",
          "organizations_url": "https://api.github.com/users/Y-Hui/orgs",
          "repos_url": "https://api.github.com/users/Y-Hui/repos",
          "events_url": "https://api.github.com/users/Y-Hui/events{/privacy}",
          "received_events_url": "https://api.github.com/users/Y-Hui/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          },
          {
            "id": 180616330,
            "node_id": "MDU6TGFiZWwxODA2MTYzMzA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler",
            "name": "Component: Optimizing Compiler",
            "color": "bfdadc",
            "default": false,
            "description": null
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
          "login": "gsathya",
          "id": 565765,
          "node_id": "MDQ6VXNlcjU2NTc2NQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/565765?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/gsathya",
          "html_url": "https://github.com/gsathya",
          "followers_url": "https://api.github.com/users/gsathya/followers",
          "following_url": "https://api.github.com/users/gsathya/following{/other_user}",
          "gists_url": "https://api.github.com/users/gsathya/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/gsathya/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/gsathya/subscriptions",
          "organizations_url": "https://api.github.com/users/gsathya/orgs",
          "repos_url": "https://api.github.com/users/gsathya/repos",
          "events_url": "https://api.github.com/users/gsathya/events{/privacy}",
          "received_events_url": "https://api.github.com/users/gsathya/received_events",
          "type": "User",
          "site_admin": false
        },
        "assignees": [
          {
            "login": "gsathya",
            "id": 565765,
            "node_id": "MDQ6VXNlcjU2NTc2NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/565765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gsathya",
            "html_url": "https://github.com/gsathya",
            "followers_url": "https://api.github.com/users/gsathya/followers",
            "following_url": "https://api.github.com/users/gsathya/following{/other_user}",
            "gists_url": "https://api.github.com/users/gsathya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gsathya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gsathya/subscriptions",
            "organizations_url": "https://api.github.com/users/gsathya/orgs",
            "repos_url": "https://api.github.com/users/gsathya/repos",
            "events_url": "https://api.github.com/users/gsathya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gsathya/received_events",
            "type": "User",
            "site_admin": false
          }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2024-05-25T02:25:13Z",
        "updated_at": "2024-06-03T20:15:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [X] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [ ] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAMygOzgFwJYSYAEUYCAsgJ4ASEEA1gBQCURwAOsUXIWDt9Ew4ASgjREAvCTKi0jAIzNOnIkRgIcsYqQoIAthEYtJAPjYrVajVvNdLRAPQOiAYV54AJgnUeiAQzB-Ii8ABwRML2xKC3seLBExABplO0snIgBVMiIIcQxsfF4iPEDMCH4eTDBPbwRfP2CEMIjwuGjU1QBzDQBJTDx8PwAbADVhqARZYw4Oy3VNGGI8fsHR8cmxADo4WHUhAG4YywBfZNTjo-SeogALP18cCCI9Pxh6AXjZf0CG0PDItpER5Ebr8AZAp48PQhPBDBDFYghIZ+SidGCCDybCynIgAbTiQlkAF0lJgLphOPlcARtGQAGIQGB6RjLAZ4YZjIYTVgzVSVPgItkc9ZfKQ6Kas1ac7kWfn8arQuGi6QbOSKFKqeY2HTkfSGYwSMy8ubWRa2eyqdJuKo1HzfIJ-FpRI6qSXstZc1VnF2OZxZeG5IhUwpVYqlcoCG1eO2-Jr-VrtC0g3ord3S1XTH2a01LVPCz2yba7cI4Q6zU4ai3qMg4BlMxhoRl6cgQLxDHlZoNNvo4PzYBCbGsNpsttukpPk+yTtLOa6YBB1CHPV7vN35iZfPu+BVI1X2x0AvAIQLLHIwaNdmDFfjAqEwuEIohIlFojHYxJ4tcejdJIg7pViCSnDkpwCAAB4hIy-BeGgfhQEM-DBjSRBUAAgiEISZlwcqXnokgqnWzLGq6HjIEQ8hnPYmB+HoCBkQA5NQCBwpg9HYqSFhamajBHAAPAARlAOCPBSsyEC4Qx4HA9ASMABpGp2jZMps1YaIRw7KV+6aFjsMB7Dg44Wsc06qCYPqiDWfEOIJwmEGZXDMGW5IgMcQA\n\n### Repro steps\n\n```ts\r\nfunction useMyHook() {\r\n  const countRef = useRef(1)\r\n\r\n  return useMemo(() => {\r\n    return {\r\n      // Considered as a dependency\r\n      countRef,\r\n\r\n      // Use of functions is not considered a dependency\r\n      getCountRef() {\r\n        return countRef.current;\r\n      },\r\n    }\r\n    // I had to mark countRef as a dependency to get it to compile in playground.\r\n  }, [countRef])\r\n}\r\n```\r\nIn the code above, countRef needs to be marked as a dependency in order for the playground to compile, but ref is always stable during rendering.\r\n\r\n**playground**: CannotPreserveMemoization: React Compiler has skipped optimizing this component because the existing manual memoization could not be preserved. The inferred dependencies did not match the manually specified dependencies, which could cause the value to change more or less frequently than expected\r\n\r\n**local project**: skips compilation when not marked as a dependency.\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\nplayground",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29587/reactions",
          "total_count": 0,
          "+1": 0,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29587/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29585",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29585/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29585/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29585/events",
        "html_url": "https://github.com/facebook/react/issues/29585",
        "id": 2316457047,
        "node_id": "I_kwDOAJy2Ks6KElRX",
        "number": 29585,
        "title": "[React 19] React 19 runs extra effects when elements are reordered",
        "user": {
          "login": "devongovett",
          "id": 19409,
          "node_id": "MDQ6VXNlcjE5NDA5",
          "avatar_url": "https://avatars.githubusercontent.com/u/19409?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/devongovett",
          "html_url": "https://github.com/devongovett",
          "followers_url": "https://api.github.com/users/devongovett/followers",
          "following_url": "https://api.github.com/users/devongovett/following{/other_user}",
          "gists_url": "https://api.github.com/users/devongovett/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/devongovett/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/devongovett/subscriptions",
          "organizations_url": "https://api.github.com/users/devongovett/orgs",
          "repos_url": "https://api.github.com/users/devongovett/repos",
          "events_url": "https://api.github.com/users/devongovett/events{/privacy}",
          "received_events_url": "https://api.github.com/users/devongovett/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 40929151,
            "node_id": "MDU6TGFiZWw0MDkyOTE1MQ==",
            "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Bug",
            "name": "Type: Bug",
            "color": "b60205",
            "default": false,
            "description": null
          },
          {
            "id": 6688277426,
            "node_id": "LA_kwDOAJy2Ks8AAAABjqcDsg",
            "url": "https://api.github.com/repos/facebook/react/labels/React%2019",
            "name": "React 19",
            "color": "263258",
            "default": false,
            "description": ""
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2024-05-25T00:28:02Z",
        "updated_at": "2024-07-22T16:10:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Summary\r\n\r\nWhen React elements with stable keys are reordered with no other prop changes, React 19 re-runs their effects even though dependencies have not changed. This did not occur in React 18. In addition, this only happens for some of the elements, and not others. As far as we can tell, when reordering an earlier element to be later, the earlier element's effects are run, and the later element's are not. When reordering a later element to be earlier, no effects are run. In React 18, no effects are run in either case.\r\n\r\nThe below code sandboxes swap the keys of two elements to simulate re-ordering. When the keys are swapped, the first element's effects run but the second's do not. In React 18, no effects are run.\r\n\r\nWe think React 18's behavior is correct: since no dependencies have changed and the component is not being unmounted and remounted, it should not call any effects.\r\n\r\nNote that this only happens in strict mode. Without strict mode, no effects are run.\r\n\r\n**Steps:**\r\n* Open sandbox and open console.\r\n* After initial load, clear the js console.\r\n* Click the swap button.\r\n\r\nNote that the effects run for the first element, but not the second.\r\n\r\n* [React 19 Sandbox](https://codesandbox.io/p/sandbox/rough-worker-xfptmg?file=%2Fsrc%2FApp.js%3A1%2C1-24%2C1)\r\n* [React 18 Sandbox](https://codesandbox.io/p/sandbox/rough-worker-forked-y6jht6?file=%2Fsrc%2FApp.js%3A24%2C1)\r\n\r\nIt appears this changed between the last 18.3 canary, and the first 19 canary:\r\n* Not working - [19.0.0-canary-2b036d3f1-20240327](https://www.npmjs.com/package/react/v/19.0.0-canary-2b036d3f1-20240327)\r\n* Working - [18.3.0-canary-c3048aab4-20240326](https://www.npmjs.com/package/react/v/18.3.0-canary-c3048aab4-20240326)\r\n\r\n## Context\r\n\r\nWe noticed this in our tests while upgrading React Aria to React 19. However, it does not only occur in tests, it also occurs in development builds in browser. Specifically, we are seeing this in our drag and drop implementation, where users can drag to reorder elements in a list. The extra effects are causing our code to emit additional events compared with React 18.\r\n\r\ncc. @LFDanLu @snowystinger",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29585/reactions",
          "total_count": 8,
          "+1": 8,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29585/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      },
      {
        "url": "https://api.github.com/repos/facebook/react/issues/29235",
        "repository_url": "https://api.github.com/repos/facebook/react",
        "labels_url": "https://api.github.com/repos/facebook/react/issues/29235/labels{/name}",
        "comments_url": "https://api.github.com/repos/facebook/react/issues/29235/comments",
        "events_url": "https://api.github.com/repos/facebook/react/issues/29235/events",
        "html_url": "https://github.com/facebook/react/issues/29235",
        "id": 2313161236,
        "node_id": "I_kwDOAJy2Ks6J4AoU",
        "number": 29235,
        "title": "Bug: Nested lazy components cause rerendering",
        "user": {
          "login": "raymondwang",
          "id": 4248263,
          "node_id": "MDQ6VXNlcjQyNDgyNjM=",
          "avatar_url": "https://avatars.githubusercontent.com/u/4248263?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/raymondwang",
          "html_url": "https://github.com/raymondwang",
          "followers_url": "https://api.github.com/users/raymondwang/followers",
          "following_url": "https://api.github.com/users/raymondwang/following{/other_user}",
          "gists_url": "https://api.github.com/users/raymondwang/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/raymondwang/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/raymondwang/subscriptions",
          "organizations_url": "https://api.github.com/users/raymondwang/orgs",
          "repos_url": "https://api.github.com/users/raymondwang/repos",
          "events_url": "https://api.github.com/users/raymondwang/events{/privacy}",
          "received_events_url": "https://api.github.com/users/raymondwang/received_events",
          "type": "User",
          "site_admin": false
        },
        "labels": [
          {
            "id": 155984160,
            "node_id": "MDU6TGFiZWwxNTU5ODQxNjA=",
            "url": "https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed",
            "name": "Status: Unconfirmed",
            "color": "d4c5f9",
            "default": false,
            "description": "A potential issue that we haven't yet confirmed as a bug"
          }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2024-05-23T15:03:15Z",
        "updated_at": "2024-08-29T14:14:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is a duplicate of https://github.com/facebook/react/issues/27573, which was closed without response. We're noticing this issue at scale, and it's fairly pronounced, with hundreds of rapid re-renders triggered by a single lazy component. I've forked the replication from original issue to demonstrate that this is still an issue in React 19:\r\n\r\nhttps://codesandbox.io/p/sandbox/react-lazy-rerender-bug-forked-q4q6ym\r\n\r\n\r\n## The current behavior\r\n\r\nThe lazy parent component renders multiple times:\r\n\r\n<img width=\"181\" alt=\"Screenshot 2024-05-23 at 10 54 06 AM\" src=\"https://github.com/facebook/react/assets/4248263/482a32b0-d1e0-4220-a2db-33a5e0cb9254\">\r\n\r\n(In our environment, we've seen the number of re-renders proliferate to the hundreds. This matches the below reproduction.)\r\n\r\n## The expected behavior\r\n\r\nThe lazy parent component should only render one time.\r\n\r\n---\r\n\r\nThe original issue had a reply that included a reproduction that matched the issue we're experiencing more closely: https://codesandbox.io/p/sandbox/react-lazy-suspense-5g75x3\r\n\r\nSimilar to what we're seeing, this repro has hundreds of re-renders, and the number is nondeterministic.\r\n\r\n<img width=\"105\" alt=\"Screenshot 2024-05-23 at 11 06 11 AM\" src=\"https://github.com/facebook/react/assets/4248263/7871459c-de6e-4880-933a-da83498d4720\">\r\n\r\n<img width=\"103\" alt=\"Screenshot 2024-05-23 at 11 06 21 AM\" src=\"https://github.com/facebook/react/assets/4248263/78525dd5-4f2e-49d2-b719-122139423830\">\r\n\r\n---\r\n\r\nOur workaround for now is a lightweight replacement for `Suspense` using the Transition API to defer its lazy children, for usage in nested lazy contexts:\r\n\r\n```tsx\r\nexport const DeferredSuspense: FunctionComponent<SuspenseProps> = (props) => {\r\n  const [isDeferred, setIsDeferred] = useState(true);\r\n\r\n  useEffect(() => {\r\n    startTransition(() => setIsDeferred(false));\r\n  }, []);\r\n\r\n  if (isDeferred) {\r\n    return props.fallback;\r\n  }\r\n\r\n  return <Suspense {...props} />;\r\n};\r\n```",
        "reactions": {
          "url": "https://api.github.com/repos/facebook/react/issues/29235/reactions",
          "total_count": 2,
          "+1": 1,
          "-1": 0,
          "laugh": 0,
          "hooray": 0,
          "confused": 0,
          "heart": 0,
          "rocket": 0,
          "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/facebook/react/issues/29235/timeline",
        "performed_via_github_app": null,
        "state_reason": null,
        "score": 1
      }
    ]
  },
  "error": null
}